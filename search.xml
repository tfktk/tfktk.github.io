<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文件操作</title>
      <link href="/2023/12/17/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/12/17/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>1.找到这个文件，双击打开它<br>open(文件路径，mode&#x3D;””,encoding&#x3D;””)<br>mode:打开这个文件的目的是什么,分为读和写<br>pycharm里面创建的文件默认是UTF-8<br>文件路径:<br>      绝对路径:<br>      d:&#x2F;test1&#x2F;XXX.txt #这种路径不安全,可能不存在<br>      相对路径:相对你当前的程序而言你要找的文件在哪(相对于当前你的程序所在的文件夹)<br>       ..&#x2F;    表示上一次文件夹<br>mode:<br>       r  read(读取)</p><h2 id="读"><a href="#读" class="headerlink" title="读"></a>读</h2><p>用open打开文件路径不报错就说明打开成功，找文件一定要找到相对应的路径<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702217700254-8328f029-68c3-465c-bc0e-d02ca676bcd2.png" alt="image.png"><br>你代表你的程序，文代表文件，f相当于一个管道，mode决定了方向因为是读取，所以市场文件的方向出发到你的程序终止，为什么open的时候没有把整个文件全部加载到内存呢？因为对于该文件是没办法判断大小的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218263980-b15f1ba9-2a4f-4c0c-a5f5-317749359102.png" alt="image.png"><br>这里直接print(f.read()),直接输出资源.txt里面的内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218546907-3107eb95-9281-49ae-960b-04bd26f2131e.png" alt="image.png"><br>centent&#x3D;f.read()#全部读取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702218655474-82e96e1d-a098-444d-be86-c16f4d077c86.png" alt="image.png"><br>经过自我摸索write写的方法已经实践出来了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219051979-35544fe0-07a7-493b-90f7-dc1b65e753c8.png" alt="image.png"><br>结果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219132293-3afe7d03-7421-4ede-aab8-f35ef2ba20a2.png" alt="image.png"><br>readline这是一行一行的读取文本的内容，可以接着读取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219680159-f75e51b4-85de-4473-8f6c-f905e62a00f1.png" alt="image.png"><br>问题来了，打印出来的每一行之间为什么有两行空格呢？<br>这是因为print内部存在一个换行，同时在文本的每一行有一个\n的换行符<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702219892146-afa33ff3-54bc-41f8-9f7b-87c6707a01bf.png" alt="image.png"><br>该如何解决这个问题呢？这么去做：添加一个.strip()。<br> strip可以消除字符串左右两端的空白。空格，换行符，制表符<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220134813-08bb9ebd-33a7-4172-b849-aa1148c7af41.png" alt="image.png"><br>那用什么方法可以看到换行符呢？用readlines进行查看，此时输出的是一个数组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220321397-db7e971a-9b62-4873-b94e-3216c69828a1.png" alt="image.png"><br>readlines和f.read()都无法解决文件太大的问题，所以readline更加重要<br> 最重要的文本读取方式(必须掌握)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702220963610-9e1168c4-7b60-42ab-b4a0-00cf92e16bfb.png" alt="image.png"></p><h2 id="写"><a href="#写" class="headerlink" title="写"></a>写</h2><p>w:write(写入)，write可以创建在该文件路径没有的文件，例如，下面美女.txt是不存在的，当我输入这一段之后进行的是创建了这个美女.txt。<br>w模式下，如果文件不存在就会自动的创建一个文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702550796040-be9eee5e-b285-4355-b48d-014538361ad4.png" alt="image.png"><br>在美女txt中随便输入一些内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551391134-95e9295e-48eb-4a81-be3b-f2303797e329.png" alt="image.png"><br>再次运行发现文件清空:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551453613-aaca6a19-a80f-4dcb-a741-c3cc1e56fc8c.png" alt="image.png"><br>写入一个嘎嘎威在这个美女.txt中<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551546591-f918d816-f29a-410f-b481-662f52388df9.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551609744-3830891f-5f59-45cb-b2b0-9f36553be65d.png" alt="image.png"><br>写入之后记得进行close<br>左边是文件,右边是程序,进行调用插根管子.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551717668-6f95d2e9-643c-416e-895c-15cccb4479a8.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702551867898-ff54fa1c-b511-48cd-a11c-e85275fa672c.png" alt="image.png"><br>案例:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552518330-45a7735e-e71b-4333-ae54-2fe599cdebf5.png" alt="image.png"><br>可是发现一个问题就是写入之后数据是连在一起的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552624853-805f2b12-2aba-415c-85b4-10887c82a6d9.png" alt="image.png"><br>这需要进行换行,可以直接在lst[0]+”\n”:<br>也可以直接去在每一次输出的后面加上f.write(“\n”),也可以实现换行的效果.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702552921079-b9d3a9cd-d343-41e5-b8cf-945426bb67f5.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553033397-3fc0dccc-16c9-4d55-a208-e3b9bb32c795.png" alt="image.png"><br>这个只是单个数据的输出,如果是多个数据那咋办?所以此时就需要用到for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553277094-aea390e6-0c2f-4b6a-a413-d038e4b4b2d5.png" alt="image.png"><br>如果把f&#x3D;open(file&#x3D;”美女.txt”,mode&#x3D;”w”,encoding&#x3D;”utf-8”)放入到循环体中发现永远都是处于清空状态,只有最后一个数据写入时才有效果.此时发现只有赵敏和?.<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553441903-05bdd68b-6b5c-43dc-aeec-d1837eca2c3d.png" alt="image.png"><br>将管道放在循环体外就可以正常写入</p><p>接着就是a模式:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553834877-6bb769e3-f4c8-4695-aace-3e66a98b4a66.png" alt="image.png"><br>此时输出结果为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553885806-82a1d9c3-34f8-4324-a0c0-129753cbb89a.png" alt="image.png"><br>整个笔记为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553980783-8b82e9c8-a93b-415f-9cb0-393152fd7946.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue2写网站</title>
      <link href="/2023/12/17/vue2%E5%86%99%E7%BD%91%E7%AB%99/"/>
      <url>/2023/12/17/vue2%E5%86%99%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一-引入链接"><a href="#一-引入链接" class="headerlink" title="一.引入链接"></a>一.引入链接</h2><p>1.访问element  zn-cn官网，链接：<a href="https://element.eleme.cn/#/zh-CN/component/installation">https://element.eleme.cn/#/zh-CN/component/installation</a>   引入样式和组件库<br>2.在左侧的菜单栏的安装，复制以下代码，在vscode中新建index.php文件，粘贴到index.php文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;app&quot;&gt;                             </span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- import Vue before Element --&gt;</span><br><span class="line"> &lt;script src=&quot;https://unpkg.com/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"> &lt;!-- import JavaScript --&gt;</span><br><span class="line"> &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line">   new Vue(&#123;</span><br><span class="line">     el: &#x27;#app&#x27;,</span><br><span class="line">     data: function() &#123;</span><br><span class="line">       return &#123; visible: false &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.在左侧的菜单栏找到button按钮，复制一个蓝色按钮的代码，粘贴到<div id="app"> </div>中。复制以下三个链接在浏览器打开，然后复制代码，新建index.css  vue.js    index.js，把代码对应粘贴到这三个文件，引入样式和组件库 。<br>1.<a href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">https://unpkg.com/element-ui/lib/theme-chalk/index.css</a><br>2.<a href="https://unpkg.com/vue@2/dist/vue.js">https:&#x2F;&#x2F;unpkg.com&#x2F;vue@2&#x2F;dist&#x2F;vue.js</a><br>3.<a href="https://unpkg.com/element-ui/lib/index.js">https://unpkg.com/element-ui/lib/index.js</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553518275-0506f334-7b1c-4fb0-8bce-e36dca6be611.png" alt="image.png"><br>4.右击index.php,在文件管理器中显示，复制上图四个文件，粘贴到虚拟机win10hei的PHPstudy的根目录下，ctrl+s保存，在phpstudy中打开网站，出现按钮。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553812206-166b195f-d1d8-4e62-9cf8-8cddb5e9cc12.png" alt="image.png"></p><h2 id="二-制作网页"><a href="#二-制作网页" class="headerlink" title="二.制作网页"></a>二.制作网页</h2><p>1.仿照老师发的网页图，制作一个图书管理系统<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702553970138-a22c4747-e55a-4f5c-8dbb-fb1abb7a3447.png" alt="b93486f7a701fa3193a7a784f352c91.png"><br>2.完成之后的图书馆截图：</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用php编写多个网页交互</title>
      <link href="/2023/12/17/%E7%94%A8php%E7%BC%96%E5%86%99%E5%A4%9A%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92/"/>
      <url>/2023/12/17/%E7%94%A8php%E7%BC%96%E5%86%99%E5%A4%9A%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="分享和tk-php的创建"><a href="#分享和tk-php的创建" class="headerlink" title="分享和tk.php的创建"></a>分享和tk.php的创建</h2><p>进行了两位同学的学习分享，感觉日子过得很快，时间慢慢就溜走了，第一位同学分享的是kali linux命令的使用，对ls，cd,mkdir,rmove,cp等等后面的命令进行了补充与说明，也有少量的课外知识一些便捷方法等等，也让我们跟着他回忆了一遍。之后是另一位同学对自己学习python爬虫之后开发出来的一款小说软件，虽然暂时还有bug，例如使用搜索时只能搜一次就要关闭否则就会卡住等等，但是他个人能够对各个流程和代码能够很熟悉也是很厉害的，虽然对我们没有自学的来说还是有点蒙，但是还是感觉很有趣，很有意思。</p><p>之后孙哥对昨天学习的网页跳转接着介绍起来，昨天已经搭配好了环境进入这些环境配置等等就不说了而且也建立了两个页面index.php和link.php进行跳转，这里孙哥直接又新建了一个zhuye.php,由于我自己建立的是tk.php,所以后面就都这么说，也就是现在有三个页面，index.php是个html的表格，然后还包含跳转的link.php,link.php昨天实现的是登录后的界面,当然是不管失败或者成功的，而今天需要对link.php进行改写实现一个效果：登陆失败返回index.php，登陆成功进入到第三个页面tk.php。现在第三个页面tk.php主要实现的功能是注销用户会返回index.php。对于整体而言就是这个思路。不过这里也会将所有的代码记录下来。<br>这里学到了session和cookie的一些相关知识：<br>session是放在服务器的，客户端只会拿到一个ID，用来在服务器端检索对应的会话数据。cookie是放在本地的浏览器上面的可以随意篡改，相对于cookie，session更加安全，因为在cookie上能够看见完整的密码，但是在session上面的密码是进行了加密的，是一段乱组合的密码这样会更加安全。<br>index.php没有变化：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;link.php&quot;</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;username&quot;</span> name=<span class="string">&quot;username&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;password&quot;</span>&gt;密码:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这还是一个简简单单的用户登录页面，后面就是对link.php进行修改。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">     <span class="variable">$u</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">     <span class="variable">$p</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$link</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;192.168.249.140&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;security&quot;</span>)<span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">     <span class="variable">$sql</span>= <span class="string">&quot;select * from users where username=&#x27;<span class="subst">$u</span>&#x27; and password=&#x27;<span class="subst">$p</span>&#x27;&quot;</span>;</span><br><span class="line">     <span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">              <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$u</span>;</span><br><span class="line">               <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;password&#x27;</span>,<span class="variable">$p</span>,<span class="title function_ invoke__">time</span>()+<span class="number">7</span>*<span class="number">12</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">               <span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:tk.php&#x27;</span>);</span><br><span class="line">               <span class="keyword">exit</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;用户名或密码错误!请重新输入！&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;&lt;a href=&quot;./index.php&quot;&gt;返回登录&lt;/a&gt;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">              &#125;  </span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由于上午一直多打了一个括号就导致跳转之后是个空白，而且这里是不提醒的。这里也简单介绍一下代码含义纯粹个人理解：<br>在header后面开启了session，之后的代码没有变化，这里提一下isset是个函数，用来判断是否有这个变量。首先是两个if语句，第一个if语句是去判断用户有没有进行提交，提交了就去给提交的密码和用户名设置变量，然后创建对数据库的连接，这个对于数据库的连接仅仅只是次效性的，也就是一次用完之后就会关闭连接，之后就是mysqli_query这个函数，它的作用是执行sql的查询语句，查询之后将结果返回到变量$result。<br>第二条if语句是用于检查查询结果集中是否存在至少一条符合条件的记录。如果存在匹配的用户记录，即用户名和密码验证成功，则执行其中的代码块，将登录成功时的用户存储在会话的变量中之后创建一个名为password的 cookie，其中存储了用户的密码，并设置了过期时间，成功登陆之后跳转到tk.php的界面。登陆失败就输出失败后的结果并跳转到index.php。由于暂时还没有第三个页面暂时就不展现效果了。<br>之后是第三个页面tk.php的编写，这里已经将comment.php和upload.php两个页面插入进来了，后面就不解释了·。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./comment.php&quot;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./upload.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;当前用户:&#x27;</span> . <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>].<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;logout&#x27;</span>])) &#123;</span><br><span class="line">   <span class="title function_ invoke__">session_unset</span>();</span><br><span class="line">   <span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;您已成功注销。&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:index.php&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;&lt;a href=&quot;?logout=ture&quot;&gt;注销&lt;/a&gt;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;错误!&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码实现了一个简单的用户身份验证和注销功能。具体来说，它的功能包括：</p><ol><li>检查用户是否已经登录，如果是则显示当前用户的用户名。</li><li>提供注销链接，允许已登录用户注销当前会话并返回到指定页面。</li><li>如果用户未登录，则将用户重定向到指定的页面，这里就是登录页。</li></ol><p>if(isset($_GET[‘logout’]))这句话的含义检查是否有名为 logout的 GET 请求参数，如果有，则执行注销操作。<br>echo ‘<h2><a href="?logout=ture">注销</a></h2>‘在页面上输出一个注销链接，链接到当前页面并附带了注销参数。<br>整体一个效果就是这样的：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702478721040-dbcdcc20-14fa-44fb-8591-00731ade891e.png" alt="image.png"><br>上述情况是用户名和密码正确的案例，点击注销就会·跳转到index.php。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702478869490-fa232e94-3711-4c14-86ae-a04e38cd6d35.png" alt="image.png"><br>这里也一样点击返回登录，就会跳转到index.php。</p><p>下午：</p><h2 id="comment-php和upload-php的创建"><a href="#comment-php和upload-php的创建" class="headerlink" title="comment.php和upload.php的创建"></a>comment.php和upload.php的创建</h2><p>评论区页面的创建以及与表的连接<br>首先去重新在同一个数据库下创建一个表。名字就叫comment，设置两个属性为id和comment。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231217093923161.png" alt="image-20231217093923161"><br>这样去设置，点击表新建表安装如图设置：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702479420351-3e390f3c-6dbf-4c18-bf16-9dc2be6c0745.png" alt="image.png"><br>这样设置点击保存。就可以新建表了。<br>接着就是对comment.php进行代码编写：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">&quot;comment&quot;</span>&gt;发表评论&lt;/label&gt;</span><br><span class="line"></span><br><span class="line">        &lt;textarea name=<span class="string">&quot;comment&quot;</span> id=<span class="string">&quot;comment&quot;</span> rows=<span class="string">&quot;10&quot;</span> cols=<span class="string">&quot;80&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交评论&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;h2&gt;傻狗的评论&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>])&amp;&amp;!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$comment</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>];</span><br><span class="line">            <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting!&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">            <span class="variable">$Insert</span> = <span class="string">&quot;insert INTO comment (comment) VALUES(&#x27;<span class="subst">$comment</span>&#x27;)&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$Insert</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;你的评论已成功保存到数据库。&lt;/p&gt;&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;保存评论时出错。&lt;/p&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting!&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * FROM comments ORDER BY id DESC LIMIT 30&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;傻狗的评论&lt;/h2&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;<span class="subst">&#123;$row[&#x27;comment&#x27;]&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;获取评论时有问题,请重试。&lt;/p&gt;&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这个代码前面就是去设置一个文本域，一些按钮，后面的话主要是对自己不理解的部分进行一个介绍：<br> if($_SERVER[‘REQUEST_METHOD’] &#x3D;&#x3D; ‘POST’)这段代码用于检查当前 HTTP 请求的方法是否为 POST 方法。如果条件成立，意味着当前请求是通过 POST 方法提交的表单数据，可以执行相应的处理逻辑。<br>while($row &#x3D; mysqli_fetch_assoc($result))这句话运用到了这个函数mysqli_fetch_assoc，它的作用是将查询结果中提取一行作为关联数组并赋值给变量$row。<br>结果如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702480507863-519e2c95-5f73-404f-acec-0e8708df677e.png" alt="image.png"><br>在数据库中也能显示只是有点慢。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702480416937-53dd421f-7de9-48c6-a794-9abff179b417.png" alt="image.png"></p><p>接着就是对文件上传的页面的代码的编写：<br>首先取名为upload.php，接着进行编写：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &lt;h2 style=&quot;color:#8A2BE2;&quot;&gt;欢迎来到我的小站&lt;/h2&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;form action=&quot;&quot;  method=&quot;post&quot;  enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;label for=&quot;upload&quot; style=&quot;color:#00ff00;&quot;&gt;上传你的dog头 &lt;/label&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;file&quot; id=&quot;upload&quot; name=&quot;file&quot; type=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;label for=&quot;submit&quot;&gt;提交文件&lt;/label&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;submit&quot; id=&quot;submit&quot; type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;h2&gt;下面是接收到的文件&lt;/h2&gt;</span></span><br><span class="line"><span class="string">  &lt;/form&gt;</span></span><br><span class="line"><span class="string">  &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$upload_dir</span> = <span class="string">&quot;upload&quot;</span>;</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>];</span><br><span class="line">    <span class="variable">$file_tmp</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">    <span class="variable">$target_path</span> = <span class="variable">$upload_dir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file_tmp</span>, <span class="variable">$target_path</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#007BFF&#x27;&gt;&quot;</span>; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传成功&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件类型: &quot;</span> . <span class="variable">$file_type</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件大小: &quot;</span> . (<span class="variable">$file_size</span> / <span class="number">1024</span>) . <span class="string">&quot; kB&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件存储的位置: &quot;</span> . <span class="variable">$target_path</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传失败&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;./<span class="subst">$target_path</span>.&#x27;&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这是正确的代码，稍微解释下自己不懂的一些部分：<br>if (move_uploaded_file($file_tmp, $target_path))这段代码用于将上传的临时文件移动到服务器上的指定目标路径。它检查了这个函数move_uploaded_file的返回值，如果返回值为 true，表示文件成功移动到目标路径，可以进行后续操作。<br>直接看结果哈：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481364186-27a1fb50-52e2-4a92-b8f1-c87a3afe421f.png" alt="image.png"><br>接着就是进行整合在tk.php页面中进行插入这两个页面，来吧展示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481466302-4ff4c65f-8dc3-488b-ae7d-641c48e7f5f6.png" alt="image.png"><br>这些整合的页面就可以进行使用的。还是演示一下吧。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702481680266-02ac7623-2922-4cd9-80a4-a9890634bd59.png" alt="image.png"><br>发现了一个问题因为我这个字体有颜色，从传文件部分输到文本域部分字体颜色消失了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>postman后端平台的建立，php语法学习，mysql数据库的安装</title>
      <link href="/2023/12/17/postman%E5%90%8E%E7%AB%AF%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BB%BA%E7%AB%8B%EF%BC%8Cphp%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%EF%BC%8Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2023/12/17/postman%E5%90%8E%E7%AB%AF%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BB%BA%E7%AB%8B%EF%BC%8Cphp%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%EF%BC%8Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="postman后端平台的建立"><a href="#postman后端平台的建立" class="headerlink" title="postman后端平台的建立"></a>postman后端平台的建立</h2><p>昨天进行了数据库的绑定，就是去用数组里面套字典进行无限嵌套：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702385089993-548da897-7479-49cf-b106-2ce71e8b6874.jpeg" alt="580f0db3435ffeb5ff2052fdff3adc1.jpg"><br>数据绑定完成之后，接着学习了前后端交互，通过的是postman去进行一个后台管理<br>postman下载压缩包：<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702385549297-a7672782-55fe-4a3c-b4ab-1021687ec2b7.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702385549297-a7672782-55fe-4a3c-b4ab-1021687ec2b7.zip%22,%22name%22:%22postman.zip%22,%22size%22:248535889,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u00250919-bef4-4d63-bac6-c59f264d4c1%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u5f311aea%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">postman.zip</a><br>下载完成之后打开压缩包进行解压，不要用中文路径。打开之后界面是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702385878622-77225836-db26-48ae-b20e-a9fd761616b2.png" alt="image.png"><br>其中最主要的关件就是在使用Postman与Vue进行数据交互时设计良好的API端点并使用Vue的HTTP客户端发送请求，并在Vue组件中处理响应数据。</p><h2 id="php语法学习"><a href="#php语法学习" class="headerlink" title="php语法学习"></a>php语法学习</h2><p>后面想了一下直接去做数据交互还是有点难度，直接去学PHP基本语法了。<br>学习语法，首先是要去安装phpstudy，因为学习一门语法对于测试的工具首先要安装完成，phpstudy安装的压缩包为：<br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702386175879-43946395-07bd-472a-863b-b188162512df.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702386175879-43946395-07bd-472a-863b-b188162512df.zip%22,%22name%22:%22phpstudy.zip%22,%22size%22:268352063,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u082c78bf-b766-4d31-b570-71bd308ed41%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22uaf76cb07%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">phpstudy.zip</a><br>一样的下载解压，物理机上下载并将其拖入虚拟机进行打开就行，在第一周也学过了phpstudy的学习，这里也就简单的说一些基本上的操作：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702386392224-d6ef1690-291a-4d6a-86e1-b47f0797ed25.png" alt="image.png"><br>进入之后界面是这样，打开Apache和mysql。Apache能够显示php代码，只能在根目录进行解析。<br>只要是网站都放在网站根目录下。接着点击网站，管理，打开配置，高级配置这里打开目录索引，点击确定就行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702386606874-322562be-93e2-4120-a09c-5ff789f68f88.png" alt="image.png"><br>再次点击管理，打开网站根目录，里面的全部删掉，新建一个index.php作为页面首页,<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702387710081-dfba3572-53b9-43d5-95e0-c7a65f588708.png" alt="image.png"><br>这里是后续截图，所以没法清空，但是可以看见网站的根目录由于在虚拟机上面没有安装vscode,只能在物理机新建1.php，注意找到根目录后点击右上角的查看，打开扩展名和隐藏项目，好接着来用vscode打开1.php进行编写代码：<br>首先介绍了php的基本语法：<br>用<?php开头，?>结尾，php和python不一样，如果需要定义变量前面要加$,例如：$a&#x3D;”1”;注意；不要掉，要不然必然报错，接着孙哥就带我们了解了php的一些特性：<br>特性1.变量与变量之间用点连接,变量与符号之间也是点连接，符号与符号也是一样。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$s</span>=<span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;aaa&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span>= <span class="variable">$a</span>.<span class="variable">$s</span>.<span class="string">&quot;bbb&quot;</span>;<span class="comment">#特性:变量与变量之间用点连接,变量与符号之间也是点连接</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时结果也是直接进行连接就行也就是按照顺序来的123aaabbb。<br>特性2：弱类型匹配两个等号就是对的输出1，三个等号强类型就是错的输出2</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> ==<span class="variable">$b</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span>;<span class="comment">#弱类型匹配就是对的输出1，三个等号强类型就是错的输出2</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">所以此时输出是<span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$a</span> ===<span class="variable">$b</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span>;<span class="comment">#弱类型匹配就是对的输出1，三个等号强类型就是错的输出2</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">此时输出为<span class="number">2</span>.</span><br></pre></td></tr></table></figure><p>给出了两个练习题：<br>一个是鸡兔同笼问题：假设在笼子里有头数为8的动物，总共有22只脚。<br>另一个问题是：n张5毛，y张1块，z张10块，t张50，x张100，问我手上一共有156钱，一共有多少种组合，满足我手上的钱<br>php代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="number">8</span>-<span class="variable">$i</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span>*<span class="variable">$a</span>+<span class="number">4</span>*<span class="variable">$i</span>==<span class="number">22</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$i</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">#输出为5和3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countCombinations</span>(<span class="params"><span class="variable">$totalMoney</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$combinations</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$n</span> = <span class="number">0</span>; <span class="variable">$n</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">0.5</span>; <span class="variable">$n</span>++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">1</span>; <span class="variable">$y</span>++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$z</span> = <span class="number">0</span>; <span class="variable">$z</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">10</span>; <span class="variable">$z</span>++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$t</span> = <span class="number">0</span>; <span class="variable">$t</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">50</span>; <span class="variable">$t</span>++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="variable">$x</span> = <span class="number">0</span>; <span class="variable">$x</span> &lt;= <span class="variable">$totalMoney</span> / <span class="number">100</span>; <span class="variable">$x</span>++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> ((<span class="variable">$n</span> *<span class="number">0.5</span> + <span class="variable">$y</span> * <span class="number">1</span> + <span class="variable">$z</span> * <span class="number">10</span> + <span class="variable">$t</span> * <span class="number">50</span> + <span class="variable">$x</span> * <span class="number">100</span>) == <span class="variable">$totalMoney</span>) &#123;</span><br><span class="line">                            <span class="variable">$combinations</span>++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$combinations</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$totalMoney</span> = <span class="number">156</span>;</span><br><span class="line"><span class="variable">$numberOfCombinations</span> = <span class="title function_ invoke__">countCombinations</span>(<span class="variable">$totalMoney</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;一共有 &quot;</span> . <span class="variable">$numberOfCombinations</span> . <span class="string">&quot; 种组合满足手上的钱为 &quot;</span> . <span class="variable">$totalMoney</span> . <span class="string">&quot;。\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">#输出为2337</span></span><br></pre></td></tr></table></figure><p>下午：</p><h2 id="mysql数据库的安装"><a href="#mysql数据库的安装" class="headerlink" title="mysql数据库的安装"></a>mysql数据库的安装</h2><p>输入参数并输出在浏览器上面：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这些php代码最终都是要到虚拟机上面运行的，将其复制在index.php的代码中，保存点击管理运行网站是个空白，但是可以输入?a&#x3D;一个值就会在浏览器显示出来。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702389446554-2b007084-04e6-4954-b1fd-18476a5f89b1.png" alt="4859e1e34e86b709d20fba5df4722d6.png"><br>后面下载了Navicat Premium 12，这是一个数据库管理的工具，<br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702390247344-67e77a33-7382-4a80-b115-cde9f3c0e751.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702390247344-67e77a33-7382-4a80-b115-cde9f3c0e751.zip%22,%22name%22:%22Navicat%20Premium%2012.zip%22,%22size%22:70091249,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22uc57cca9e-a92e-4ce3-a759-a34e0610b35%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u12290c48%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Navicat Premium 12.zip</a><br>这是连接上的mysql，没连接上就是一个空的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390240525-79affe19-8331-4bea-b74f-794b744fd5e8.png" alt="image.png"><br>点击连接，出现如下界面，主机这里是设置安装phpstudy的虚拟机ip地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390334305-4e31eaf5-72f2-4e16-a51f-d21838d494a4.png" alt="image.png"><br>如果连接不成功就要对物理机的mysql进行设置，当然前提是保证phpstudy的mysql模块是在启动状态。<br>如何去设置呢，按照这几步操作就可以了<br>找到当前目录：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390705673-0f4e495d-450b-45a4-9928-bd5a96b433d7.png" alt="image.png"></p><p>在目录处输入cmd，接着在命令行输入.\mysql.exe -u root -p<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390959827-171e6bdb-00f7-43be-ba2f-43dc2f95b523.png" alt="image.png"><br>use mysql;<br>update user set Host&#x3D;’%’ where User&#x3D;’root’;<br>flush privileges;<br>按照一步步输入，完成之后就可以进行mysql重启，接着对Navicat Premium 12进行配置看看能否连接，如果你也和我一样遇到了mysql无法进行开启一直自动关闭建议重开虚拟机。<br>连接完成后新建一个security数据库，直接新建查询，导入一个表格，也就是如图所示的结果：<br><a href="https://www.yuque.com/attachments/yuque/0/2023/sql/40666686/1702394433320-d1ff9aef-c41a-4569-adb1-8682c87f8585.sql?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/sql/40666686/1702394433320-d1ff9aef-c41a-4569-adb1-8682c87f8585.sql%22,%22name%22:%22security.sql%22,%22size%22:3723,%22ext%22:%22sql%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22ueadf0ce6-9630-4166-8f7c-46477d2663b%22,%22taskType%22:%22upload%22,%22type%22:%22%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ue818ca07%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">security.sql</a><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702390240525-79affe19-8331-4bea-b74f-794b744fd5e8.png"><br><a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702391867884-5544cf1f-2d97-43e0-b496-332d92204651.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1702391867884-5544cf1f-2d97-43e0-b496-332d92204651.zip%22,%22name%22:%22sqli.zip%22,%22size%22:3810311,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u5ed55401-ec34-43ba-aed0-47a81987548%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22fYkhc%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">sqli.zip</a>复制这个文件到phpstudy的网站根目录之下。解压之后输入在浏览器搜索框输入这段代码就会出现<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702394734188-f6933b71-63dd-43c1-b5bc-ef5c232310d1.png" alt="3c0c0b7b99aea58f19bc68e604bc966.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702394794104-877ab93d-7f12-4f44-acfc-8a8e85954f2b.png" alt="173610f5ac3a837deb17a375f4c2c16.png"><br>由于mysql版本比较旧导致出现了一些语法错误。因为对于一个事物而言总是不断进步的就像一个代码在同一个应用不同的版本之下就有可能会产生报错。<br>之后就可以接着继续下面的操作：<br>在vscode里面新建一个index.php也要在虚拟机的phpstudy新建一个link.php,用于专门放置php请求的代码,此时对index.php专门去做一个html5的代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;link.php&quot;</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;username&quot;</span> name=<span class="string">&quot;username&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">&quot;password&quot;</span>&gt;密码:&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">      &lt;td&gt;&lt;input type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> required&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>link.php能够看懂，但是自己具体还是不会写，代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type: text/html; charset=utf-8&#x27;</span>);<span class="comment">#这行代码设置响应的内容类型为 text/html，编码格式为 utf-8，确保向浏览器输出的内容能够正确显示中文等特殊字符。</span></span><br><span class="line"></span><br><span class="line">     <span class="variable">$u</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">     <span class="variable">$p</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$link</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;192.168.249.140&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;security&quot;</span>)<span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line">     <span class="variable">$sql</span>= <span class="string">&quot;select * from users where username=&#x27;<span class="subst">$u</span>&#x27; and password=&#x27;<span class="subst">$p</span>&#x27;&quot;</span>;</span><br><span class="line">     <span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">   <span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$row</span>) &#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;your name :&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>]. <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;your password :&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;No matching user found.&#x27;</span>;</span><br><span class="line">    &#125;<span class="comment">#这段代码根据查询结果 $row 判断是否找到了匹配的用户记录。如果找到了，就输出用户名和密码；如果没找到，就输出 “No matching user found.”。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这两行代码分别粘贴到phpstudy的index.php和link.php。<br>如果哪一行出现错误就加上&#x2F;&#x2F;一个个进行查看。上面的两行代码都可以，再次点击网站，管理，打开网站就能看到如下界面，首先输入两个admin，这两个是在表里面显示上的都有。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702393094901-9052d50e-a2b5-4439-981d-54af17ec6820.png" alt="image.png"><br>点击登录就会发送请求到link.php网页上，此时登录成功就会显示如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702437480641-8218646f-20e6-4bbd-9f42-263d245a7de8.png" alt="image.png"><br>如果随便输入表格当中没有的就会产生报错输出的时候取消了字体的颜色：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702393727564-d5be7afe-10d3-412d-9b9c-3406845dfa45.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue的再次学习</title>
      <link href="/2023/12/17/vue%E7%9A%84%E5%86%8D%E6%AC%A1%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/12/17/vue%E7%9A%84%E5%86%8D%E6%AC%A1%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p> 上午：<br>复习vue的安装与使用<br>下载node.js npm慢的话用阿里云的 npm config set registry<br>接着就是创建项目vue-project1<br>打开项目，安装element-plus，分为下面两个步骤：<br>npm install element-plus –save<br>npm install -D unplugin-vue-components unplugin-auto-import<br>接着分别对main.js和vite.config.js进行配置<br>由于这些详细的配置过程在上一周已经学过，就简单的说一下。<br>这里注意一个问题：<br>main.js里面加入这行import ‘.&#x2F;assets&#x2F;main.css’#加入这行将会使按钮居中，不过问题不大，删除就好了。<br>试了一个红色按钮，成功了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702338740796-cf8e7b2f-3659-46c1-8a24-9347abb14bcb.png" alt="image.png"><br>重点来了：<br>今天的vue学习主要是去综合使用vue和Evelent-UI去做一个页面并完成布局，下图是所要实现的效果图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702306128125-d7d13d7d-5743-43ab-ad38-f5c8834cddad.png" alt="f1f299db411c6eeedbf4c6c5afb4ba8.png"><br>首先上述各项操作完成之后可以做个测试，不报错就成功，只需要对APP.vue进行编写就行：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026551651-97483b2f-5bca-45e7-8f5a-685c7530351b.png"><br>以上操作做完APP.vue的布局就是这个样子的。</p><p>对整体以及侧边栏先进行布局<br>首先打开evelent-plus的官网，找到组件，之后找到布局容器<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339181000-d843e4ab-2fc9-460e-8de4-cc7e433c7c67.png" alt="image.png"><br>将template和script的代码分别复制到对应位置，注意template的位置应该放在aside里面。<br>此时效果是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339318612-934bdbad-1002-416e-b2b0-c8b06ced7cf5.png" alt="image.png"><br>接着找到evelent-plus的组件中的菜单，侧边栏<br>找到这款因为最接近：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702339417376-a91c449b-0dd7-4c31-8d6b-0a43642dffe8.png" alt="image.png"><br>也分别将template和script的代码分别复制到对应位置<br>script导入之后发现报错：原因是因为在整个菜单中采用的是ts，需要变成js才行。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123;</span><br><span class="line">  Document,</span><br><span class="line">  Menu as IconMenu,</span><br><span class="line">  Location,</span><br><span class="line">  Setting,</span><br><span class="line">&#125; from &#x27;@element-plus/icons-vue&#x27;</span><br><span class="line">const handleOpen = (key, keyPath) =&gt; &#123;</span><br><span class="line">  console.log(key, keyPath)</span><br><span class="line">&#125;</span><br><span class="line">const handleClose = (key,keyPath) =&gt; &#123;</span><br><span class="line">  console.log(key, keyPath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除key和keyPath的“:value”此时能够运行成功<br>删掉下图中的第一个<el-col :span="12">以下的代码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340100461-76e37334-2c10-41ee-9f97-5d5a29655d97.png" alt="image.png"><br>将第二个的span值换成24，保证能占整个侧边栏的全屏<br>后面就去进行颜色以及设置class修改文字就可以了<br>完整的代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Document</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">User</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Shop</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Expand</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">PieChart</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Setting</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Ship</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">class</span>=<span class="string">&quot;ce&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#334256&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span> <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span> @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">User</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>用户选择<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>删除用户<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>选择用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Setting</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Shop</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Document</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PieChart</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>数据统计<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"> <span class="selector-class">.ce</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">15vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#334256</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125; </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里对与前面的标签也可以去element-plus里面去找，找完之后复制到相对应的位置，不要忘记在script里面也要进行添加，如何添加的上面代码已经进行了展示。<br>现在侧边栏已经做好了看看效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340724163-bb31d940-ce1a-4605-aceb-cc88b7d1a9c6.png" alt="image.png"><br>将代码多留出几处空格，这个样子更方便去编写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702340914156-80d118de-9797-43cc-885c-c8366a9131db.png" alt="image.png"><br>接着去做header部分：<br>header部分整体上可以用一个盒子，当成一行分为列进行编写：<br>这样将盒子的一行设置为三个部分三个8分别代表左，中，右三个位置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702341192784-b6dd8198-aefa-4b7c-a212-037c27b8542f.png" alt="image.png"><br>之后就很简单了，按照给的要求进行编写，设置格式的就用class就行了标签就按照上图去进行添加就行。<br>代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;style-box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align: left;font-isze: 20px;color: #000;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Expand</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>首页 /用户列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Ship</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.style-box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">200vh</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">5vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的style-box是来设置阴影的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342153053-bc8968f9-be0e-4e1f-8788-295d6403b3a7.png" alt="image.png"><br>后面就是对main部分进行设置<br>首先是表格：<br>找到element-plus的table表格部分：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342427095-ee3d4093-0c24-4d3d-b8fb-2eb45d79e820.png" alt="image.png"><br>选择这个，一样对template和script的内容进行复制，分别粘贴即可<br>如果script出现报错的话这说明有语句重复了删除一个就行，效果是这样的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342667636-4a83a650-a5cb-4b7c-ad10-a30fdcba79bb.png" alt="image.png"><br>接着设置分页：<br>一样是去element-plus进行查找<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342753872-2c8c418e-5ed3-472e-921d-eeda7d4481a4.png" alt="image.png"><br>这个代码只需要后面部分就可以了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342888119-5e409a25-ab98-4e8b-b53e-0cab336f3e4b.png" alt="image.png"><br>这一串代码进行。效果就是这样。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702342916533-2ea71393-c7df-4677-a2bc-befa8c19e2a6.png" alt="image.png"><br>数据进行修改就去const tableData 里面进行修改：<br>这里对状态和操作需要单独添加按钮，也要注意添加相关的script信息，设置如图样式即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702343039197-9c754d4a-c62a-4271-95fc-5cf36faeaf75.png" alt="image.png"><br>整体上可以把header和main设置一个卡片card，整体的代码为：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Document</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">User</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Shop</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Expand</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">PieChart</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Setting</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Ship</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params">key, keyPath</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Check</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Delete</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Edit</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Message</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Search</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Star</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> input = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> value1 = <span class="title function_">ref</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> value2 = <span class="title function_">ref</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = [</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Mary&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;1234567@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;123456789&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;嘎嘎&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-06-01&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;jome&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;12345566@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;12345645789&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;哈哈&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2017-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;gth&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;tony&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;12345586@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;123434567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;gaga&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;12364567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;7&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    number : <span class="string">&#x27;8&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;123456@qq.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">people</span>: <span class="string">&#x27;实践&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">time</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;common-layout&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">class</span>=<span class="string">&quot;ce&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#334256&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span> <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span> @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">User</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>用户选择<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>删除用户<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>选择用户<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Setting</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Shop</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Document</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PieChart</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>数据统计<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;style-box&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align: left;font-isze: 20px;color: #000;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Expand</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>首页 /用户列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Ship</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;box-card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text item&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span>  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索内容&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;2&quot;</span>&gt;</span>   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1&quot;</span>&gt;</span>   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">                 </span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;number&quot;</span> <span class="attr">label</span>=<span class="string">&quot;#&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;people&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;status&quot;</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;value1&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;time&quot;</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;option&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Star&quot;</span> <span class="attr">circle</span> /&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">              <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-pagination</span> <span class="attr">v-model:current-page</span>=<span class="string">&quot;currentPage4&quot;</span> <span class="attr">v-model:page-size</span>=<span class="string">&quot;pageSize4&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">:page-sizes</span>=<span class="string">&quot;[100, 200, 300, 400]&quot;</span> <span class="attr">:small</span>=<span class="string">&quot;small&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">:background</span>=<span class="string">&quot;background&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">layout</span>=<span class="string">&quot;total, sizes, prev, pager, next, jumper&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;400&quot;</span> @<span class="attr">size-change</span>=<span class="string">&quot;handleSizeChange&quot;</span></span></span><br><span class="line"><span class="tag">                  @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.ce</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">15vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#334256</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.style-box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">200vh</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">5vw</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所展现的结果是：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702343304570-e585a325-e930-4062-9a92-2dcf8e886604.png" alt="image.png"><br>后面尝试做了下用列表进行数据绑定，连name的报错，直接划掉了。这上面结果还是有缺点就是状态部分不能分开是一起的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运算符</title>
      <link href="/2023/12/10/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2023/12/10/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<p>1.算术运算<br> +- * &#x2F; %  &#x2F;&#x2F; (整除)<br>2.比较运算<br>&lt; &gt; &lt;&#x3D; &gt;&#x3D; &#x3D;&#x3D;(判断左右两端是否一致)  !&#x3D;<br>3.赋值运算<br>      &#x3D; +&#x3D;  -&#x3D; *&#x3D;<br>a +&#x3D;b  &#x3D;&gt;  a&#x3D;a+b<br>4.逻辑运算<br>     and,并且，左右两端同时成立，结果才成立<br>     or，或者，左右两端有一个成立，结果就成立<br>     not，非，非真既假，非假既真<br>当and和or和not同时出现时最好加上括号，不会产生歧义或者不会理解的问题<br>如果没有括号怎么办：<br>记住运算顺序：<br>先算括号&gt;算not&gt;算and&gt;算not<br>5.成员运算<br>in :判断xxx在xxxxx出现了<br>not in:判断xxx不在xxxxx出现了</p><p>%取余数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702132972083-6be23800-3cb8-499a-8162-ccd4f8a8c252.png" alt="image.png"><br>判断该数字是不是35的倍数：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133318759-e0731124-3cea-4666-8d79-87c863a73b00.png" alt="image.png"><br>&#x2F;&#x2F;整除出现的结果是商<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133573227-fd44f06b-6181-4491-85b3-ac2389695180.png" alt="image.png"><br>直接去除的结果是小数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133622966-d38ac7ae-99c7-4179-aa0f-64d9a6747400.png" alt="image.png"><br>一个&#x3D;是赋值，两个&#x3D;是条件判断<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702133942006-07aee2da-11f7-4473-aa42-af648e8cb1f2.png" alt="image.png"><br>赋值运算将a和b的值进行互换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134397706-42a4522a-4efb-43fe-bed1-48d3c3db9b84.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134367983-0d340e6f-a81f-4470-8495-96ad31cc5cc4.png" alt="image.png"><br>用到中间变量进行备份就不会出现数据覆盖的情况，此时a和b能够进行互换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134569783-6b197f54-2be3-45f1-89b9-96b4a430ff7f.png" alt="image.png"><br>此种情况只能用于python<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702134764626-2f083650-41ae-42f3-bb4e-59f2dd653126.png" alt="image.png"><br>从1加到100的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135076054-2f10f137-57d6-41a8-9b14-0663b36bfd1e.png" alt="image.png"></p><p>逻辑运算：<br>        and运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135310356-a59d1b80-4e70-4133-96e8-adcd9b23032a.png" alt="image.png"><br>      or运算：或者<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135469405-8b8d1415-0d8a-4ab1-b798-dc71e78c75ef.png" alt="image.png"><br>not运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135657582-2496e12e-6f3f-42df-893f-182e9b92297b.png" alt="image.png"><br>模拟用户登录：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702135950339-68bfd9b6-5731-4163-bf03-8ec7870b5e26.png" alt="image.png"><br>成员运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702136667718-d8ad0816-d8f0-419f-9078-25e9467e210b.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bytes</title>
      <link href="/2023/12/10/bytes/"/>
      <url>/2023/12/10/bytes/</url>
      
        <content type="html"><![CDATA[<h2 id="编码和解码"><a href="#编码和解码" class="headerlink" title="编码和解码"></a>编码和解码</h2><p>encode编码：进行转换<br>b’xxxxxx’ bytes类型 一个\xx是一个byte也就是说邓官诚gbk转换成byte类型是6个byte<br>b’xxxxxx’ bytes类型 一个\xx是一个byte也就是说邓官诚utf-8转换成byte类型是9个byte<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131454433-aca89cc7-b6ac-4902-b564-7e7554c913f1.png" alt="image.png"><br>怎么把gbk转换成utf-8类型的呢?<br>先变成文字符号(字符串)此时用到了解码decode<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131734543-9f0376a9-7274-4360-9a39-af111322fd87.png" alt="image.png"><br>再去重新定义一个变量对字符串进行编码encode<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702131886957-3b0c7a20-8fa1-48be-acbc-676eb84441fe.png" alt="image.png"><br>在这段文字中asd会正常显示因为是英文，英文不管在什么编码中都是正常显示的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702132364879-fa954fa2-ae5b-478f-b135-88ccd94cfb1d.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>字符集和编码</title>
      <link href="/2023/12/10/%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81/"/>
      <url>/2023/12/10/%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>二极管  电子电路<br>0 1 &lt;&#x3D;&gt; 1010101010 &#x3D;&gt; 二进制的转化成十进制:99，88，77<br>摩斯码 …_ _ _ &#x3D;&gt; a<br>100000000 &lt;&#x3D;&gt; a<br>ASCII &#x3D;&gt; 编排了128个操作符，只需要7个0和1就够了，01111111 &#x3D;&gt;1 byte &#x3D;&gt; 8 bit<br>ANSI &#x3D;&gt; 一套标准 每个字符 16bit &#x3D;&gt; 2byte<br>00000000 01111111  2**16&#x3D;65536个编码<br>到了中国，gb2312编码   gbk编码(Windows默认就是这个)，gb18030编码<br>01000101 01111111 &#x3D;&gt; 中<br>到了台湾，big5编码<br>到了日本，JIS编码<br>01000101 01111111 &#x3D;&gt; ありがとうございます</p><p>Unicode:万国码 中文<br>早期Unicode没有意识到这个问题 UCS -2 2个字节<br>进行了扩充 UCS -4 4个字节 1mb<br>00000000 00000000 00000000 01111111 4mb</p><p>utf:是可变长度的Unicode，可以进行数据的传输和存储 -&gt;行书，楷书，隶书<br>utf-8: 最短的字节长度8<br>英文:8bit 1byte<br>欧洲文字:16bit 2byte<br>中文:24bit  3byte<br>utf-16:最短的字节长度16</p><p>总结:<br>1.ascii:8bit 1byte<br>2.gbk:16bit 2byte Windows默认<br>3.unicode:32bit 4byte(没法用，只是一个标准)<br>4.utf-8:     mac默认<br>     英文:8bit 1byte<br>     欧洲文字:16bit 2byte<br>     中文:24bit  3byte<br>gbk和utf-8不能直接进行转化<br>我军密码本 &#x3D;&gt;   文字  &#x3D;&gt;   敌军密码本<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702127587899-25f30927-e7d3-418d-9a06-14587d7a98f9.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>字典</title>
      <link href="/2023/12/10/%E5%AD%97%E5%85%B8/"/>
      <url>/2023/12/10/%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>首先字典是以键值对的形式存储数据的<br>字典的表示形式：{key:value,key2:value,key3:value}<br>字典的查找：val&#x3D;dic[“key”],子典查找用起来只是把索引换成了key<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702114147270-4dae82d3-dacf-4f7a-b57b-1d60439e972f.png" alt="image.png"><br>字典的key必须是可哈希的数据类型：int，str，tuple，bool。不可哈希：list，dict，set集合<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702114909730-5fb540e3-11f5-4c17-8951-72c1e25b5cd2.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115252005-6bff7086-6288-421f-8fe2-b6a9aa480a5a.png" alt="image.png"><br>字典的value可以是任意数据类型。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115180547-21b2cdc7-c5a6-44ad-9a99-f8f158bc64dd.png" alt="image.png"></p><p>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702115349775-2b51e6e2-a78e-4c35-a2ac-e28dc91dd1df.png" alt="image.png"></p><h2 id="字典的增删改查"><a href="#字典的增删改查" class="headerlink" title="字典的增删改查"></a>字典的增删改查</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><p>直接dic[“key”]&#x3D;value就可以进行添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116097872-7822580c-95a0-4a1e-b291-5583adda84e0.png" alt="image.png"><br>setdefault设置默认值，这里是设置时是由’,’隔开，如果以前有了tom了，此时setdefault就不起作用了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116491176-691bdec2-c5f6-4a38-9494-ffe4c117556c.png" alt="image.png"><br>这是一个setdefault的例子。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116691262-e4a8e582-2394-49d5-8733-d0d8fc63e9e8.png" alt="image.png"></p><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>字典里面不会出现同一个key值，如果出现了后面的value将会覆盖前面的值，也就是此时字典里面已经有jojo了，再次进行执行时就是修改操作了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116014734-a1c63b72-048d-43f0-9915-ab4fa9b5d5f8.png" alt="image.png"></p><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p>字典的删除用pop，根据key进行删除<br>del dic[key]也能删除，但是不太好<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702116856507-577f0180-34c7-4b72-8057-71a25da90205.png" alt="image.png"></p><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><p>直接用dic[key]进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117381325-86135cac-fcac-4992-a4ac-61a7382df774.png" alt="image.png"><br>也可以用dic.get(key)进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117546773-624eafc6-1762-4c24-888a-8b4d3824b397.png" alt="image.png"><br>但是各自的缺点是key是否存在运行后的结果产生分歧<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702117967915-bba396e8-cd8c-4e5e-98a7-ef9f34e530ec.png" alt="image.png"><br>说一下None：单纯就是空</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118074360-233af316-2e8e-4b64-86c0-ead3b9b024c7.png" alt="image.png"><br>举了一个简单的例子：让程序看起来更加舒服<br>一开始是程序会报错，看起来很不舒服：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118990436-d9d15f17-b418-47f7-98db-a6102aadc63e.png" alt="image.png"><br>后面用了if语句进行修改程序之后程序就变得更加顺畅。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702118877751-be414cd8-ae52-452c-91ad-4f718cb6e150.png" alt="image.png"><br>如果是用第一种dic[key]，程序直接报错，对用户很不友好<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119120895-0858e8c6-7a96-44e5-963c-865cc7bc7884.png" alt="image.png"></p><h2 id="字典的循环和嵌套"><a href="#字典的循环和嵌套" class="headerlink" title="字典的循环和嵌套"></a>字典的循环和嵌套</h2><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>直接用for循环，拿到key值：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119790615-0fe3325c-7896-4b09-bb27-093e9ad815f3.png" alt="image.png"><br>直接加个dic[key]<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702119946034-4bc35ace-0681-4427-8023-f7bbe93f13b9.png" alt="image.png"><br>拿到所有的key值可以用dic.key()的方法<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702120610770-fdd80a16-b647-40e5-9a56-9a42c47e883e.png" alt="image.png"><br>如果想以列表的形式输出的话只需要加个list，为了验证还特别加了一个type去验证dic.key的数据类型<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702120791057-dde0538a-0ebe-419e-a0c7-31c1ea667065.png" alt="image.png"><br>拿出字典中的values<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121194442-bda81cd6-703d-45d5-a14b-d0a466c5d5bb.png" alt="image.png"><br>将其放入一个列表中，原理与key值放入一个列表一样<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121283497-5b8dd006-e620-4635-b1d5-9ec1ab35e6da.png" alt="image.png"><br>直接拿到字典中的key和value<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121402012-894ed2c8-c2b2-4b86-8e48-39819dcde7eb.png" alt="image.png"><br>当直接用列表进行输出时发现有点复杂<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121595081-995abbb0-c742-4fae-a1d2-3b41623900b9.png" alt="image.png"><br>以for循环进行遍历一遍，再将它拿出来进行编号就更容易理解。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702121778388-8e12c7ab-9e6a-48ef-8c89-d86a61107008.png" alt="image.png"><br>元组和列表都可以进行该操作，该操作称之为解构(解包)，但是如果拆开后的元素与等号前面的元素对不上就会报错。<br>解构：把一个元组或者列表的结构拆开，把拆开之后的元素分别赋值给等号前面的这两个变量<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122088973-19df452e-e2b3-4fa0-a6d7-6cc6086050c2.png" alt="image.png"><br>此时将上述说到的解构用到程序中，三行就能解决，使程序更加精简但还不是最简洁的。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122614601-928890eb-950b-4218-a2cf-c5a4c14c3226.png" alt="image.png"><br>最后直接两行解决，直接拿到字典中所有的key和value<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702122834707-15d4b51a-bb54-412b-8646-3fbad10c0ef0.png" alt="image.png"></p><h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>这个有点麻烦，我就不写了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123210062-444e9b25-3583-4661-8b89-5ed8a2c83e71.png" alt="image.png"><br>直接通过</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=wangfeng[<span class="string">&quot;wife&quot;</span>][<span class="string">&quot;assistant&quot;</span>][<span class="string">&quot;name&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>就能直接输出<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123590014-2020a02c-3f19-4e11-935f-75d17c154bfe.png" alt="image.png"><br>如果需要给其中某一个孩子进行加一岁的操作就可以先拿出来之后塞回去，做个等式就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702123703103-82a20e6b-de1f-42c0-982a-bdcd0abc2f5e.png" alt="image.png"></p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>字典的循环删除<br>字典在你进行迭代和循环的时候改变了大小：dictionary changed size during iteration，出现如下结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702125919312-5257e421-45bd-4fdc-b171-7c2ca79abc36.png" alt="image.png"><br>但是如果重新创建一个新列表存放key值，就能够完成接下来的操作。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702126165696-80f5aaa6-d1a0-45e8-a2dc-11577925e5d1.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>set集合</title>
      <link href="/2023/12/10/set%E9%9B%86%E5%90%88/"/>
      <url>/2023/12/10/set%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>单纯的{}显示的类型是字典<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107603241-4265750d-70d2-4102-aab8-fdc128757478.png" alt="image.png"><br>随机输入数字或者字符串出现的结果是随机的并不是所展现出来的输入什么，输出就是什么，也就是说<strong>set集合是无序的</strong>。</p><p>不可哈希的数据类型为列表，也就是说set集合里面不能放列表<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107895508-8fa2051b-cc88-4236-a1d0-c8b3aa599841.png" alt="image.png"><br>不可哈希的简单介绍：在python里面对某些数据类型是要做一定处理的，存储的数据是根据能不能够哈希，也就是哈希值来进行存储的，<br>set集合要求存储的数据是能够进行哈希计算的。<br>不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据<br>可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)<br>不可哈希的数据类型是可变的数据类型：list,dict,set集合{1，2，3，}</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set集合要求存储的数据是能够进行哈希计算的。</span><br><span class="line">不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据</span><br><span class="line">可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)</span><br><span class="line">不可哈希的数据类型是可变数据类型：list,dict,set集合&#123;1，2，3，&#125;</span><br></pre></td></tr></table></figure><p>这也就是说set集合里面不能继续加set集合，会报错</p><p>空的set集合这样创建：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702109344010-d2b94b4f-e0ee-4176-a344-4052f0f01be8.png" alt="image.png"><br>进行添加数据直接用add()就可以了。</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702109482229-92fc47bb-a5da-4bd0-9167-e2b8651002f4.png" alt="image.png"><br>set集合既没有索引也没有切片。<br>由于set集合是无序的，所以测试的时候无法进行验证。pop删除的是最后一个元素<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110254856-958038c7-c617-4a45-84f5-ba46a426c4e8.png" alt="image.png"><br>所以pop删除用的不多，用的多的是remove<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110402762-147fe607-ce06-4b24-8b23-122dcd0e8ed8.png" alt="image.png"><br>想要修改就得先删除后添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110629665-f68496df-7598-4c55-beed-6e79489871d2.png" alt="image.png"><br>set集合查找只能通过循环：for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110873974-4ec0a498-9bd3-4a74-89a8-3ca098462a30.png" alt="image.png"><br>最后的笔记：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set集合</span><br><span class="line">不可哈希：python中的set集合需要对数据进行存储时，需要对数据进行哈希计算，根据计算出的哈希值来存储数据</span><br><span class="line">set集合要求存储的数据是能够进行哈希计算的。</span><br><span class="line">可哈希的数据类型是不可变的数据类型。例如：纯数字1(int),字符串(str),元组(tuple),布尔值(bool)</span><br><span class="line">不可哈希的数据类型是可变的数据类型：list,dict,set集合&#123;1，2，3，&#125;</span><br><span class="line">set集合既没有索引也没有切片。</span><br><span class="line">由于set集合是无序的，所以测试的时候无法进行验证。删除的是最后一个元素</span><br><span class="line">删除：pop,remove</span><br><span class="line">想要修改就得先删除后添加</span><br><span class="line">set集合查找只能通过循环：for循环</span><br><span class="line">交集，并集，差集</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702110985449-f5c49bde-badd-4691-8798-359767399409.png" alt="image.png"><br>补充：<br>set集合的交集：intersection和&amp;，输出共有的一个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111284536-231ffdf1-3cbf-4db6-98ec-635f50bcb8f9.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111465244-068a9daf-09ec-4223-8f99-6d59934cbf7b.png" alt="image.png"><br>set集合的并集：union和 |<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111644470-582e8175-4e91-46de-9b8f-6e119cc534c3.png" alt="image.png"><br>set的差集：difference和 -<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702111822162-ae41f991-e7ae-4496-b415-f422b2a99430.png" alt="image.png"><br>重要的作用：去除重复也就是两个一模一样的元素不可能在同一个set集合里<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702112229480-a1eba18b-e8be-4043-9eef-1a7b50858576.png" alt="image.png"><br>利用这个特性，把列表里面重复的数据去掉，但是有一个问题就是去除之后出现的数据是无序的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702112561857-10350ec6-c3db-474a-81b7-7a67e063ffc7.png" alt="image.png"><br>切记：想把什么变成什么套括号就行<br>这里总结不是很好做就不搞了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>元组</title>
      <link href="/2023/12/10/%E5%85%83%E7%BB%84/"/>
      <url>/2023/12/10/%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>tuple 元组，特点：不可变的列表<br>元组和列表一样可以放很多东西，可以直接打印，也可以做切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105021663-46b95c83-a10d-4e46-b438-45e22587af7d.png" alt="image.png"><br>同时注意’tuple’ object does not support item assignment翻译以下就是元组类型的对象不支持元素的重新定义<br>也就是说你重新去造一个t[0]，使它等于什么结果就是该元组没法改变，还会去报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105295328-a6a4d121-e4ad-46b1-b054-bad943d4228a.png" alt="image.png"><br>如果元组里只有一个元素，此时能够正常输出，但是所展示的类型是字符串而不是元组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105729016-e6820b78-f619-462d-b34c-9cb1d8195831.png" alt="image.png"><br>如果想把它改为字符串，需要在元组的第一个元素后面加一个’,’此时元素的类型才会变成元组<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702105870878-eb79e3e0-4de0-4dd0-be00-6019013eb087.png" alt="image.png"><br>元组不可变，如果元组里面套了一个列表，由于列表是可变的，但是此时发现嘀嘀嘀已经加入进去，不是说了元组不能变吗？但是为什么又能加进去东西呢？注意：元组里面说的不可变指的是它()里面的那层地址不可变，也就是元组里面的列表是不能换成其他列表的，但是列表里面的内容是可以改变的。<br>增删改不存在，查询的话就用索引和切片就行了，for循环也可以。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702106499340-17dc436e-15f5-4eb3-863d-ac17b728ca4d.png" alt="image.png"><br>最后的总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702107137783-7938b5c8-2fa4-44fe-96e3-f1712e1448fc.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>列表的增删改查</title>
      <link href="/2023/12/10/%E5%88%97%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
      <url>/2023/12/10/%E5%88%97%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><p>像列表里面添加东西：append，在列表中的最后进行追加内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034024681-dfd54546-47f5-4638-b394-fd1a3ffcdb12.png" alt="image.png"><br>append，在列表中的最后进行追加内容<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034188204-90865dd5-3ddf-48fc-822c-dda35c34148a.png" alt="image.png"><br>insert进行插入<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034359140-3a694b8d-1213-43ad-91fa-3aac84091a7d.png" alt="image.png"><br>extend可以合并两个列表，批量添加<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034618490-2b7dca70-80b5-495e-bfa8-53ccc71e088c.png" alt="image.png"><br>pop删除，直接加索引就可以了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034822459-67e826d9-756e-414e-b5c8-afaf7dfae58d.png" alt="image.png"></p><h2 id="删"><a href="#删" class="headerlink" title="删"></a>删</h2><p>pop能够查看返回值直接加个ret就可以了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702034921084-d28a95fa-89c6-438a-81e6-91da2d6b2aa3.png" alt="image.png"><br>remove直接删除列表中的元素，不会返回任何东西<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035169267-0b23e167-c977-4176-a053-eeca59ccc6dd.png" alt="image.png"></p><h2 id="改"><a href="#改" class="headerlink" title="改"></a>改</h2><p>直接用索引进行修改<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035495235-19262ead-157a-4599-a94d-c19f92d07bbd.png" alt="image.png"></p><h2 id="查"><a href="#查" class="headerlink" title="查"></a>查</h2><p>直接用索引进行查询<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702035561556-9cf32765-0480-46ca-bc09-7ed0a0d26ae5.png" alt="image.png"><br>把所有姓刘的改成姓王的，这个小练习有点难度，单独分开看的明白，合在一起我就不明白了。这个地方复习的时候将会是重点(*)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702038041486-825b19e6-4b38-46fd-a552-95a5d1642121.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702038655088-bda85f2d-a69b-4a9f-b70b-bd3ef83a737e.png" alt="image.png"></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>列表是有顺序的，是按照你输入进去的顺序进行排列的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048807880-f46bd82d-13ea-47f7-a10c-f536c4af35d5.png" alt="image.png"><br>对列表进行升序排序用到了sort()<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048780606-98932267-44f3-482c-83b5-ddc0504a0dad.png" alt="image.png"><br>对列表进行降序排序，用到了sort(reverse&#x3D;Ture)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702048723331-f80e5db0-6432-469e-912e-9ab333a48df3.png" alt="image.png"><br>在多个列表中进行层层提取最后提取到单纯<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702049362609-12be4184-e3d1-4c19-98a7-b9a5eeb5b51b.png" alt="image.png"><br>将字符串crazy变成大写，字符串是不可变的<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702049690193-3da5902b-c4b8-4c47-8f45-b172e37cff15.png" alt="image.png"><br>按照常理来说删掉姓刘是这样操作的，但是只删了一个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702050763512-5513581e-f50d-4e06-8d18-f70ad2aec553.png" alt="image.png"><br>for循环进行遍历时按照排序一个个来，但是后面出现了问题，删除掉了一个需要后面的人来补，就导致在它后面的人没有进行循环也就是没有进行检测，导致让它后面的逃过一劫。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702050966915-38dc72e7-1817-44cc-a47a-199f6bc159e5.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702051108509-03d93ecd-0880-42ba-a919-f62741a8393e.png" alt="image.png"><br>这个地方删除姓刘的我也不懂为什么代码一样删除不了，后面才发现for写成了if，真是一个粗心的小伙子。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702053914653-0ec73aed-debe-4af5-a9d7-07dc8e5afb4e.png" alt="image.png"><br>最后的总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702054756100-10b14fa0-082f-42cb-b113-4f5ea00e7016.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>列表概念</title>
      <link href="/2023/12/10/%E5%88%97%E8%A1%A8%E6%A6%82%E5%BF%B5/"/>
      <url>/2023/12/10/%E5%88%97%E8%A1%A8%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="一-概念"><a href="#一-概念" class="headerlink" title="一.概念"></a>一.概念</h2><p>定义：能装大量东西的东西叫做列表，什么都能放<br>在python中用[]表示一个列表，列表中的元素用，隔开<br>对list列表进行索引：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032447929-4a121449-bf81-4acb-9099-7efe3e94d167.png" alt="image.png"><br>对list列表进行切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032615550-5432063c-b003-4516-9416-7e616659e92b.png" alt="image.png"><br>倒着来一遍切片：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702032694044-4626542f-33b0-463c-91d1-2be9f6e0ff80.png" alt="image.png"><br>列表可以用for循环进行遍历<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033230331-697fb743-1d3f-4312-a08a-02a69b8f06ad.png" alt="image.png"><br>可以用len查看列表的长度<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033403109-cf882c4e-d875-407a-b5d7-92eac55a34d9.png" alt="image.png"><br>概念总结：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702033657184-bf70404c-def1-4480-8973-8de8f1baef87.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>字符串的常规操作</title>
      <link href="/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="一-字符串大小写的转换"><a href="#一-字符串大小写的转换" class="headerlink" title="一.字符串大小写的转换"></a>一.字符串大小写的转换</h2><p>字符串的操作一般不会对原字符串的操作产生影响，一般是返回一个新的字符串<br>大小写转换需要用到 capitalize这个函数，需要重新定义一个变量。否则就不会发生变化。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701788749616-579aabf0-c898-459a-9211-618ae14b334e.png" alt="image.png"><br>在中间输入汉字就会分为两段英文，title把英文段首字母变成大写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790193623-f01f7b90-4aa6-4c62-8cf0-f698f0111674.png" alt="image.png"><br>将其中的title换成capitalize发现只是首字母变成了大写。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790502104-5f967008-8991-4984-9803-a0fda8337f6e.png" alt="image.png"><br>函数lower能够将英文大写全部转换为小写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790389428-340e41ab-cfb8-4ca0-b603-f7e0b91e17bc.png" alt="image.png"><br>函数upper能够将英文小写全部转换为大写<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701790806755-9b0cab93-86ee-4398-b3d3-f9734618cc7e.png" alt="image.png"><br>如何用upper忽略大小写来进行判断<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701792002619-4929444b-0056-4f54-8d3f-df6d926f68c1.png" alt="image.png"><br>为什么不用lower，因为在处理西欧的一些文字无法处理</p><h2 id="二-字符串的替换和切割"><a href="#二-字符串的替换和切割" class="headerlink" title="二.字符串的替换和切割"></a>二.字符串的替换和切割</h2><p>直接打印一串有空格的字符串，发现打印后仍然有空格<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701870100854-eca12f41-0a5e-4ae9-b52e-9155d3174a34.png" alt="image.png"><br>重新定义一个变量用到scrip函数消除两端空格，打印出来<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701870233344-a658ccd9-e568-44ae-b207-a16da06e65ae.png" alt="image.png"><br>输入正确，但是登陆失败，是因为输入时存在空格。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871288617-a43fd823-a887-4ddd-9fd8-696297d01417.png" alt="image.png"><br>在user_name和password后面接上.strip()，就能够避免空格的问题。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871528865-f1614acb-48cd-4e15-b313-274b9f4d0e87.png" alt="image.png"><br>在输入用户名时中间空格也可能会产生bug，导致登陆失败<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701871742468-bdbd9000-bb5d-496a-9401-012adafb7b7f.png" alt="image.png"><br>replace(old，new)，将old替换成new<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872304304-0ddd7440-1217-4b89-9199-663330954b0f.png" alt="image.png"><br>通过replace()去掉所有的空格<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872483212-43501db8-a16c-4fd8-992d-48238560adc1.png" alt="image.png"><br>split(用什么来切割)，用于字符串的切割，<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701872878281-b5ab1a97-b645-4d63-a7d2-3f5417d19b8e.png" alt="image.png"><br>中括号是列表，切割之后的结果会放在列表当中<br>切记：用什么切就会损失掉谁。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873185136-83563e88-efe6-4a8c-9760-8eeeb369b79a.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873332394-9d530a0d-7059-4725-9297-90cbbe02a359.png" alt="image.png"></p><h2 id="三-字符串的查找和判断"><a href="#三-字符串的查找和判断" class="headerlink" title="三.字符串的查找和判断"></a>三.字符串的查找和判断</h2><p>查找：<br>find()，用find查找时只要返回了数字或者其他东西都算查找成功。<br>数字代表这个查找时字符串开始找到的长度，从0开始计算。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873675063-f3c19a07-7e07-4aa8-8c1e-21d96102597d.png" alt="image.png"><br>find如果返回的是-1.就代表没有这个字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701873858236-35871274-9023-4e8f-8dc5-2905f2d0ae27.png" alt="image.png"><br>index查找结果，数字代表这个查找时字符串开始找到的长度，从0开始计算。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874716287-b47a1ebc-0809-47f7-8af4-2a53cd4f0445.png" alt="image.png"><br>find如果报错.就代表没有这个字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874786647-bd22ebf8-d6ac-4f97-b87e-fa64617ca03d.png" alt="image.png"><br>in可以做条件上的判断，也可用做for循环<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874801740-f94558b8-eeac-491c-9092-a8c56a31ee7c.png" alt="image.png"><br>not in判断是否不存在该字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701874678697-72e1c995-ad21-4565-8043-dc0ee8d97219.png" alt="image.png"><br>startwith判断字符串以xxx开头，endswith判断字符串以xxx结尾<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701875484046-8be76a80-904c-431c-a50a-6e4238a987c5.png" alt="image.png"><br>isdigit判断字符串是否有整数组成<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701876104742-5b33c4a3-660b-45d8-9c64-40b72610d3c3.png" alt="image.png"><br>isdecimal判断字符串是否有小数组成.以下图为例，不能用money&#x3D;&#x3D;money.isdecimal(),因为isdecimal是去判断输入的数字是否只含十进制数字的字符。例如12345将会输出true，输入12.4时就会出现false。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701946305846-bab40cb4-7cfc-4cb9-b882-dcf146006a6e.png" alt="image.png"><br>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701876546371-3b57533f-9d3b-4439-b4be-6df884faa958.png" alt="image.png"></p><h2 id="四-补充和总结"><a href="#四-补充和总结" class="headerlink" title="四.补充和总结"></a>四.补充和总结</h2><p>len和print,type,input一样是内置函数，不需要s&#x3D;xxxx,可以直接使用<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701959109082-036a5fea-1a2d-41f6-bc06-68715f2bd43a.png" alt="image.png"><br>join是一个跟split相反的一个东西，split是进行切割，join进行连接,下图将这些字符串用”_”进行连接。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701959500354-b8ad985b-83c1-4642-aae4-dcb6ea70850d.png" alt="image.png"></p><p>总结：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>f(&#123;变量&#125;)  格式化一个字符串</span><br><span class="line"><span class="number">2.</span>索引和切片：</span><br><span class="line">索引：从<span class="number">0</span>开始的,[]</span><br><span class="line">切片：s[start:end:step] end位置的数据永远拿不到</span><br><span class="line"><span class="number">3.</span>相关操作：</span><br><span class="line">字符串操作是对源字符串不发生改变的</span><br><span class="line"><span class="number">1.</span>upper() 在忽略大小写的时候</span><br><span class="line"><span class="number">2.</span>strip()  可以去掉字符串左右两端的空白(空格，\n,\t)</span><br><span class="line"><span class="number">3.</span>replace() 字符串的替换</span><br><span class="line"><span class="number">4.</span>split()  对字符串进行切割</span><br><span class="line"><span class="number">5.j</span>oin()  拼接一个列表中的内容形成一个新的字符串</span><br><span class="line"><span class="number">6.</span>startswith() 判断字符串是否以xxx开头</span><br><span class="line"><span class="number">7.</span><span class="built_in">len</span>()      字符串的长度(内置函数)</span><br><span class="line"></span><br><span class="line">字符产的循环和遍历</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(c) 此时输出的是字符串中一个个字符</span><br><span class="line">关于 <span class="keyword">in</span>:</span><br><span class="line"><span class="number">1.</span><span class="keyword">for</span>循环里面</span><br><span class="line"><span class="number">2.</span>判断xxx是否在xxx里面</span><br></pre></td></tr></table></figure><p>总结截图如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702031702133-eeae7358-ae26-486b-b0d2-d9bcee942a75.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>索引和切片</title>
      <link href="/2023/12/10/%E7%B4%A2%E5%BC%95%E5%92%8C%E5%88%87%E7%89%87/"/>
      <url>/2023/12/10/%E7%B4%A2%E5%BC%95%E5%92%8C%E5%88%87%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>索引：按照位置提取元素<br>可以采用索引的方式提取某一个字符(文字)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701609640590-24b742e5-79e7-4818-ac8d-44a9f3f9d7d5.png" alt="image.png"><br>按常理来说第3个字符应该是周，但是程序员都是从0开始数的，所以是润<br>       负号表示倒数，s[-1]所显示的是发<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701609858951-1a4e93c0-10f5-4c3b-ab57-6dd0c7836a54.png" alt="image.png"></p><p>切片：从一个字符串中提取一部分内容<br>语法：s[start:end]<br>解释：从start开始切片到end结束，但取不到end，[start,end)<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701610704819-e35bcde4-ae3a-4535-9af6-553221ac32cf.png" alt="image.png"><br>如果start是从开头开始切片，可以省略<br>从start开头一直到结尾，结尾可以省略<br>：如果左右两边有空白，表示空白或者结尾<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611226432-4f5f9d97-1cd0-461c-9488-a5d0e9c979aa.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611265002-25b6d67b-b7da-4ed8-840b-d6c71db12ab3.png" alt="image.png"><br>当切片的数字选择为负数时也还是从左到右进行切片<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611383630-eb7a8292-4144-4926-a337-bc1b1aad36ea.png" alt="image.png"><br>从-1到-3进行切片显示没有结果<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611554606-f7e9cd80-d236-411e-9a58-9862ee1aff1e.png" alt="image.png"><br>可以给切片添加步长，来改变切片的方向<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701611936418-123e1195-ced5-4014-92c0-a461be44b915.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612342164-99ace6e3-602e-4fad-8740-965781b92197.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612587982-1af0aa8e-fbfd-4737-b746-b1552f6ae9b4.png" alt="image.png"></p><p>最后的笔记：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701612764650-f537da30-6936-4ee4-8690-75c2d77dba4d.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pass关键字</title>
      <link href="/2023/12/10/pass%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2023/12/10/pass%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<p>代码占用，没有想好的条件下可以用pass<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608679852-38d54dca-4cf0-451e-8161-53bc8eacedb0.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>for循环</title>
      <link href="/2023/12/10/for%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/12/10/for%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>循环是可以迭代的</span><br><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 可迭代的东西：</span><br><span class="line">    代码</span><br><span class="line">解释：把可迭代的东西中的每一项内容拿出来，挨个的赋值给变量，每一次赋值都要执行一次循环体(代码)</span><br></pre></td></tr></table></figure><p>for循环是可以迭代的<br>for 变量 in 可迭代的东西：<br>    代码<br>解释：把可迭代的东西中的每一项内容拿出来，挨个的赋值给变量，每一次赋值都要执行一次循环体(代码)</p><p>可以把每个字符串打印出来：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607226953-507ddc0d-3a0e-48ed-9d11-8ff74b93d47c.png" alt="image.png"></p><p>for循环想要计数，必须借助于range<br>range(n):从0数到n，不包括n<br>range(m,n):从m数到n，依然不包括n<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607706904-e2aaa39c-4e4a-4b4b-88dc-a5339aa3029f.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701607669169-a0b103b4-0abb-4dbb-a1e6-7820625d8b7c.png" alt="image.png"><br>range(m,n,q):从m数到n，依然不包括n,每次的间隔为q，示例如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608079399-807e2ef1-cc42-4e86-b8e8-7ec695e4ba87.png" alt="image.png"></p><p>最后的笔记为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701608397232-2ac00fcc-01b5-4c5a-a199-5848d9cddd13.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>循环语句，跳出循环</title>
      <link href="/2023/12/10/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%EF%BC%8C%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/12/10/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%EF%BC%8C%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件：</span><br><span class="line">代码</span><br><span class="line">解释：判断条件是否为真，真就执行代码，然后再次判定条件，...直至条件为假，循环结束</span><br></pre></td></tr></table></figure><p>示例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701601117272-277d5d28-7e35-4257-abee-db3908f5dc7d.png" alt="image.png"><br>创建一个从1数到100的程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701602696904-bb318aee-87e1-4920-a01c-661604918687.png" alt="image.png"></p><p>创建一个从1加到100的程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701603616176-c51f0292-c81c-470e-b95d-b1c49e980518.png" alt="image.png"><br>可以一直说：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701604766794-727896ec-342b-4da1-ad78-34db25a6e7c9.png" alt="image.png"></p><h2 id="break："><a href="#break：" class="headerlink" title="break："></a>break：</h2><p>让当前循环停止<br>设置一个if语句跳出当前循环，当前的break只是结束循环，而不是结束整个程序<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701605062895-d904ce41-e5a5-4298-8573-4e5b4b4807e8.png" alt="image.png"></p><h2 id="continue："><a href="#continue：" class="headerlink" title="continue："></a>continue：</h2><p>停止此次循环，执行下一次循环<br>本张图片显示的是从1数到10，通过continue去掉了4的结果<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701605818863-067110e3-6e7c-4657-9d4f-50016392cb5c.png" alt="image.png"><br>当前程序用break就会直接跳出循环：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701606086398-4b30fc61-790e-4079-8800-fe77ef9fcb29.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701606160234-b45b7586-5287-4f06-88e4-97dfeca4a471.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python条件判断</title>
      <link href="/2023/12/10/python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
      <url>/2023/12/10/python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>条件判断：</p><h2 id="第一种语法："><a href="#第一种语法：" class="headerlink" title="第一种语法："></a>第一种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件 :</span><br><span class="line">     代码</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593233679-e9630050-9a25-45e5-86a0-577aa91d8511.png" alt="image.png"></p><p>python里面没有大括号，前面空出的空格就是包含关系，条件判断为ture，结果如图所示，不管如何都会执行回家<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593835157-9f9f0514-cb65-430c-9789-6049b06385e9.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593908224-29d2095e-2819-4ab2-9bbc-1fc67a819ee6.png" alt="image.png"><br>if条件示意图：</p><h2 id="第二种语法："><a href="#第二种语法：" class="headerlink" title="第二种语法："></a><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701594005042-23f9d1b4-64bf-4a4a-affb-2c95a7cad7ac.png" alt="image.png">第二种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>   条件：</span><br><span class="line">         代码<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">        代码<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595433208-6a6754cd-cc91-42df-9f94-46cbc62db54d.png" alt="image.png"><br>示例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701594815430-bd01a8b8-11d7-43b3-a1c8-7907184f5f3b.png" alt="image.png"><br>报错的原因是因为&gt;号两端的数据类型不一致，因为money是字符串类型，而3000是整数类型<br>输入：money&#x3D;int((money))，即可进行转换并且成功运行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595118369-da025cc0-6e2a-4a55-9e75-b685dbdefa43.png" alt="image.png"><br>第二种语法的示意图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701595198841-f17bf7a3-c294-4d0f-9f90-e08e94d2cc35.png" alt="image.png"></p><h2 id="第三种语法："><a href="#第三种语法：" class="headerlink" title="第三种语法："></a>第三种语法：</h2><p>if可以进行嵌套</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件：</span><br><span class="line">     <span class="keyword">if</span>  条件：</span><br><span class="line">         代码<span class="number">1</span></span><br><span class="line">      <span class="keyword">else</span>：</span><br><span class="line">         代码<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">代码<span class="number">3</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598543731-81a548af-4827-414e-92b8-449175124c25.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598212101-e130905a-be6b-4ca8-bfbd-aee02393721d.png" alt="image.png"></p><h2 id="第四种语法："><a href="#第四种语法：" class="headerlink" title="第四种语法："></a>第四种语法：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>：</span><br><span class="line">代码<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">2</span>：</span><br><span class="line">代码<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">3</span>：</span><br><span class="line">代码<span class="number">3</span></span><br><span class="line">....</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">代码<span class="number">4</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600259596-a409255d-0418-4c99-9781-71c9cb52c169.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701599583507-5c52320d-3655-41a5-acf0-cd6d8573f256.png" alt="image.png"><br>单纯使用else或者elif会报错：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600093087-aa3d00d0-6565-4d71-946c-e992150e6f11.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701600388053-0898a230-b828-4810-9b2d-e67652aee89a.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python初始基础数据类型</title>
      <link href="/2023/12/10/python%E5%88%9D%E5%A7%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/12/10/python%E5%88%9D%E5%A7%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>基本的数据类型，这里只讲三个<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590166050-1f10598d-b461-4330-a2f5-d2ba41953fbd.png" alt="image.png"><br>a和b都是同一个数据类型，才能进行运算：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590208960-3bd2806b-8ea3-438a-b429-e1a19cd40218.png" alt="image.png"><br>小数比较简单<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590461221-9a21a55e-37be-4091-a373-5acd015ab2de.png" alt="image.png"><br>这里不是很懂，为什么不会出现准确的数字？<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701590687844-c7d32db3-e301-471e-a160-bb4c11c5a8ee.png" alt="image.png"></p><p>字符串是重点，要用单引号或者双引号，三单引号，三双引号引起来，这四种情况都不会报错。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591143361-1d7f255e-912f-43a7-945d-5de7d64504a0.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591175974-117fdc16-96d8-4144-9303-b07ce047dd16.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591539494-addefaca-1df1-4f6c-b4ea-1b7eabd377fe.png" alt="image.png"><br>文字可以做加法，两端必须是字符串<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701591833567-eeeb019e-29ea-4f70-9a91-978fca75e962.png" alt="image.png"><br>如果一端是数字就会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592019531-92b23d57-5655-498c-a53a-02cc4b07e850.png" alt="image.png"><br>字符串可以做乘法，表示字符串重复的次数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592211764-fad72ebc-4f64-445c-9931-f5ebd15fc3fb.png" alt="image.png"><br>布尔类型：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701592538017-7779ad52-1a86-4378-ac46-454d772e2bc7.png" alt="image.png"><br>举例：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593046080-af9dd5e5-8f3d-4029-bfa5-f5a57b46cc21.png" alt="image.png"></p><p>最后笔记结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701593089744-22841433-bc6f-4d08-9630-84e5572e1263.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python变量</title>
      <link href="/2023/12/10/python%E5%8F%98%E9%87%8F/"/>
      <url>/2023/12/10/python%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>打印一篇文章简单，但是一篇文章内容太大咋办，这就需要变量，打开pycharm输入print()<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701584853329-902ffdca-613c-4828-b65a-b8a286e09206.png" alt="image.png"><br>一篇篇打印太麻烦，此时可以运用变量进行打印<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585235157-5634b6ed-3d1b-4653-bf97-79da785b1580.png" alt="image.png"><br>结果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585251765-23698f2d-2646-4f22-bfde-879b1e818907.png" alt="image.png"></p><p>a原先为188，后面变为166，但是打印的时候都会显示：</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585900274-d9789614-1ba4-41eb-b563-f7dd5c637118.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701585749640-33f9502d-9b1b-43a5-a8d6-63c8080baa93.png" alt="image.png"><br>单纯按照规范输入也不会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701586818905-bc0e523d-10e3-40d7-a5ce-8c2e2972adde.png" alt="image.png"></p><h2 id="python的书写规范："><a href="#python的书写规范：" class="headerlink" title="python的书写规范："></a>python的书写规范：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701588613806-4b8b66b6-c9c4-4078-a4c7-5178c8d215d5.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701587448714-68beb262-eed1-4fcd-b387-4a4a275575cf.png" alt="image.png"><br>按照上述输入，没有问题，但是按照规范还是不建议</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701588656320-f2a7ebdb-fa93-4b12-aa1e-579ca26a2b21.png" alt="image.png"><br>关键字，在创建变量时不能使用，上图最后两个是可以使用的，不过第一个更直观。<br>一个很严重的问题，引号有无的区别，第一个打印的时name的值，第二个打印的是name<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701589056852-e48ee588-c51d-44c2-a550-0c6d47acae5e.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598267818-c43d912b-e1cb-4832-950b-03cd4f4a38f5.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python使用,注释,用户交互</title>
      <link href="/2023/12/10/python%E4%BD%BF%E7%94%A8-%E6%B3%A8%E9%87%8A-%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/"/>
      <url>/2023/12/10/python%E4%BD%BF%E7%94%A8-%E6%B3%A8%E9%87%8A-%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<p>cmd输入python，显示python的版本号等相关信息<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701522570026-a6a24341-ba48-410f-802b-95e2d88e6b07.png" alt="image.png"><br>新建一个txt文件夹，在显示文件扩展名的前提下重命名为first.py，输入以下内容，有*记得保存。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701523266708-e37f9750-61ad-453b-863d-76cd9c8ff056.png" alt="image.png"><br>进入python后exit（）退出python的cmd命令行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701527581709-e01b794e-0f88-4f5b-8e70-bff83f26cc57.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701528643510-9cebd023-958c-4cfd-bdae-1c3883fa3a11.png" alt="image.png"></p><h2 id="注释的重要性："><a href="#注释的重要性：" class="headerlink" title="注释的重要性："></a>注释的重要性：</h2><p>#对一行进行单行注释。选中所要添加注释的内容，ctrl+&#x2F;一次添加单行注释<br>多行一次添加注释：用鼠标选中需要注释的代码，三次按下： shift+&#x2F;<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701530432037-d50d3220-d2c4-4689-b681-1dc272f8cd38.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701531622570-04fcd821-4ec9-417d-a345-9fa15f5efd34.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>*不用保存，pycharm自动保存。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701531829510-004003a6-506e-4ea1-b53e-724e0f78e6a2.png" alt="image.png"><br>不存在绝对意义上的常量，定义之后输出就行。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701568613632-73e615ca-fc7b-436c-a5d6-a000cf31d552.png" alt="image.png"><br>运行一个计算器，不是简单的定义加输出就行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701569688507-e3691e52-9984-4422-9c89-1db4da029b27.png" alt="image.png"><br>因为是单纯的a，类型为str字符串类型，输入之后是直接连接<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701571831733-f8a4c779-0012-4c18-b4b0-9412e0abe05e.png" alt="image.png"><br>通过输入type（），查看输入数字的类型<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573236633-6bb0ee06-7f34-4976-90ec-4bd4c7d91e7e.png" alt="image.png"><br>上述代码结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573286620-328c2bab-36da-4daa-84d5-94e70a74eb9a.png" alt="image.png"><br>发现一个问题，当输入数字时产生报错，后续会解决。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701573829328-a5a1973c-6769-4919-8fdc-6ab6778d70bb.png" alt="image.png"></p><h2 id="最后的笔记："><a href="#最后的笔记：" class="headerlink" title="最后的笔记："></a>最后的笔记：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598341716-430e4590-f3ec-43b6-83eb-8aaa379310c3.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701598419081-80645bc4-c928-4376-bd28-f28d070e2457.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习vue3</title>
      <link href="/2023/12/08/%E5%AD%A6%E4%B9%A0vue3/"/>
      <url>/2023/12/08/%E5%AD%A6%E4%B9%A0vue3/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="介绍并学习了vue3"><a href="#介绍并学习了vue3" class="headerlink" title="介绍并学习了vue3"></a>介绍并学习了vue3</h2><p>​         Vue 3 是一种流行的 JavaScript 前端框架，用于构建交互式的用户界面和单页面应用程序（SPA）。它可用于去做小程序，也可以让Vue去做前端，通过API接口连接后台网站，通过后台对Vue进行管理。Vue.js 3 可以与多种语言和技术进行组合，实现各种类型的应用程序。<br> 安装Vue，用Vscode进行安装具体操作如下：</p><p>新建一个文件夹命名为vue，将其直接拖入Vscode，之后点击查看打开终端，输入：<br>npm init vue@latest<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025430385-f968c173-9123-4c7d-9a21-e91577420f9a.png" alt="352bf9b8c515a65c771ffc456397f51.png"><br>一直点否就行，之后可以给创建的项目改名字，不改默认为vue-project。<br>接着输入提示的命令：<br>cd vue-project:切换为vue-project目录<br> npm install</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231208173457082.png" alt="image-20231208173457082"></p><p>npm run dev<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025651690-20c7bd51-cfac-4ba6-8d85-f4ddf6146bd2.png" alt="98e184318bc2ad915ffdd82c115d66b.png"><br>部署完成之后出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025749986-787bcfd6-fd8c-4ba3-a52a-bda87f1fe786.png" alt="af6029d647c303297a5485222f27f3c.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025718575-a7f43643-e444-4fee-8c5c-1a86ea0cf990.png" alt="ef4640bdafa089d85e68ae8a794f514.png"></p><p>打开src，找到APP.vue,对template内容进行修改，template专门放html代码的，切记将前面的一些内容注释掉，否则会影响测试结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702025904921-6cf6bd0e-a50f-4c96-b710-b03b382d6a79.png" alt="4cf2291027a4db53c055b9f15dc0c0a.png"><br>测试完成之后，还需要在终端安装element-plus的组件：<br>npm install element-plus –save </p><p>npm install -D unplugin-vue-components unplugin-auto-import</p><p>这两步必须要去完成否则就会报错。</p><p>等待安装完成就可以了，接着对main.js进行修改</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#x27;./assets/main.css&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">import ElementPlus from &#x27;element-plus&#x27;;</span><br><span class="line">import &#x27;element-plus/dist/index.css&#x27;</span><br><span class="line"></span><br><span class="line">createApp(App).mount(&#x27;#app&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着对vite.config.js进行修改：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123; fileURLToPath, URL &#125; from &#x27;node:url&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;</span><br><span class="line">import vue from &#x27;@vitejs/plugin-vue&#x27;</span><br><span class="line">import AutoImport from &#x27;unplugin-auto-import/vite&#x27;</span><br><span class="line">import Components from &#x27;unplugin-vue-components/vite&#x27;</span><br><span class="line">import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="line"></span><br><span class="line">// https://vitejs.dev/config/</span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    vue(),</span><br><span class="line">    // ...</span><br><span class="line">    AutoImport(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">    Components(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      &#x27;@&#x27;: fileURLToPath(new URL(&#x27;./src&#x27;, import.meta.url))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026551651-97483b2f-5bca-45e7-8f5a-685c7530351b.png" alt="97d67c0754683a2485c8e27e2201201.png"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这张图是APP.vue 的原图，后续经过修改可以改回来。<br>必须按照如图对文档进行修改否则后续进行form表单时就会接着报错。</p><p>element-plus的官网，地址如下：<br>官网：<a href="https://element-plus.org/zh-CN/guide/installation.html#%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81">https://element-plus.org/zh-CN/guide/installation.html#%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81</a><br>找到组件，由于源代码都能在网页上查找到，注意复制粘贴的位置，style是格式，template是放html代码的地方，script是存放js脚本进行交互的地方。<br>这里测试的是一个红色的按钮，效果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026489364-ce231dc4-5627-42c3-9502-28705c2caf84.png" alt="770907ee00f7f7dba6de1c445051a99.png"><br>后面做了一个form表单的测试，开始由于上述两个配置文件的问题一直报错，只显示出两个按钮。后面才是正常结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702026792135-2d295358-fd53-48e6-849f-a6603ba75b65.png" alt="fb6174d2599bad058a731b26c8b7c72.png"></p><p>下午：<br>进行了一下自己的研究，发现基本上做一个vue的布局是需要去搞后台的，例如 vue router 或者git库等等，还找到一个做表单的一个网站Variant Form<br>官网如下：<a href="https://www.vform666.com/">https://www.vform666.com/</a><br>单纯简单的做一个表单暂时还不能出现互动的效果，可以复制vue和html代码<br>也去查看了csdn上面的文库基本上写vue布局的基本需要一个后台，代码也可以去element上面复制后修改<br>后面组件还是需要自己去学习去嵌套，以下是一个案例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;qzc&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">class</span>=<span class="string">&quot;layout-container-demo&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 100vh&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">:default-openeds</span>=<span class="string">&quot;[&#x27;1&#x27;]&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">message</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>用户管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>权限管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-1&quot;</span>&gt;</span>权限管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-2&quot;</span>&gt;</span>权限管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-3&quot;</span>&gt;</span>权限管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>商品管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-1&quot;</span>&gt;</span>商品管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-2&quot;</span>&gt;</span>商品管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3-3&quot;</span>&gt;</span>商品管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>订单管理</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-1&quot;</span>&gt;</span>订单管理1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-2&quot;</span>&gt;</span>订单管理2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4-3&quot;</span>&gt;</span>订单管理3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span>数据统计</span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-1&quot;</span>&gt;</span>数据统计1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-2&quot;</span>&gt;</span>数据统计2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;5-3&quot;</span>&gt;</span>数据统计3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;100hv&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; font-size: 12px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 8px; margin-top: 1px&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">setting</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">dropdown</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>1<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>2<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>3<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">label</span>=<span class="string">&quot;#&quot;</span> <span class="attr">width</span>=<span class="string">&quot;40px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>, <span class="title class_">Message</span>, <span class="title class_">Setting</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> item = &#123;</span></span><br><span class="line"><span class="language-javascript">  序号: <span class="string">&#x27;1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  姓名: <span class="string">&#x27;2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  邮箱: <span class="string">&#x27;3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  手机: <span class="string">&#x27;4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  角色: <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  状态: <span class="string">&#x27;6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  创建时间: <span class="string">&#x27;7&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  操作: <span class="string">&#x27;8&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = <span class="title function_">ref</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: <span class="number">4</span> &#125;).<span class="title function_">fill</span>(item))</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.qzc</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--el-color-primary-light-<span class="number">7</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="built_in">var</span>(--el-text-color-primary);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="built_in">var</span>(--el-text-color-primary);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="built_in">var</span>(--el-color-primary-light-<span class="number">8</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-menu</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-right</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.el-main</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container-demo</span> <span class="selector-class">.toolbar</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: inline-flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果展示为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1702027193398-698ffdf6-6e4b-4867-bf75-b785af6974a6.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>复习form表单,网页解释以及bootstrap5教程</title>
      <link href="/2023/12/07/%E5%A4%8D%E4%B9%A0form%E8%A1%A8%E5%8D%95,%E7%BD%91%E9%A1%B5%E8%A7%A3%E9%87%8A%E4%BB%A5%E5%8F%8Abootstrap5%E6%95%99%E7%A8%8B/"/>
      <url>/2023/12/07/%E5%A4%8D%E4%B9%A0form%E8%A1%A8%E5%8D%95,%E7%BD%91%E9%A1%B5%E8%A7%A3%E9%87%8A%E4%BB%A5%E5%8F%8Abootstrap5%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="复习form表单"><a href="#复习form表单" class="headerlink" title="复习form表单"></a>复习form表单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>表单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文本输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 密码输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 单选按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 复选框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;subscribe&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subscribe&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;subscribe&quot;</span>&gt;</span>订阅推送信息<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 下拉列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>国家:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;cn&quot;</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;uk&quot;</span>&gt;</span>UK<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对当前代码进行解读与说明：<br> title标签: 这个标签定义了文档的标题，显示在浏览器标签页上。<br> body标签: 这个标签包含了可见的页面内容，比如文本、图像、链接、表单等。<br>h2标签: 这是一个二级标题，显示文档部分的标题。<br>form action&#x3D;”&#x2F;“  method&#x3D;”post”: 这是一个表单开始的标签，定义了表单的提交地址和提交方法。<br>label标签: lable标签创建了一个用户名，这行代码创建了一个标签，用于关联文本输入框，用户点击标签时会激活文本输入框。input type&#x3D;”text” id&#x3D;”name” name&#x3D;”name” required: 这行代码定义了一个文本输入框，类型为文本，ID 为 name，名称为 name，并且要求用户必须填写。label for&#x3D;”password”密码:&#x2F;label: 创建了一个用于关联密码输入框的标签。input type&#x3D;”password” id&#x3D;”password” name&#x3D;”password” required: 定义了一个密码输入框，类型为密码，ID 为 password，名称为 password，并且要求用户必须填写。label性别:&#x2F;label: 创建了一个标签用于性别选择的相关说明。input type&#x3D;”radio” id&#x3D;”male” name&#x3D;”gender” value&#x3D;”male” checked: 创建了一个单选按钮，类型为单选，ID 为 male，名称为 gender，值为 male，并且这个按钮默认被选中。label for&#x3D;”male”男&#x2F;label: 创建了一个标签，用于描述上面的单选按钮。input type&#x3D;”radio” id&#x3D;”female” name&#x3D;”gender” value&#x3D;”female”: 创建了另一个单选按钮，具体属性同上。label for&#x3D;”female”女&#x2F;label：描述第二个单选按钮。input type&#x3D;”checkbox” id&#x3D;”subscribe” name&#x3D;”subscribe” checked: 创建了一个复选框，类型为复选框，ID 为 subscribe，名称为 subscribe，且默认被选中。label for&#x3D;”subscribe”订阅推送信息&#x2F;label: 创建了一个标签，用于描述上面的复选框。<br>name值一样就是单选，不一样就是多选， checked表示默认选项。<br>这行代码label for&#x3D;”country”国家:&#x2F;label: 创建了一个标签用于描述下拉列表选择的相关说明。select id&#x3D;”country” name&#x3D;”country”: 开始创建一个下拉列表，ID 为 country，名称为 country。option value&#x3D;”cn”CN&#x2F;option: 创建了一个选项，值为 cn，显示为 CN。option value&#x3D;”usa”USA&#x2F;option: 创建了第二个选项，值为 usa，显示为 USA。option value&#x3D;”uk”UK&#x2F;option: 创建了第三个选项，值为 uk，显示为 UK。&#x2F;select: 结束下拉列表。input type&#x3D;”submit” value&#x3D;”提交”: 创建了一个提交按钮，类型为提交，显示的文本为“提交”。基本上form表单就介绍了这么多，老师每一步都讲的很详细。</p><h2 id="网页介绍"><a href="#网页介绍" class="headerlink" title="网页介绍"></a>网页介绍</h2><p>端口：1-655535<br>常见协议名对应的端口号<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200928670.png" alt="image-20231210200928670"><br>请求介绍：<a href="http://baidu.com/">http://baidu.com</a>                            get<br>协议名：&#x2F;&#x2F;目标IP：端口&#x2F;请求资源路径？参数&#x3D;值；参数&#x3D;值，两个参数通过get的方法进行获取<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200954419.png" alt="image-20231210200954419"><br>dns：域名解析服务：将域名解析为IP地址<br>全球有13个dns根服务器<br>pc请求域名的优先级从hosts到根dns是越来越低的，下图是pc请求的一个示意图，优先hosts主机。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210201013263.png" alt="image-20231210201013263"></p><h2 id="bootstrap5教程"><a href="#bootstrap5教程" class="headerlink" title="bootstrap5教程"></a>bootstrap5教程</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701956416503-42cb389e-1f3a-42b9-9b39-b83184523c08.png" alt="5e22456c4f07fd4265c8ee88d026411.png"><br>使用 Bootstrap 5 可以轻松构建响应式、移动设备优先的网站和应用程序。<br>引入 Bootstrap 样式表和 JavaScript 文件：<br>在 HTML 文档的 head 部分引入以下代码来加载 Bootstrap 5 的样式表和 JavaScript 文件，就如上图所示。而且在 HTML 中使用 Bootstrap 5 的各种组件、布局和样式来构建网站或应用程序。例如，可以使用容器、栅格系统、按钮、表单、导航栏等组件。总之是一个很不错的工具，不过使用的人越来越少了。</p><h2 id="web安全"><a href="#web安全" class="headerlink" title="web安全"></a>web安全</h2><p>web安全<br>c语言的演变：c  c++ c#<br>汇编  c  c++ c#  java python<br>         go             php：只能做网站<br>具体如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210201030659.png" alt="image-20231210201030659"><br>下午自己制作了一个网页，感觉效果不是很好。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>湖南人民政府<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">nav</span> &#123;<span class="attribute">background-color</span>: <span class="number">#006EAB</span>;<span class="attribute">padding</span>: <span class="number">10px</span>;<span class="attribute">text-align</span>: center;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;<span class="attribute">list-style-type</span>: none;<span class="attribute">margin</span>: <span class="number">0</span>;<span class="attribute">padding</span>: <span class="number">0</span>;<span class="attribute">margin-bottom</span>:auto;<span class="attribute">padding-bottom</span>:auto;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;<span class="attribute">display</span>: inline;<span class="attribute">margin-right</span>: <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>: none;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">padding</span>: <span class="number">5px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>: <span class="number">#d7e9f7</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.sy_news</span>&#123;<span class="attribute">background-color</span>:<span class="number">#999999</span>;<span class="attribute">text-align</span>: center;<span class="attribute">margin-bottom</span>: <span class="number">0</span>;<span class="attribute">width</span>: <span class="number">2000px</span>;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.sy_toutiao</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;class=m-head&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>中国政府网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>湖南省人大网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>湖南省政协网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;C:\Users\林尘曦\Desktop\html\欢迎光临湖南省人民政府门户网站_files\logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;m-end&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>省政府<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务要闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务公开<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>一件事一次办<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>互动交流<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>政务数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>锦绣潇湘<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sy_toutiao&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display:block;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1200px&quot;</span>;<span class="attr">height</span>=<span class="string">&quot;200px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;C:\Users\林尘曦\Desktop\html\欢迎光临湖南省人民政府门户网站_files\sy_zl2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;sy_zl2.jpg&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sy_news&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> &gt;</span>植根人民 造福人民——习近平同志倡导践行“四下基层”闪耀时代光彩<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> &gt;</span>“把心贴近人民”——解码“四下基层”|传承弘扬“四下基层”优良作风|用好“四下基层”这个重要抓手<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p>由于代码太长没法展示看下效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701957107538-e5ad448e-7457-4f3f-853f-f7f8d4e8c5ac.png" alt="53c112f0435497f7303c2e18b6a7386.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>复习网络基础,学习html,介绍css和js</title>
      <link href="/2023/12/06/%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-%E5%AD%A6%E4%B9%A0html-%E4%BB%8B%E7%BB%8Dcss%E5%92%8Cjs/"/>
      <url>/2023/12/06/%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-%E5%AD%A6%E4%B9%A0html-%E4%BB%8B%E7%BB%8Dcss%E5%92%8Cjs/</url>
      
        <content type="html"><![CDATA[<p> 上午：</p><h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>   复习昨天学习的osi七层网络模型：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层。<br>    判断ip的类型：；例如127.15.1.2是公网地址，127.0.0.1是本地回环地址，0.0.0.0  *是任意IP地址。<br>    centos-minnmal复习:ls cp find whoami cat grep touch   mkdir rm pwd rm  ip add chomd等命令的复习，这里就不详细说明了，有需要请查看第一周笔记第三天centos-minimal虚拟机命令。<br>    find &#x2F;iname ‘test?’, ‘?’表示匹配文件名称中的一个字符(不包括路径)<br>    ping baidu.com -c 3 -c 3表示ping三次后停止。</p><h2 id="bash脚本环境安装"><a href="#bash脚本环境安装" class="headerlink" title="bash脚本环境安装"></a>bash脚本环境安装</h2><p>ssh连接的复习，当连接成功之后输入以下命令安装bash脚本的一些基本的环境，一个个输入以便能够更好的执行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861138128-d546e661-3c2b-4d62-a55b-494b30a23a1a.png" alt="image.png"><br>以下是对该命令详细的介绍与解释：<br>yum install net-tools.x86_64 -y 安装网络命令<br>yum -y install epel-release   安装软件源<br>yum -y install vim    安装编辑器<br>yum install unzip -y  安装unzip工具<br>yum install -y git    安装Git版本控制工具<br>yum install docker -y  安装容器引擎<br>yum -y install python-pip 安装python的pip包管理工具<br>yum install -y docker-compose 安装用于定义和运行多个容器的工具<br>yum search wget -y(yum install wget)    搜索并安装wget工具，在这里用的是install，因为search在本次安装过程中会报错，提示要用serach all 可惜的是还是会报错<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861564678-7a3fa226-66d0-40f7-9c49-2b60164d2cb9.png" alt="image.png"><br>所以这里应用yum install wget去安装wget<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861659041-5849dd3f-f684-40d8-a20f-cb5af59a6ae5.png" alt="image.png"><br>安装完成之后输入： rpm -qa|grep “wget”显示wget的版本号就算安装成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701861728152-26da0636-6d36-43fc-aeeb-2dad7829c96a.png" alt="image.png"><br>关机命令的学习：<br>shutdown -c ：取消前一个关机命令<br>shutdown -h ：关机<br>shutdown -f  ：重启<br>reboot：重启命令<br>init 6：重启命令<br>关机比较耗时间这里就不截图展示了。</p><p>下午：</p><h2 id="介绍HTML5"><a href="#介绍HTML5" class="headerlink" title="介绍HTML5"></a>介绍HTML5</h2><p>HTML5：超文本传输协议5<br>认识html的组成以及基本框架，主要是用vscode进行编写html代码，新建1.txt修改后缀名为1.html，用cscode打开，之后安装两个插件ColorHight和HTML  CSS Support，这两个插件安装完成之后，输入！按下table会出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701863015804-49485455-bf78-4862-895d-a67408ffb460.png" alt="image.png"><br>       en代表的是英文，meta标签包含UTF-8是代码编码格式以及关键词，网页中的 title 元素：在 HTML 页面中，title元素用于定义网页的标题。它通常位于 head标签内部，并显示在浏览器标签栏或窗口标题栏中。网页的标题可以帮助用户识别页面内容，并在收藏夹或搜索引擎结果中显示。</p><p>​      head元素是表示文档头部的标签。它位于 html 标签内部，紧跟在 title 元素之前，用于定义有关页面的元数据和其他配置信息，而不是直接显示在页面内容中。</p><p>​      body元素是表示页面内容区域的标签。它位于 html标签内部，在 head元素之后，用于定义和包含实际显示在浏览器中的网页内容。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> b,trong：加粗</span><br><span class="line">sup:上标</span><br><span class="line">sub:下标</span><br><span class="line">i,em：斜体</span><br><span class="line">注释：ctrl+/</span><br><span class="line">h1:一号标题</span><br><span class="line">h6：六号标题</span><br><span class="line">br/ ：换行，不显示</span><br><span class="line">hr / :水平线</span><br><span class="line">s：文字中下方有横线穿过</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span>汉字<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;路径&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> /&gt;</span></span><br><span class="line">del:只用于表示文本的删除</span><br><span class="line">p：文本库</span><br></pre></td></tr></table></figure><p>输入代码的结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701864410277-b8f3abce-a8de-4805-a3e5-f7a3ed9d57aa.png" alt="image.png"><br>效果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701864446505-fb74481b-5faa-47fe-a0bd-bc45c34da145.png" alt="image.png"><br>为了更加方便的书写代码，分享了几个好用的chatgpt资源：<br>文心一言地址：<a href="https://yiyan.baidu.com/">https://yiyan.baidu.com/</a><br>阿水AI：<a href="https://ai.xiabb.chat/auth/register?inviteCode=528FVXP861">https://ai.xiabb.chat/auth/register?inviteCode=528FVXP861</a><br>chat8：<a href="https://guan.chat772.com/#/register?bronk_on=1719312">https://guan.chat772.com/#/register?bronk_on&#x3D;1719312</a><br>因为前端代码chatgpt大部分都能直接写，拿来用即可</p><h2 id="介绍js"><a href="#介绍js" class="headerlink" title="介绍js"></a>介绍js</h2><p>​         JS是JavaScript的缩写，是一种用于网页开发的交互式脚本编程语言。它是一种轻量级的、解释性的语言，常用于为网页添加动态功能和交互性。JavaScript可以被嵌入到HTML页面中，在用户与网页交互时触发各种操作和事件，从而实现动态效果，比如表单验证、网页内容的动态加载和更新等。它还可以用于开发服务器端的应用程序和桌面应用程序。由于其广泛应用和与HTML、CSS的协作，JavaScript已经成为web开发中最重要的三大技术之一。</p><p>其中老师介绍了一个视频js<br>代码为：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;myVideo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">&quot;mp4_src&quot;</span> <span class="attr">src</span>=<span class="string">&quot;mov_bbb.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">&quot;ogg_src&quot;</span>  <span class="attr">src</span>=<span class="string">&quot;mov_bbb.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line">  您的浏览器不支持 video 标签。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>点击按钮播放或暂停视频。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;playVid()&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>播放视频<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;pauseVid()&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>暂停视频<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myVideo&quot;</span>); </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">playVid</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">x.<span class="title function_">play</span>(); </span></span><br><span class="line"><span class="language-javascript">&#125; </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">pauseVid</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">x.<span class="title function_">pause</span>(); </span></span><br><span class="line"><span class="language-javascript">&#125; </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>视频由<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.bigbuckbunny.org/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Big Buck Bunny<span class="tag">&lt;/<span class="name">a</span>&gt;</span>提供。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于找不到老师介绍的原视频只能找个差不多的来代替。介绍一下这是一个 HTML 页面代码，其中包含一个视频播放功能。通过点击按钮，可以播放或暂停视频。视频元素的 id 是 “myVideo”，通过 JavaScript 代码获取该元素对象。有两个按钮，分别调用了两个 JavaScript 函数：playVid() 和 pauseVid()。其中，playVid() 函数调用了元素对象的 play() 方法来播放视频，pauseVid() 函数则调用了元素对象的 pause() 方法来暂停视频。<br>视频源有两个(“source” 元素)，分别是 “mov_bbb.mp4” 和 “mov_bbb.ogg”，对应 MP4 和 OGG 格式的视频文件。<br>最后，页面中还提供了一个链接，点击链接可以访问 Big Buck Bunny 的网站。</p><h2 id="介绍css简单的页面布局"><a href="#介绍css简单的页面布局" class="headerlink" title="介绍css简单的页面布局"></a>介绍css简单的页面布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: lightgrey;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">25px</span> solid green;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>盒子模型演示<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里是盒子内的实际内容。有 25px 内间距，25px 外间距、25px 绿色边框。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701866139340-02a567e0-94ea-4601-ad76-f5b0a53e1bd4.png" alt="image.png"><br>结果展示如上图，这是一个简单的div盒子的布局，加上style标签能够更好的布局。css的盒子布局还可以看成这个样式：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200844955.png" alt="image-20231210200844955"><br>所以总结以下：html5进行整体内容的编写，css进行整个页面的布局，js进行事件的交互，所谓事件的交互就是指通过代码来处理和响应用户与网页之间的交互操作，例如鼠标点击、键盘输入、页面滚动等。举例说明以下：点击播放的按钮视频或者音频能够播放是因为触动了事件发生的条件也就是所谓的产生了事件的交互。<br>最后安装老师教的内容自己造了一个盒子，代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>; </span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">109</span>, <span class="number">241</span>, <span class="number">179</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#tf</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">205</span>, <span class="number">134</span>, <span class="number">41</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#asd</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">146</span>, <span class="number">146</span>, <span class="number">160</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#dfg</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">152</span>, <span class="number">127</span>, <span class="number">108</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span>你好，世界<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tf&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;asd&quot;</span>&gt;</span>我不好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dfg&quot;</span>&gt;</span>我怕不会<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>做了一个简单的布局，显示结果为：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701866643243-3f13f6ee-4d8b-4a06-b0b0-9ec8d84de91c.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>介绍路由器,osi七层模型,代理和抓包工具的使用</title>
      <link href="/2023/12/05/%E7%AC%AC%E4%BA%94%E5%A4%A9/"/>
      <url>/2023/12/05/%E7%AC%AC%E4%BA%94%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>上午：</p><h2 id="介绍路由和ip"><a href="#介绍路由和ip" class="headerlink" title="介绍路由和ip"></a>介绍路由和ip</h2><p>介绍路由器和ip：<br>路由器(公网ip)<br>静态路由：确定的路径<br>动态路由：自动协商最优路径(最优解)</p><p>ip：静态ip<br>       动态ip(dhcp)，会过期，过期之后自动回收，终端重启之后会分配新的ip<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200456841.png" alt="image-20231210200456841"><br>在设置IP地址时需要注意：<br>静态设置好后，动态分配后一定在一段时间内上不了网<br>动态ip设置后，将其改变为静态IP可能上不了网</p><h2 id="代理的介绍"><a href="#代理的介绍" class="headerlink" title="代理的介绍"></a>代理的介绍</h2><p>代理软件提供socks5的节点，sock5只接受传输层的协议，不接受网络层的协议。例如ICMP,IPsec<br>tcp&#x2F;ip协议：<br>TCP&#x2F;IP协议族包含许多其他协议和标准，如HTTP、FTP、SMTP等，它们提供了在Internet上进行各种通信和数据传输的基础。<br>简单介绍osi七层协议：<br>应用层   qq<br>表示层    数据解密<br>会话层      确保数据在通信中的同步        会话层<br>传输层      负责端到端的可靠传输和流量控制(TCP，udp)<br>网络层      网络之间传输数据包，处理逻辑地址(IP地址)，路由选择<br>数据链路层   处理物理地址(MAC)和错误检测<br>物理层  负责传输比特流，包括电学，光学和机械接口等物理特性<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200525319.png" alt="image-20231210200525319"></p><h2 id="昨天ipv4的补充："><a href="#昨天ipv4的补充：" class="headerlink" title="昨天ipv4的补充："></a>昨天ipv4的补充：</h2><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200546345.png" alt="image-20231210200546345"><br>分了地址块，要是有两个子网段一个大，一个小就会可能出现重复的IP地址此时就需要去找MAC地址<br>子网掩码的计算与使用：&#x2F;24就是子网掩码，IP地址包括网络位和主机位，子网掩码越小主机位越多。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200602432.png" alt="image-20231210200602432"><br>路由：<br>静态路由:手动配置路由表<br>动态路由：OSPF动态配置路由表<br>路由表包含：源ip&#x2F;mac，目的ip&#x2F;mac 四象限<br>交换机：集线器<br>正面：一个口<br>反面：网卡，多个口<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200624455.png" alt="image-20231210200624455"><br>简单解释一下，在一般情况下pc1是无法ping通pc2的，因为路由器相当于一堵防火墙挡住了他们之间的通信。但是如上图所呈现的将路由器1的路由表手动设置一个能够到达路由器2，而由于路由器之间的路由协议会去记录路由器1的ip与MAC地址，之后就能够使pc1 ping通pc2。</p><p>下午：</p><h2 id="windows手动配置ip"><a href="#windows手动配置ip" class="headerlink" title="windows手动配置ip"></a>windows手动配置ip</h2><p>此次过程是很简单的，打开控制中心<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701776831437-6da915ec-b6d5-4850-a020-8d7b910c5cc5.png" alt="image.png"><br>找到网络和共享中心，点击更改适配器设置，找到当前所使用的网卡，右键属性，找到TCP&#x2F;IPV4这个协议双击点开，点击使用下面的IP地址就可以进行更改自己的IP了，但是建议不要随便修改可能会使自己的终端无法连上网络。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701776909144-5db2cfe2-b1e2-4078-b02b-292033742fce.png" alt="image.png"></p><h2 id="vmmare-workstation网络模式"><a href="#vmmare-workstation网络模式" class="headerlink" title="vmmare workstation网络模式"></a>vmmare workstation网络模式</h2><p>wifi模块               有线网卡(接网线的接口)<br>驱动<br>官网查找驱动下载<br>三种网络模式：<br>桥接：出来物理机的IP之外都有可能 pc1连接vm0之间连接WiFi模块<br>仅主机：断网<br>nat(地址转换)：出口只有一个物理机的ip<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200716701.png" alt="image-20231210200716701"><br>pc2&#x3D;&gt;nat(路由器)&#x3D;&gt;一个物理机的ip<br>如图所示可知pc1是桥接模式，pc2和pc3是nat模式，那么它们之间的连接情况是咋样的呢？<br>pc1不能连pc2，pc3<br>pc2，pc3能连pc1<br>pc2能连pc3</p><h2 id="代理以及代理工具的使用"><a href="#代理以及代理工具的使用" class="headerlink" title="代理以及代理工具的使用"></a>代理以及代理工具的使用</h2><p>1.clash的使用：<br>设置端口为7890，打开允许局域网接入clash，如图所示设置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777394860-e74f79e2-f8b8-4f02-bd33-1518417ab90e.png" alt="image.png"><br>edge代理设置<br>点开edge，找到三个点，打开扩展，获取Microsoft的扩展，搜索<img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701777572603-4ea971b1-ace8-4d12-b584-b155d58ebd86.png#averageHue=%23185674&clientId=u81765de4-30f6-4&from=paste&id=u76b455a5&originHeight=48&originWidth=48&originalType=url&ratio=1.25&rotation=0&showTitle=false&size=1173&status=done&style=none&taskId=u42f72f18-1a63-4c2a-9fc7-54408a60099&title=" alt="image.png"><br>Proxy SwitchyOmega，获取拓展，安装完成之后打开拓展找到打开并固定Proxy SwitchyOmega，点击选项打开入图所示界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777736814-d5e4ec8d-0bfc-4e43-b64d-78e6aa77b6d2.png" alt="image.png"><br>点击新建情景模式，名字随便取，按照如图设置就可以将上图配置的clash接入浏览器中。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701777892456-65402b09-d24e-4aa9-a2f4-ff52421d6fb7.png" alt="image.png"><br>同理火狐浏览器也是一样，由于火狐自带的有foxyProxy，只需要按照如图去设置就行<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778035827-53bcf959-251b-4637-b715-cc8c70de1368.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778124230-6727c02c-2d7c-45d7-838c-f1b746792878.png" alt="image.png"><br>浏览器能够使用代理的原理：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200735333.png" alt="image-20231210200735333"><br>proxi使用：<br>打开老师发送的地址<a href="http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/proxifier_137484.rar">http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/proxifier_137484.rar</a><br>通过这个地址可以下载proxi代理工具，下载完成之后解压并用管理员身份打开，界面如图所示<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778476702-e0112ed3-b1e9-4ac3-a427-70f23af2becc.png" alt="image.png"><br>打开配置文件，点击代理服务器，添加，按照如图设置点击确认即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778581379-739d7fb0-35f1-4a12-bad5-fcfff97312d0.png" alt="image.png"><br>打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778767451-fd0f131b-0c54-4118-97b9-c5adabdf6c30.png" alt="image.png"><br>设置为之后代理规则的界面应该为，点击确认即可。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701778819759-56133eea-1a3d-4fe4-a389-da5e09fdeba3.png" alt="image.png"><br>此时进行测试，按上win+r，输入cmd命令。再次输入ssh <a href="mailto:&#114;&#111;&#x6f;&#x74;&#x40;&#49;&#x2e;&#49;&#46;&#x31;&#46;&#49;">&#114;&#111;&#x6f;&#x74;&#x40;&#49;&#x2e;&#49;&#46;&#x31;&#46;&#49;</a><br>此时会显示连接失败，但是问题不大，查看proxi上面的信息可以看到ssh.exe，而且ssh.exe 服务在第五层会话层，此时进行过连接说明配置成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779020546-41aa34f7-88ec-4bd7-b278-8fd436b4d5fa.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779037617-fd6e0a39-d503-4c2f-8931-de2cb45c6b58.png" alt="image.png"><br>也可以对steam进行测试，打开steam结果为<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779197766-b3285c9f-62e4-4cf3-99e5-546bcc21407d.png" alt="image.png"><br>能够成功进入，proxi上面显示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779243129-c53a1afe-1652-4914-9c65-a5f3c49328ea.png" alt="image.png"></p><h2 id="wireshark抓包工具的使用"><a href="#wireshark抓包工具的使用" class="headerlink" title="wireshark抓包工具的使用"></a>wireshark抓包工具的使用</h2><p>打开链接：<br><a href="http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Wireshark-win64-3.0.0%E4%B8%AD%E6%96%87%E7%89%88.exe">http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/Wireshark-win64-3.0.0%E4%B8%AD%E6%96%87%E7%89%88.exe</a><br>下载wireshark(抓网卡的包)抓包工具，切记此版本目前只能在Windows10上面进行运行，当运行到windows11时会显示没有接口，需要进行更新，更新之后一样可以运行成功，因为winpcap版本太低也就是驱动程序版本太低导致无法识别win11的接口。<br>双击打开wireshark，界面如图所示，如果是虚拟机就是端口0<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779667773-ce2705f2-0933-4c90-9d5b-328ad14e5d09.png" alt="image.png"><br>找到自己当前物理机联网的形式，比如WLAN，双击进入，可以输入http，tcp进行查看，这里展示tcp结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779844552-48d7ae85-a83b-4133-b2c4-7aa8ffacaa52.png" alt="image.png"><br>启动命令行，开ping 192.168.2.45<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701779943879-e7e5d789-75d3-4646-96da-297ee1b35d00.png" alt="image.png"><br>输入icmp，查看去，回的次数<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701780165787-81314540-2f33-4c86-952b-e86b296b7a4e.png" alt="image.png"><br>DNS大小默认为78bit，大于78小于130<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701780307553-4786e68d-a13a-4363-852e-b04c3408c2a9.png" alt="image.png"><br>最后简单介绍tcp三次握手，四次挥手的过程：<br>TCP（传输控制协议）是一种在计算机网络中用于可靠传输的协议。<br>三次握手（establishment）：</p><ol><li>第一次握手：客户端发送一个带有 SYN（同步）标志的 TCP 包，用于请求建立连接。此时客户端进入 SYN-SENT（同步已发送）状态。</li><li>第二次握手：服务器收到请求后，会回复一个带有 SYN&#x2F;ACK（同步&#x2F;确认）标志的 TCP 包，表示收到请求并同意建立连接。同时服务器会为该连接分配资源。此时服务器进入 SYN-RECEIVED（同步已接收）状态。</li><li>第三次握手：客户端收到服务器的回复后，会发送一个带有 ACK（确认）标志的 TCP 包，表示客户端收到了服务器的确认，并向服务器发送一个确认请求。该包发送完毕后，客户端和服务器都进入 ESTABLISHED（已建立连接）状态，连接建立成功。</li></ol><p>四次挥手（termination）：</p><ol><li>第一次挥手：当客户端或服务器的其中一方决定关闭连接时，它会发送一个带有 FIN（结束）标志的 TCP 包，表示请求关闭连接。发送方进入 FIN-WAIT-1（等待对方的结束请求）状态。</li><li>第二次挥手：接收方收到结束请求后，会发送一个带有 ACK（确认）标志的 TCP 包，表示收到请求。发送方进入 FIN-WAIT-2（等待对方的结束确认）状态。此时连接只是半关闭状态，即接收方仍可以发送数据。</li><li>第三次挥手：接收方发送完数据后，会发送一个带有 FIN（结束）标志的 TCP 包，表示它也准备关闭连接。接收方进入 LAST-ACK（最后确认）状态。</li><li>第四次挥手：发送方收到结束请求后，会发送一个带有 ACK（确认）标志的 TCP 包，表示收到结束请求的确认。发送方进入 TIME-WAIT（等待时间）状态，等待一段时间后关闭连接。接收方收到确认后，也关闭连接。<br>需要注意的是，四次挥手完成后，客户端和服务器都进入 CLOSED（已关闭）状态，连接彻底关闭。这里的时间等待（TIME-WAIT）状态是为了防止最后的 ACK 包在网络中丢失，确保连接的可靠关闭。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>复盘上周知识，介绍基本网络信息</title>
      <link href="/2023/12/04/%E7%AC%AC%E5%9B%9B%E5%A4%A9/"/>
      <url>/2023/12/04/%E7%AC%AC%E5%9B%9B%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h2 id="永恒之黑漏洞的回顾："><a href="#永恒之黑漏洞的回顾：" class="headerlink" title="永恒之黑漏洞的回顾："></a>永恒之黑漏洞的回顾：</h2><p>上午：<br>    发了一个自动关闭Windows10防火墙的一个exe，名字叫做StopDefender.exe，由于本机是Windows11，所以无法进行演示，不过可以运行一下来查看效果。<br>       在Windows11上面运行会无法打开命令行,会闪一下。而要去进行永恒之黑漏洞的实现是需要关掉两台机器上面的防火墙以及实施保护。否则就会win10hei虚拟机无法蓝屏导致失败，而且win10hei虚拟机不要去更新，因为cve的漏洞是在1903-1906之间，win10系统太新的话会导致实验失败。由于已经做过一遍永恒之黑的漏洞这里就不演示了。</p><p>还介绍了三个网站cnvd，cnnvd还有cve：<br>CNVD ：CNVD是指”中国国家信息安全漏洞库共享平台”（China National Vulnerability Database）<br>官网地址是：<a href="https://www.cnvd.org.cn/">https://www.cnvd.org.cn/</a><br>CNNVD：CNNVD 是指”国家安全漏洞库”,它的主要职责是收集、分析和发布与中国相关的安全漏洞信息。它提供了大量的漏洞信息，包括漏洞的描述、威胁级别评估、影响范围、修复建议等。通过查询 CNNVD，用户可以获取最新的漏洞信息，以了解各种 IT 系统和应用程序中存在的安全风险，并采取相应的安全措施。<br>官网地址是：<a href="https://www.cnnvd.org.cn/home/childHome">https://www.cnnvd.org.cn/home/childHome</a><br>cve：CVE（Common Vulnerabilities and Exposures，通用漏洞和公开漏洞）是一个公开的漏洞标识系统。CVE的目标是为全球范围内的软件、硬件和系统漏洞提供唯一的标识符，以便于在安全社区中进行讨论、共享和协调漏洞信息。<br>CVE的标识符采用”CVE-年份-编号”的格式，例如”CVE-2023-1234”。每个CVE标识符都与一个特定的漏洞相关，并包含了漏洞的描述、严重程度、影响的软件和设备等信息。此外，CVE还促进了漏洞披露和漏洞修复的协作，提高了整体的网络安全性。<br>官网地址是：<a href="https://cve.mitre.org/">https://cve.mitre.org/</a></p><p>远控规则：<br>服务端                                     客户端<br>反弹shell：<br>服务端开一个端口监听127.0.0.1   8888<br>木马配置：服务器的IP 端口就是8888<br>正向shell：正向shell可能会出现bug，是因为由于windows 防火墙(IP table)或者Linux的防火墙抵御来自sever的监听。但是反向shell不会，因为反向shell是客户机c出栈，正向shell是入栈。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701689287512-3f14f735-d3a1-4f7e-9aca-7d50809757f0.png" alt="image.png"><br>尝试了一下去ping其他人的IP地址发现防火墙没关，无法去进行ping通，但是有些人是可以拼通的，主要原因是防火墙出现了bug，解决防火墙抵御bug的解决方法，直接关闭防火墙或者在防火墙高级设置中允许连接<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701689541697-75f029ac-9eba-4a3c-8649-44dc7c99079c.png" alt="image.png"></p><p>下午：</p><h2 id="演示安卓远程操控查看相关信息"><a href="#演示安卓远程操控查看相关信息" class="headerlink" title="演示安卓远程操控查看相关信息"></a>演示安卓远程操控查看相关信息</h2><p>安装一款安卓模拟器，mumu模拟器，下载mumu6，不要去下载mumu12，因为木马程序的版本较低可能会无法进行进行远控。下载地址为：<a href="https://mumu.163.com/">https://mumu.163.com/</a><br>下载安卓远程工具AhMyth.exe<br>这两个都下载好后打开mumu模拟器，安装后打开会弹出Hyper-V的弹窗，如果之前是打开的会提示关闭之后重启就好了打开之后进行正常的界面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690424395-0c2d4b06-e5ab-4571-94fd-6306e530c9df.png" alt="image.png"><br>打开AhMyth.exe，用管理员的方式打开，输入IP地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690541004-87b4135f-1622-4ee9-b3df-dcba83be6441.png" alt="image.png"><br>在下面会显示生成木马的路径，点击mumu模拟器的+APP按钮就可以将其添加到桌面上。生成app不成功的原因，病毒原因和权限原因<br>环境变量上面的优先级最高<br>java版本太高会失败，自己下载的时候是java8.0.31的版本<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690662345-43e84128-937e-475c-b1e2-5c1c1cab673c.png" alt="image.png"><br>在AhMyth.exe上开启监听，点开此app就会连接成功，就可以进入这个界面。照相拍到图片无法显示，是由于火绒进行了拦截，也可虚拟定位等等进行操作，整体上而言还是功能还是比较少的，期待进一步完善。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701690820715-e0561fde-2b2a-4049-9553-003e5bca2269.png" alt="image.png"><br>下午还讲解了一下用txt写python代码直接在命令行运行的过程：<br>首先安装python3.12版本，前面两个勾上，选择安装路径缺什么模块安装什么模块<br>vscode编写python代码安装python插件，不要安装太多，插件会混乱的，而且这些在前面已经介绍过就不再演示了</p><h2 id="网络基本知识"><a href="#网络基本知识" class="headerlink" title="网络基本知识"></a>网络基本知识</h2><p>按上win+r输入ipconfig查看到相关网络信息，<br>以太网适配器：有线插槽<br>virtual box ：虚拟网卡<br>zero tier one ：虚拟局域网的软件</p><p>ipv6:128位二进制数字组成<br>介绍：<br>：：：：：<br>有多个零接在一起，抽长的缩短<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701691456224-fa535016-8f03-4285-a60d-f2c6ad38f705.png" alt="image.png"><br>ipv6测试：<a href="https://ipv6ready.me/">https://ipv6ready.me</a></p><p>ipv4：32个二进制的数字组成<br>192.168.1.1<br>a   b   c    d<br>255.255.255.255&#x2F;24   前面是IP地址，后面是子网掩码<br>.255广播地址<br>.254<br>.253<br>.252网关</p><p>公网(外网)ip                                     私网(内网)ip<br>                                                        IP地址分段<br>                                                  任何人都可以用的ip地址<br>下图是公网ip范围：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200006484.png" alt="image-20231210200006484"><br>下图是私网ip范围：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701691693536-3e2ae7aa-e685-45ef-9aca-bcc3c99e4101.png" alt="70c7f93372aac18f330d87b7d3a4dae.png"><br>局域网的实现如图所示：<br>光猫：光信号转换为电信号，通过光猫对内外网地址进行转换，从而实现通信<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200042916.png" alt="image-20231210200042916"><br>学校局域网的实现：<br>通过局域网自己配置交换机和路由器实现减本增效的结果。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/image-20231210200103422.png" alt="image-20231210200103422"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos-minimal虚拟机命令</title>
      <link href="/2023/12/01/%E7%AC%AC%E4%B8%89%E5%A4%A9/"/>
      <url>/2023/12/01/%E7%AC%AC%E4%B8%89%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>一:<br>上午：下载CentOS-7.9-x86_64-Minimal-2009.iso,也就是kali的iso镜像，下载地址为：<br><a href="http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/CentOS-7-x86_64-Minimal-2009.iso">http://192.168.2.6:5244/d/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E9%95%9C%E5%83%8F%E5%A4%A7%E5%85%A8/CentOS-7-x86_64-Minimal-2009.iso</a><br>由于我们之前已经安装过vmmare虚拟机，所以这里就不介绍，点开vmmare虚拟机，点开文件新建虚拟机，点击典型，下一步，找到自己的iso镜像路径。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429239094-7807a184-e910-43e1-9f9b-80f99616cf5c.png" alt="image.png"><br>接着下一步，点击完成。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429420013-e27dcda6-73cd-4dd5-aa77-d79e1578afb3.png" alt="image.png"><br>点击虚拟机等待配置完成，安装源选择磁盘，打开wifi，选择中文，输入密码，简单需要输入两次，完成即可进入到centos虚拟机的界面。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701429975903-55ec11fd-01a3-472d-8ea9-d1e63d240be5.png" alt="image.png"><br>如上图所示，初次进入是这个界面。<br>输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls查看文件</span><br><span class="line">ls / 查看根目录文件</span><br><span class="line">ls -a </span><br><span class="line">隐藏文件.xxxxx  </span><br><span class="line">ls -a 查看隐藏文件 </span><br><span class="line">ls .当前目录</span><br><span class="line">ls ..上一级目录</span><br><span class="line">touch 文件名 </span><br><span class="line">touch .文件名 创建隐藏文件</span><br><span class="line">ls -al 查看隐藏文件和所有权限</span><br></pre></td></tr></table></figure><p>依次输入以上命令，出现如下结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431129419-874359fa-8931-4809-864e-50a5b17f9476.png" alt="image.png"><br>text1和.text2是刚刚创建的文件，当输入ls时发现并没有.text2的文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431283233-3302a065-5a9e-450e-8a55-c1f287087e9f.png" alt="image.png"><br>对ls -al的解读按照顺序如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701431428757-08f8d583-9449-4b88-ab65-defbab736095.png#averageHue=%23f1efed&clientId=uab2d2bdd-758a-4&from=paste&height=64&id=u9810943a&originHeight=82&originWidth=862&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=10481&status=done&style=none&taskId=u2b412896-6425-4138-9ff3-24f0c5ca618&title=&width=670.6000366210938" alt="image.png"><br>文件分为可执行文件和文本编辑文件<br>mkdir -p 递归创建t1&#x2F;t2&#x2F;t3 从根目录开始的绝对路径<br>输入cd t1,依次输入ls可以看到效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431652538-c106c34f-5be6-4b0e-a8a7-dc6b2d8ff1a5.png" alt="image.png"><br>cd  &#x2F;切换到根目录，输入 ls查看文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701431939188-3445e846-26ed-4f56-b6b9-5eb83f23f587.png" alt="image.png"><br>所含文件的内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin 放二进制文件</span><br><span class="line">dev 放磁盘文件</span><br><span class="line">tmp 临时文件</span><br><span class="line">boot 放驱动文件</span><br><span class="line">etc 放编辑文件</span><br><span class="line">home 存储用户个人信息文件</span><br><span class="line">sbin 放置系统管理的备用程序</span><br><span class="line">var 放日志文件</span><br></pre></td></tr></table></figure><p>下午：<br>输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whoami  显示用户名</span><br><span class="line">id      显示用户的ID，以及所属群组的ID</span><br><span class="line">pwd   显示当前目录</span><br><span class="line">rm -f 强制删除</span><br><span class="line">rm-rf 强制递归删除</span><br></pre></td></tr></table></figure><p>查看效果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432299051-e7dbacdc-e0b1-4e76-a050-7af6b6707cbc.png" alt="image.png"><br>下图是rm -f 删除文件的对比<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432848067-93264260-7fce-47b9-8576-b77b8ec91f3e.png" alt="image.png"><br>下图是rm -rf 删除文件的对比<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701432965781-12a0dfe0-31ea-4046-9a34-1893fc6a16fb.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /bin|grep 关键字 - 用于筛选关键字的文件</span><br><span class="line">ls /bin |more 竖着看</span><br><span class="line">cat /bin/ls 查看文本文档  二进制文件乱码</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433319200-1ab918de-594c-4913-8d14-832dc726162b.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433516776-acdb3012-1af7-40ab-a23c-2620ed1a632f.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433637508-7dd0fa28-8cdb-408c-9b27-f2e742c30dc3.png" alt="image.png"><br>输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文本编辑：</span><br><span class="line">touch 123</span><br><span class="line">vi 123 i插入，esc，：wq！保存并退出</span><br><span class="line">：q！退出不保存</span><br><span class="line">touch 文件名 文件名 覆盖时间,同时创建文件</span><br><span class="line">cat -n 123 查看内容和行号</span><br><span class="line">cat 123 查看内容</span><br></pre></td></tr></table></figure><p>新建123，然后vi 123出现的结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701433775368-0ae4953e-4a10-49b0-a4c4-4cf481cc27c9.png" alt="image.png"><br>touch同时创建文件<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434002453-a92d2214-c510-4117-aa1c-1922be4cc800.png" alt="image.png"><br>cat命令的使用：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434092681-bb8521fa-7646-429d-9475-80eeaf62f953.png" alt="image.png"><br>输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find 最大范围 搜索名字为ls的文件</span><br><span class="line">find / -name ls</span><br><span class="line">systemctl enable sshd</span><br><span class="line">systemct1 restart sshd</span><br><span class="line">ip add</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434354150-4e5188db-efd3-4ef8-a563-e984b17d87e0.png" alt="image.png"><br>输入vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config对38行进行修改，是yes就不用管，删除前面的#，如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434832364-1de7950e-2254-48d4-a73f-14e135290ecb.png" alt="image.png"><br>最后在物理机上win+r输入cmd，再次输入ssh root@虚拟机ip地址：ssh root@+ip，首次需要输入个yes<br>需要接着输入contos7的密码，成功后就是下图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701434948402-9c147d20-9ffd-40ad-b80e-c0eb659ba528.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c盘清理,博客搭建,上传笔记</title>
      <link href="/2023/12/01/%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
      <url>/2023/12/01/%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>一：<br>上午：<br>下载<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1701351533406-9b6feb44-d36d-4f5d-af52-7b196add8f46.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40666686/1701351533406-9b6feb44-d36d-4f5d-af52-7b196add8f46.zip%22,%22name%22:%22Dism%20%2010.1.1002.1.zip%22,%22size%22:3776223,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u236810c1-b479-43bb-a56e-803941f18d0%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u5948df8f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Dism++10.1.1002.1.zip</a>，这个文件主要是对C盘进行清理<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701351752842-491eb95e-9408-45b7-9e7b-a818c12c3411.png" alt="image.png"><br>SpaceSniffer.exe查看当前磁盘所占空间，也可以任意删除当前空间。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701351882014-a3c7f16c-e22f-4f15-be90-1f33634eaedc.png" alt="image.png"><br>edge浏览器使用代理proxy<br>安装插件proxy：打开edge浏览器，点击三个点，点开拓展，获取Windows扩展，搜索Proxy，找到Proxy SwitchyOmega 2.5.20，下载之后安装完成，就可以设置代理，启动代理就可以去外网了<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701352149681-a15add08-7158-404a-9546-89fa20375220.png" alt="image.png"><br>创建一个属于自己的博客网站：<br>下载git和node.js<br>git官网连接地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a><br>node.js官网地址：<a href="https://nodejs.org/en/download">https://nodejs.org/en/download</a><br>分别下载并且安装最新的版本<br>在挂代理的前提下注册自己的guitub账号，保证自己的账号能够正常使用。<br>在G盘新建一个文件夹命名为hexo，在路径处输入cmd进入命令行模式，<br>创建一个blog文件夹：<br>npm install -g hexo-cli<br>hexo init blog<br>切换到blog文件夹：cd blog<br>hexo g<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701352964601-e6eaa1a1-5654-4d3c-96d4-5d363f785480.png" alt="image.png"><br>依次输入这几串代码：新建一个test_my_site<br>hexo new test_my_site<br>hexo g<br>hexo s<br>之后就可以访问<a href="http://localhost:4000/">http://localhost:4000/</a>访问本地的博客<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353503544-cf0e1ede-e498-40ad-b99d-9aa0e6d880f9.png" alt="image.png"><br>输入整个命令ssh-keygen -t rsa -C “邮件地址”<br>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，当前所在的目录在C:\Users\林尘曦.ssh，打开id_rsa.pub的文件<img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353648596-7ab7b4b2-5aa9-4661-9728-8e974bbdf334.png" alt="image.png">记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701353551944-e6641513-a132-4d6f-88f3-bf7059bb9463.png" alt="image.png"><br>key填写C:\Users\林尘曦.ssh中的内容，尝试ssh连接,测试是否成功<br>在命令行输入ssh -T <a href="mailto:git@github.com">git@github.com</a> ，如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功：<br>如果是第一次需要输入yes，出现如下结果就能成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354004504-9a369999-950b-4bfc-bfa1-f89855fa0d18.png" alt="image.png"><br>在选中的位置(blog目录下)打开cmd(以管理员身份)<br>npm install hexo-deployer-git –save,在上一个Git Bash Here还需要继续配置<br>git config –global user.name “tfktk”&#x2F;&#x2F; 你的github用户名，非昵称<br>git config –global user.email “<a href="mailto:&#51;&#51;&#53;&#55;&#x36;&#54;&#51;&#55;&#55;&#55;&#51;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;">&#51;&#51;&#53;&#55;&#x36;&#54;&#51;&#55;&#55;&#55;&#51;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;</a>“&#x2F;&#x2F; 填写你的github注册邮箱<br>准备上传代码:在github上新建一个存储库，命名为github的用户名.github.io：例如创建一个tfktk.gitub.io的存储库。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701392879554-c1ede851-c27a-40a7-94d9-eb555b2282e6.png" alt="image.png"><br>编辑_config.yml文件，在最后一段改成这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:tfktk/tfktk.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354554558-aceb975b-580f-4c82-84bc-875bc7b2bef2.png" alt="image.png"><br>成功之后你就可以开始你的blog玩耍了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354697975-b796235d-6a24-471e-98e4-4874adc598b2.png" alt="image.png"><br>在浏览器输入<a href="https://tfktk.github.io/">https://tfktk.github.io/</a>成功之后进入界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701354852479-33cbdf9b-3c82-4849-ad34-6ec3f49effed.png" alt="image.png"><br>下午：<br>下载并安装<a href="https://molunerfinn.com/PicGo/">PicGo</a>：<a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a><br>下载并安装typora：<a href="http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/typora%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6.zip">http://192.168.2.6:5244/%E7%BD%91%E7%9B%98/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%85%A8/typora%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6.zip</a><br>找到刚刚安装的typora.exe，右键打开文件所在位置，找到app.asar文件将压缩包的文件进行替换<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355386523-6740ba99-6f95-4513-a79d-055c35bf0996.png" alt="image.png"><br>双击打开typora.exe，打开压缩包的激活码.txt，输入对应的位置进行激活，激活成功。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355542741-29f6e17b-a673-417f-aea0-a2bfc46702ce.png" alt="image.png"><br>点击文件，点击偏好设置，找到图像按如图设置：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355603572-fb73076e-ca04-41b4-b608-a12314f2d98b.png" alt="image.png"><br>重新建立一个专门存放图片的库，例如：picture库<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701393070407-5f656221-22c5-422d-8a1e-506740718174.png" alt="image.png"><br>缩小页面。打开PicGo，点击图床设置，点击gitub进行配置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355842075-09fa44a7-6e8a-4fde-ba87-93dd1556e706.png" alt="image.png"><br>优先设置密钥：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355806462-ea4b7564-a0da-43cb-bd14-7cc313b95b67.png" alt="image.png"><br>点击验证图片选项，成功即出现如图所示界面：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701355904436-135684c7-6f89-4696-aa62-de1214df268f.png" alt="image.png"><br>整个图片上传的原理：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701356087975-c805ab70-ae36-4928-a411-53cd19dabbe1.png" alt="67882cd8254765792f246390a883f2c.png"><br>学习并练习了博客笔记用vscode来写：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701356172848-25f66bfc-cc75-422a-97fc-02fec44c2229.png" alt="image.png"><br>上传笔记：<br>找到自己的在线语雀笔记，进行导出选择方式为，此时生成的是第三天.md<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701435253276-3df09301-f6b6-447f-bcc7-ea32daf6221b.png" alt="image.png"><br>打开文件第三天.md将其复制到G:\hexo\blog\source_posts这个文件夹<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701435468745-db43d244-94a9-4f10-84e7-12d05993b216.png" alt="image.png"></p><p>在这个页面右键找到open Git Bash here<br>输入 hexo new 名字就会生成一个.md的文件<br>将第三天的内容复制到新生成的.md中，将新生成的第三天.md用Typora打开。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701436244258-0f6fd68b-e9cc-43c1-bd43-a94afbe08a13.png" alt="image.png"><br>特别注意图片需要单独传送，点击图片，右键通过picGo.app上传图片，原理在上面已经说过就不介绍了。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701436495604-30b8c7e3-5695-4f42-98e6-5ad9af642068.png" alt="image.png"><br>默默等待图片上传完成就可在自己的个人博客主页<a href="https://tfktk.github.io/">https://tfktk.github.io/</a>查看到了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创造tg账号,制作并完善钓鱼网站,远程工具的使用</title>
      <link href="/2023/12/01/%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2023/12/01/%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>一：<br>上午:<br>安装vnc进行学习，展示了通过手机号查找个人基本信息，但是需要通过telegram，火狐，SMS接码平台，火狐代理管理<br>下面是相关telegram的一些电报频道:<br>您的专属邀请链接：<a href="https://t.me/AJL01_bot?start=C9uZSsbKX1">https://t.me/AJL01_bot?start&#x3D;C9uZSsbKX1</a><br>社工庫机器人：t.me&#x2F;aishegongkubot?start&#x3D;AISGK_HBEIR85X<br><a href="https://t.me/DATA_007bot?start=8989324940">https://t.me/DATA_007bot?start&#x3D;8989324940</a><br><a href="https://t.me/pingansgk_bot?start=ee95c5680f">https://t.me/pingansgk_bot?start&#x3D;ee95c5680f</a><br><a href="https://t.me/JokerSGKbot?start=87OE61VQ">https://t.me/JokerSGKbot?start=87OE61VQ</a><br> <a href="https://t.me/PyramidNetBot?start=pRg3K08">https://t.me/PyramidNetBot?start=pRg3K08</a><br><a href="https://t.me/XingDun2Bot?start=4eoHoLE">https://t.me/XingDun2Bot?start=4eoHoLE</a><br>浏览器访问，tg电报转化中文的地址：tg:&#x2F;&#x2F;setlanguage?lang&#x3D;classic-zh-cn<br>sms接码平台：<a href="https://sms-activate.org/cn/freePrice#activation">https://sms-activate.org/cn/freePrice#activation</a><br>代理购买：<a href="https://console.xenolink.net/#/register?code=vocvktBL">https://console.xenolink.net/#/register?code=vocvktBL</a><br>社工库：<a href="https://sgk66.cc/">https://sgk66.cc/</a></p><p>下午：<br>Windows10的永恒之黑漏洞实验：<br>1.安装python，版本越新越好。<br>   python官网：<a href="https://www.python.org/">https://www.python.org/</a><br>2.需要安装vmare虚拟机，然后安装Windows10虚拟机，利用本机使Windows10虚拟机蓝屏<br>   vm虚拟机官网地址：<a href="https://www.vmware.com/products/workstation-pro.html">https://www.vmware.com/products/workstation-pro.html</a><br>   直接下载最新的地址：<a href="https://download3.vmware.com/software/WKST-1750-WIN/VMware-workstation-full-17.5.0-22583795.exe">https://download3.vmware.com/software/WKST-1750-WIN/VMware-    workstation-full-17.5.0-22583795.exe</a><br>   VMare 虚拟机激活码：JU090-6039P-08409-8J0QH-2YR7F<br>3.物理机上面按win+r，输入cmd，ipconfig查看物理机地址下载CVE-2020-0796-Poc（它用python写的代码），的压缩包并解压，找到目录输入cmd，输入以下命令：<br>       python .\CVE-2020-0796.py+ Windows10虚拟机地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701254224547-02c52f4e-5c34-4002-9352-faca12ec1646.png" alt="image.png"><br>在整个过程中缺少哪个named就安装哪个，输入命令如下：pip3 install   xxxxx -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br>4.当windows10虚拟机蓝屏重启时实验成功。</p><p>晚上：<br>作业1：注册tg号<br>方法：手机和电脑同时挂上代理，电脑登录sms接码平台，注册并充值自己的账号，购买号码并查看号码，然后手机开启代理，在手机上面可以通过谷歌商店下载一个电报，然后手机打开电报输入sms接码平台获得的号码，发送验证码，等待几分钟，当sms平台接收到验证码时，手机输入验证码，注册个人信息，进入电报即成功。然后将上述的邀请挨个导入自己的电报中，如果没有接收到验证码，继续刷新号码进行尝试。<br>作业2：完成永恒之黑实验<br>选修作业:自己学习渗透视频的基本介绍以及工具<br>1-1：渗透介绍：模拟恶意攻击者，挫败目标系统的安全措施。主要是web渗透：针对web应用程序，主要是这四个方面：服务器，中间件，数据库，web app<br>渗透工程师需要掌握的技能：开发思维和恶意攻击者的思路与方法<br>web渗透步骤：<br>1.信息收集:耗时多<br>2.整站映射:<br>3.漏洞扫描:<br>4.漏洞利用-可能需要拓展渗透结果进行进一步提权<br>5.测试报告-报告给出漏洞信息，验证信息，解决方法<br>注意：要及时和客户沟通，需要进行授权<br>结构图：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701174369976-5d8939a7-a77c-406a-9836-1454d79bd246.png" alt="1-1.png"><br>1-2：基本渗透工具介绍：<br>HTTP代理：介于浏览器和服务器之间的桥梁，常用工具Burpsuite<br>网络爬虫：对web app整个网站进行测试，常用工具：ZAP ,Httrack,Burpsuite<br>python工具：Scrapy<br>web漏洞扫描：web app技术进行探测，常用工具：AppScan,AWVS，python工具：W3af(更新慢)<br>目录检测：对web app不链接页面检测，常用工具：Dirb,Wfuzz<br>特定任务：自动化工具，学习python<br>基本框架如下：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701174502856-7516ed0e-18e4-4fa6-82db-34a22dee15da.png" alt="1-2.png"><br>1-3：HTTP状态码获取：<br>HTTP模型：客户端请求，服务端响应；响应状态码，标识接收或拒绝请求<br>python解决问题：测试网站：<a href="https://httpbin.org/">https://httpbin.org/</a><br>                            GET方式：获取200状态码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701175547236-b4bdf5fc-191c-4584-8dcf-3d50b3c0aad5.png" alt="1-3.png"><br>打开<a href="https://httpbin.org/">https://httpbin.org/</a>,使用get的方法获得200特征码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701265480072-1e1eb3a9-10b6-4bef-a71e-c171af4f76c7.png" alt="image.png"><br>在pycharm进行编写代码并且进行编译:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701266177625-d6e3d6de-7d63-49ad-b3d4-db89edd03640.png" alt="image.png"><br>在<a href="https://httpbin.org/">https://httpbin.org/</a>网站获得当前状态码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701266351421-8160ccfd-b4b0-4189-a7f9-370d9306b97b.png" alt="image.png"></p><p>二：<br>上午：<br>制造钓鱼网站:<br>1.打开虚拟机，安装kali linux，进入root模式(在整个过程中不能用快捷键进行粘贴复制)<br>输入：vim &#x2F;etc&#x2F;proxychains4.conf<br>2.在最后一行输入信号强的外网通道（IP地址 端口号）：socks5 192.168,2,36 10388,由于自己的代理无法完成下载，所以选择老师的。输入完按esc，输入：wq！(保存退出)。<br>3.输入命令,下载mip22:proxychains4 git clone <a href="https://github.com/makdosx/mip22">https://github.com/makdosx/mip22</a>(注意本次操作只用一次,成功之后将会显示错误命令)<br>4.输入ls,验证是否有mip22<br>5.切换到mip22目录:cd mip22<br>6.给当前目录赋予权限:chmod +x .&#x2F;*<br>7.进入mip22钓鱼网站制作页面:proxychains4 -q bash .&#x2F;mip22.sh<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701222759431-90fe1c2b-9293-4c68-ab82-c7920368afae.png" alt="image.png"><br>8.依次输入1,19,3,每次输入之后需要等待,最后出现URL http（s）和URL subdomain<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701223704393-814629ae-8b45-4e7d-a472-319f0dcc3894.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701223750918-475bae6f-2d95-476b-8b05-c3906fac024b.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701219855339-69c24a9b-3ba7-4c33-a5cb-744590f7de75.png" alt="image.png"><br>9.将https网址发送给微信好友，点击后能够获得输入者输入苹果注册的用户名和密码。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701225864300-fcc45861-7b1a-4625-9f45-8e35f6a8aad3.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701225969540-1fec11f6-428d-4fee-9516-0220d0de3949.png" alt="image.png"><br>可看到当前用户输入的账号和密码。<br>介绍各个熟知系统的起源以及系统的演变过程，如图所示：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701219914448-dc3c8eca-a5fb-4875-9d9a-aaec4e075282.png" alt="e2bd6aa635fb06c34d6dd8b61c1f28c.png"><br>下午：<br>介绍了昨天所看1-3视频关于获得特征码的另外两种方法：<br>1.在桌面上创建一个txt文件，重命名为1.py,输入如下代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">r =requests.get(url)</span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br></pre></td></tr></table></figure><p>在物理机上面win+r进入dos命令行状态，切换到Desktop目录下，输入python 1.py,回车，出现错误需要逐个安装模块，输入命令为：<br>pip install xxx   -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br>当不报错时显示结果200的状态码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701254959342-843cfe2b-6cbf-4ac2-9e26-3dd75df2f01b.png" alt="image.png"><br>2.利用vscode完成本次实验：<br>   安装vscode注意不要安装在c盘，官网地址：<br>   也可下载老师的绿色vscode，安装之后打开需要下载四个扩展：python，pylance，vscode中文语音包，输入ai后出现的插件GitHub Copilot，，优先安装中文包，之后需要重启再次下载另外四个拓展。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701227027502-5250ea9f-2130-4c7a-a4cf-dd0f5847cd8e.png" alt="image.png"><br>在桌面建立文件夹命名为py,打开vscode,然后点击打开文件夹py,在py文件夹下面新建1.py,输入如下代码：<br>   在运行后发现缺少模块，在命令行中用下面这个命令补全一个个模块：pip install xxx   -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host mirrors.aliyun.com<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701237474749-532d7e9a-0276-406a-99a4-0afb9bf7e789.png" alt="image.png"><br>成功之后获得200的特征码<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701237541774-7ee37bef-b14f-4240-81f4-75008bf01b8f.png" alt="image.png"><br>控制工具的使用介绍：<br>大灰狼的使用：在物理机输入win+r,查看当前物理机的IP地址。下载压缩包，解压到桌面，点开大灰狼远程控制桌面，点击输入当前的物理机IP地址生成一个木马软件命名为222.exe放入G盘。<br>打开Vm虚拟机,点击winhei10,打开Windows10受害机，将木马软件复制到Windows10虚拟机中，注意在本次实验中，虚拟机和物理主机均关闭防火墙以及安全防护特别是实时保护，双击222.exe,物理机大灰狼控制平台上面就可看到虚拟机已经能够控制，查看虚拟机基本信息，远程控制，语音输入，远程聊天，获取shell权限等等操作。切记在本次实验中将虚拟机Windows10的网络配置为NET模式,如果为桥接模式就会在物理主机上面无法获得Windows10的远程控制权限，因为在桥接模式下能够ping通其他地址，也能够连网，但是纯纯就是不能获得远程控制的权限，将222.exe复制到物理主机时，双击exe也能够进行远程控制，开始以为是Windows系统的差距，后面才经过排错就知道是网络配置的问题。<br>所获得的远程控制权限具体功能如图：<br>例如：远程桌面查看：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701255804325-f0baccb7-ab3c-477d-bf9d-9bf77d9205ff.png" alt="image.png"><br>唤起远程终端：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701255995746-314edd15-029b-4274-846a-1e6efad56994.png" alt="image.png"><br>三:<br>上午:<br>远程工具Quasar v1.4.0的使用方法：<br>点击设置,端口号设置为4782,再次点击生成，点击连接设置,连接主机处输入当前物理机的IP地址以及先前设置的端口号,点击生成客户端。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701256482824-de6fc57b-a1bb-42a8-8486-37bf8df54904.png" alt="image.png"><br>会生成一个Client-built.exe的文件，记住其生成的当前地址目录,复制文件将其粘贴到虚拟机Windows10上,切记本次开启虚拟机需要关闭实时保护才可进行粘贴,双击打开。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701222175984-48a11217-104c-45ef-95d9-3457e49ec849.png" alt="image.png"><br>开始监听，成功并获得远程控制等权限。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701256356811-3087fa81-7af1-47dd-946c-d9bb528d4f33.png#averageHue=%23c19752&clientId=u06d8ada9-b546-4&from=paste&height=139&id=X503t&originHeight=174&originWidth=1270&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=23045&status=done&style=none&taskId=u87b97c62-a8a2-4b07-8f5e-a25e2dea235&title=&width=1016" alt="image.png"><br>还是用了另外三款远程工具，其中Quasar.v1.4.0简单的windows10病毒制造软件工具的使用于Quasar v1.4.0的使用方法一样，都是创建一个Client-built.exe的文件去控制win10hei虚拟机<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701495527391-c05b37c0-485c-4ca6-8545-75a4d3508766.png" alt="image.png"><br>我还使用了一款叫做DcRat的远程工具，打开页面为这样的，由于不能制造文件所以本次无法实现，但是可以看到基本页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/40666686/1701497441545-9ec3c0a7-562f-4285-b238-a0145f4e3e85.png#averageHue=%23f6f6f5&clientId=u2fa23ffc-7c80-4&from=paste&height=163&id=u091f45d7&originHeight=183&originWidth=460&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=15246&status=done&style=none&taskId=u54d9f99d-e1e8-4003-aa63-6d457e8232e&title=&width=408.8888888888889" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701495970430-04950e59-4b3b-43c1-bacc-c348e5937b06.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701496328140-dce125f6-46f2-4a5c-9378-166b54b8b0ab.png" alt="image.png"><br>由于和上面情况一样所以无法去生成关于Dcratch1.07远程软件的client.exe文件。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701497765889-fa6edde5-1478-49f3-8d2b-2438e16ee926.png" alt="image.png"></p><p>三：<br>今天所学习的是去进一步完善自己的钓鱼网站,让其表现得更加真实。<br>首先按照老师发的截图找到phpstudy_x64_8.1.1.2.exe,将其下载复制到Win10hei虚拟机中,中途会自动更新并将其安装到虚拟机中,双击打开phpstudy,点击网站,点击管理找到打开根目录这个选项，并清空当前文件,在桌面新建一个txt文件将其命名为index.txt,双击打开这个txt,输入以下代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span> hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将index.html粘贴到C:\phpstudy_pro\WWW的phpstudy的根目录之下,打开phpstudy,点击首页,开启Apache2.4.39,在浏览器输入虚拟键本地IP地址,出现下面结果：<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701258799488-5bd460a7-9400-4349-bea1-150420f08b57.png" alt="image.png"></p><p>在当前的基础上再次编辑index.html,插入一段代码,整体如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./flash.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>luyuguo hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载老师发送的文件flash.js和flash.exe,将其复制到虚拟机之中,对flash.js右键进行编辑在当前位置输入win10hei虚拟机的IP地址<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701259576157-d2649dee-9443-4964-bb9c-a822edb3c6c6.png" alt="image.png"><br>完毕之后将这两个文件放入phpdtudy的根目录下,打开phpstudy,点击首页点击启动Apache,切记在用浏览器查看结果时,应当保证Apache是启动状态。在虚拟机的浏览器中输入127.0.0.1,回车进行查看结果,点击立即升级就会下载flash.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701226960123-a804760a-4245-4652-a83a-cab6e50ae48a.png" alt="image.png"><br>下午:<br>从老师那里下载flag.exe文件,将其复制到win10hei虚拟机的桌面上,再将phpstudy的根目录中的falsh.exe删除，将flag.exe拖到phpstudy的根目录中,重新命名为flash.exe,查看当前虚拟机IP地址是否更改,如果地址发生变化就对flash.js进行改动,，没有就不需要改动,最后在物理机的浏览器上输入当前win10hei虚拟机的ip地址, 出现如下结果。会出现蚊子,点击它们就会消失，点击立即升级就会下载修改好的flash.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701239061245-9078a8ac-d2f1-4c7c-ac90-be0a9914474e.png" alt="image.png"><br>首先需要将flash.exe从phpstudy的根目录中拖出到桌面上,下载老师发的flash中心的安装包flashcenter_pp_install_cn.exe，将其拖入到虚拟机的桌面上,按照老师发的要求下载winrar.zip将其复制到win10hei虚拟机之中,在虚拟机中进行解压,将其解压到桌面上会出现winrar的文件夹,双击打开这个文件夹,找到WinRAR.exe,双击点开,按照这个目录：C:\Users\Administrator\Desktop<br>从而查找到桌面文件,找到flash.exe和flashcenter_pp_install_cn.exe,此时按住ctrl键,依次点击这两个文件,点击左上角的添加,在整个过程中对flash.exe进行了重命名为123.exe。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261438870-8ee4e0e0-ca2a-48d9-a65c-7bd79860344a.png" alt="image.png"><br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261776688-f37c838f-e4f5-4511-8447-c876878bc3ae.png" alt="image.png"><br>高级-&gt;高级自解压选项， 路径设置 C:\windows\Desktop<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261840136-b728739e-62b3-4e92-bd96-c8aeeb0bea41.png" alt="image.png"><br>设置添加<br>C:\windows\Desktop\flashcenter_pp_install_cn.exe<br>C:\windows\Desktop\flash.exe<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261908772-492713e9-7ce2-40bd-a7c5-1330eca96c3b.png" alt="image.png"><br>模式设置全部隐藏<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701261970278-ce06e959-1ad2-4172-a52b-764683475bd4.png" alt="image.png"><br>更新设置<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701262011283-77f53c2e-9248-48bd-822b-a5311e1067d8.png" alt="image.png"><br>最后依次点击确定,生成一个tfk.exe的文件,生成之后需要对其图标进行更改,下载两个压缩包Restorator.rar和ResourceHacker.rar,将其解压到win10hei虚拟机的桌面中,此处以Restorator进行演示。点击Restorator的文件夹,找到Restorator.exe,右键以管理员的方式运行,将flashcenter_pp_install_cn.exe和tfk.exe分别拖入其中。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701262496011-0d60ac6c-38c2-4ad9-a5fe-02ef644f63e1.png" alt="image.png"><br>找到flashcenter_pp_install_cn.exe的图标目录将其复制,再将tfk.exe的图标进行删除,粘贴上flashcenter_pp_install_cn.exe的图标,进行保存。然后win10hei虚拟机进行重启,对tfk.exe而言，图标已经发生变化,此时复制tfk.exe将其粘贴到phpstudy的根目录中并且重新命名为flash.exe。<br>此时打开kali linux虚拟机按照昨天钓鱼网站的步骤生成一个简单的钓鱼网站<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701263278609-ceddb207-6580-4aff-b68a-c1029cf49a40.png" alt="image.png"><br>再在kali linux虚拟机的浏览器上面输入127.0.0.1:8080,出现当前页面<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701263397203-591fc679-9677-47aa-b5a7-cb67d313c7bc.png" alt="image.png"><br>首先缩小页面,点击主文件夹,找到下载新建一个html文件夹,打开页面,右键点击保存在html文件夹中,打开html文件夹,将其中的两个文件进行复制将其粘贴到物理机的桌面上。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701264229193-54eec23c-ba2b-41ae-b889-c4eb4f33767b.png" alt="image.png"><br>将这两个文件压缩为一个压缩包html.zip,将其复制粘贴到win10hei虚拟机的桌面上将其解压为html文件夹,复制其中的文件到phpstudy的根目录中,将Gmail.html重命名为index.html,之前的index.html命名为index123.html。<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701264650995-3577c452-ddb6-490f-ad88-6b842039dbce.png" alt="image.png"><br>打开当前的index123.html为文本编辑状态,复制其中的一串代码插入到index.html中,代码如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./flash.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后分别保存index.html和index123.html于phpstudy的根目录中,打开phpstudy.exe开启Apache服务器,最后在物理机的浏览器输入当前虚拟机win10hei的ip地址192.168.249.133,出现的结果为:<br><img src="https://raw.githubusercontent.com/tfktk/picture/main/img/1701265025499-38bd9db9-7f7f-4222-97d1-65f1c7efbc45.png" alt="image.png"><br>在GMmail页面的基础出现了一个flash的弹窗,点击立即升级就会下在flash.exe文件打开就会出现蚊子,并显示flash中心的安装弹窗。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
